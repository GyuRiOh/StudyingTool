using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace 초등임용복습프로그램
{
    class MathQL2
    {
        public static List<QuestSet> math_Part_NumSys = new List<QuestSet>
        {
            new QuestSet
            {
                Quest = "자연수의 의미에는 A, B, C 3가지가 존재한다. 차례대로 서술하시오. (A, B, C)",
                Answer = "집합수, 순서수, 이름수"
            },

            new QuestSet
            {
                Quest = "A는 집합에 속하는 사물의 개수를 나타내는 것이다. 사용되는 단위나 상황에 따라 한글/한자 수사 사용 여부가 결정된다.",
                Answer = "집합수"
            },

            new QuestSet
            {
                Quest = "A는 순서 및 차례를 나타내는 수이다. 예를 들어 1등, 2등, 3등이 있으며, 한자나 한글 수사 모두 가능하다.",
                Answer = "순서수"
            },

            new QuestSet
            {
                Quest = "A는 사물의 이름 대신에 사용하는 수이다. 예를 들어 주민등록번호나 전화번호, 축구선수의 등번호 등이 있다.",
                Answer = "이름수"
            },

            new QuestSet
            {
                Quest = "A는 둘씩 짝을 지을 수 없는 수를 말하며, B는 둘씩 짝을 지을 수 있는 수를 말한다.",
                Answer = "홀수, 짝수"
            },

            new QuestSet
            {
                Quest = "홀수와 짝수를 지도할 때 A 조작활동을 통해 B 파악하도록 지도한다.",
                Answer = "구체적, 직관적으로"
            },

            new QuestSet
            {
                Quest = "수 읽기(명수법)에는 A, B 2가지 방법이 있다. 순서대로 서술하시오.",
                Answer = "우리말 수사, 한자 수사"
            },

            new QuestSet
            {
                Quest = "수 세기 원리 A, B, C, D, E 5가지를 순서대로 쓰시오.",
                Answer = "추상의 원리, 집합수의 원리, 안정된 순서의 원리, 일대일 대응의 원리, 순서 무관의 원리"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 원리 중 하나로, 셀 수 있는 대상은 어떤 사물인지에 상관 없이 셀 수 있고, 상상의 것도 셀 수 있음을 가리킨다.",
                Answer = "추상의 원리"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 원리 중 하나로, 사물을 셀 때 마지막에 붙여진 수사가 그 집합의 전체 수를 의미함을 가리킨다.",
                Answer = "집합수의 원리"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 원리 중 하나로, 수를 센다는 것은 변하지 않는 어떤 계열로 정렬되므로, 정해진 수 계열을 이용해야 함을 가리킨다.",
                Answer = "안정된 순서의 원리"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 원리 중 하나로, 수를 셀 때 사물 하나에 수사가 하나씩 대응되어야 함을 의미한다.",
                Answer = "일대일 대응의 원리"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 원리 중 하나로, 대상의 수를 셀 때 어떤 대상을 먼저 셀 것인지와 관계 없이 대상의 수는 항상 일정함을 가리킨다.",
                Answer = "순서 무관의 원리"
            },

            new QuestSet
            {
                Quest = "수 세기 모델 A, B, C 3가지를 모두 서술하시오. ",
                Answer = "비례 모델, 비비례 모델, 수판 모델"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 모델 중 하나로, 수의 크기와 자료의 양이 비례하는 모델이다. 예로는 퀴즈네어 막대(색 막대), 수 모형, 연결 큐브 등이 있다. ",
                Answer = "비례 모델"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 모델 중 하나로, 크기와 상관 없이 색깔이나 위치로 수의 크기를 나타내는 추상적인 모델이다. 예로는 화폐, 칩, 주판 등이 있다.",
                Answer = "비비례 모델"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 모델 중 하나로, 규칙성을 촉진하고 수의 묶음 인식을 발달하게 하고, 자릿값을 이해하게 하는 모델이다.",
                Answer = "수판 모델"
            },

            new QuestSet
            {
                Quest = "수 세기 전략 4가지를 순서대로 쓰시오.",
                Answer = "이어 세기, 거꾸로 세기, 묶어 세기, 뛰어 세기"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 전략 중 하나로, 수를 순차적으로 이어서 세는 방법이다. 덧셈 학습의 발달을 위해 사용한다.",
                Answer = "이어 세기"
            },

            new QuestSet
            {
                Quest = "A는 수 세기 전략 중 하나로, 어떤 수에서 시작하여 반대 순서로 수 이름을 제시하는 전략이다. 뺄셈 학습의 발달을 위해 사용한다.",
                Answer = "거꾸로 세기"
            },

            new QuestSet
            {
                Quest = "수 세기 전략을 사용하는 이유는 A 파악을 하기 위해서다.",
                Answer = "수의 계열"
            },

            new QuestSet
            {
                Quest = "기수법의 A, B, C 3가지 방법을 서술하시오.",
                Answer = "가법적 기수법, 승법적 기수법, 위치적 기수법"
            },

            new QuestSet
            {
                Quest = "A는 기수법 중 하나로, 각 숫자를 쓰는 자리에 자릿값을 미리 정하여 그 자리에 쓰이는 숫자와 그 자리에 정해진 자릿값을 곱한 다음 이들의 값을 더하여 전체 수의 값을 나타내는 방법을 말한다.",
                Answer = "위치적 기수법"
            },

            new QuestSet
            {
                Quest = "A는 우리나라 기수법의 특징이며, '수는 전개식으로 나타낼 수 있으며 각 자리의 값을 의미한다.'는 내용을 가리킨다.",
                Answer = "가법성"
            },

            new QuestSet
            {
                Quest = "큰 수 지도의 유의점 중 하나는 자릿값의 A 단위를 생략하는 것을 반올림, 올림, 버림과 같은 수의 B과 연결짓지 않는 것이다. ",
                Answer = "작은, 어림"
            },

            new QuestSet
            {
                Quest = "큰 수 지도의 유의점 중 하나는 자리 수가 많아 한 눈에 알아보기 어려운 경우 A의 자리부터 B 자리씩 나누어 표시하는 것이다.",
                Answer = "일, 네"
            },

            new QuestSet
            {
                Quest = "큰 수 지도의 유의점 중 하나는 A, B 단위의 수를 나타내기에 어려움이 있는 경우 수를 나타낼 수 있는 C를 사용하여 알맞은 숫자를 넣어가며 나타내는 연습을 하도록 지도하는 것이다.",
                Answer = "억, 조, 표"
            },

            new QuestSet
            {
                Quest = "수의 크기 비교 방법은 다음과 같다. 1. A가 같은지 다른지 비교한다. 2. A가 다르면 A가 많은 쪽이 더 B. 3. 가장 C 자리 수부터 차례로 비교하여 수가 큰 쪽이 더 크다.  ",
                Answer = "자릿수, 크다, 높은"
            },

            new QuestSet
            {
                Quest = "수의 지도 순서는 다음과 같다. ① 한 자리 수 : 1~5 집합수, A → 6~9 집합수, A → B 큰 수, B 작은 수. ② 두 자리 수 : 9 다음의 수(C) → 십몇 →  C개씩 묶어 세기 → 50까지의 수 →  수 비교(D → 60, 70, 80, 90 → 99까지의 수 → 수 비교(D 사용한다) →  E와 F.",
                Answer = "순서수, 1, 10, 부등호, 짝수, 홀수"
            },

            new QuestSet
            {
                Quest = "수의 지도 순서는 다음과 같다. ③ 세 자리 수 : 90보다 A 큰 수 → 몇백 → B 자리 수 → C보다 1 큰 수(간단히 언급). ④ 네 자리 수 : D이 10개인 수 (1000) → 몇천 → E 자리 수",
                Answer = "10, 세, 999, 100, 네"
            },

            new QuestSet
            {
                Quest = "수의 지도 순서는 다음과 같다. ⑤ 큰 수 :  A이 10개인 수 (10000) →  B 자리 수 →  십만, 백만, 천만 → C와 조. ⑥ 약수와 배수 : 약수와 배수의 D → 약수와 배수의 E → 공약수와 최대공약수 → 공배수와 최소공배수",
                Answer = "1000, 다섯, 억, 의미, 관계"
            },

            new QuestSet
            {
                Quest = "약수의 특징은 다음과 같다. ① 모든 자연수는 A로 나누어떨어지므로 A은 모든 수의 약수이다. ② 어떤 수의 약수 중 가장 B 수는 A이다. ③ 어떤 수의 가장 C 약수는 자기 자신이다.",
                Answer = "1, 작은, 큰"
            },

            new QuestSet
            {
                Quest = "약수의 특징은 다음과 같다. ④ 어떤 수의 약수에는 A과 B이 항상 포함된다. ⑤ 약수의 수는 수가 크다고 항상 C 것은 아니다. ⑥ 약수의 수가 D인 수는 두 수를 2번 곱한 수(제곱 수)이다.",
                Answer = "1, 자기 자신, 많은, 홀수"
            },

            new QuestSet
            {
                Quest = "두 수의 최대 공약수를 구하는 방법은 다음과 같다. ① 약수를 A하여 구하는 방법, ② 여러 수의 B으로 나타낸 곱셈식 중에서 C으로 들어있는 곱셈식을 이용하여 구하는 방법 (소인수분해), ③ 두 수의 B으로 나타낸 곱셈식에서 C으로 들어있는 수 가운데 가장 D 수를 찾아 구하는 방법. ④ 두 수의 C인 E를 이용하여 구하는 방법 (호제법)",
                Answer = "나열, 곱, 공통, 큰, 약수"
            },

            new QuestSet
            {
                Quest = "배수의 특징은 다음과 같다. ① 어떤 수의 배수는 무수히 A. ② 모든 자연수는 B의 배수이다. ③ 어떤 수의 배수 중 가장 작은 수는 C이다. ",
                Answer = "많다, 1, 자기 자신"
            },

            new QuestSet
            {
                Quest = "두 수의 최소공배수를 구하는 방법은 다음과 같다. ① 배수를 A하여 구하는 방법. ② B의 곱으로 나타낸 곱셈식을 이용하여 구하는 방법. ③ C의 곱으로 나타낸 곱셈식을 이용하여 구하는 방법. ④ C의 공통인 D를 이용하여 구하는 방법",
                Answer = "나열, 여러 수, 두 수, 약수"
            },

            new QuestSet
            {
                Quest = "약수와 배수의 관계는 A이다.",
                Answer = "곱의 관계"
            },

            new QuestSet
            {
                Quest = "어떤 구체물들의 집합에서 이질적인 요소들은 제거하고 동질적인 요소만을 추출하여 개념을 형성하는 과정을 A라 부른다. 이는 서로 다른 요소를 제거하고, 공통적인 성질만을 추출하는 과정이라는 뜻이다.",
                Answer = "추상화"
            },

            new QuestSet
            {
                Quest = "A 추상화는 외부 대상이 갖는 성질들로부터 일반화된 지식을 이끌어내는 추상화이다.",
                Answer = "경험적"
            },

            new QuestSet
            {
                Quest = "A 추상화는 활동과 조작에 대한 일반적 조정(반사, 반성)으로부터 이루어지는 추상화이다.",
                Answer = "반영적"
            },

            new QuestSet
            {
                Quest = "사물의 수를 직접 세어보는 활동으로부터 수 개념을 이끌어내는 과정을 기본 이론과 연계하면, 사물의 수를 직접 세어 보는 활동은 A(피아제), B(프로이덴탈), C(반 휠레)이며, 수 개념을 도입하는 것은 D(피아제), E(프로이덴탈), F(반 휠레) ⇒ G 추상화(활동에 대한 반성)이다.",
                Answer = "내용, 현상, 대상, 형식, 본질, 수단, 반영적"
            },

            new QuestSet
            {
                Quest = "여러 가지 사물의 수가 한 개임을 알고 이를 A하여 '1'로 나타내고, 의미를 사물로 표현하도록 할 수 있다.",
                Answer = "반영적 추상화"
            },

            new QuestSet
            {
                Quest = "관찰, 탐구 활동을 통하여 대상은 다르지만 집합수가 같음을 알고 공통적인 속성을 이끌어 냄으로써 기를 수 있는 수학 교과 역량은?",
                Answer = "추론"
            },

            new QuestSet
            {
                Quest = "수를 쓰는 방법을 A라고 한다.",
                Answer = "기수법"
            },

            new QuestSet
            {
                Quest = "지우개 7개는 '일곱 개'(A)로 읽고 아파트 7층은 'B'(순서수)로 읽는다.",
                Answer = "집합수, 칠 층"
            },

            new QuestSet
            {
                Quest = "9까지의 수로 A를 나타낼 수 있다.",
                Answer = "순서수"
            },

            new QuestSet
            {
                Quest = "9까지의 수의 순서를 앎으로써 1부터 9까지의 A을 알 수 있다.",
                Answer = "수의 계열"
            },

            new QuestSet
            {
                Quest = "수의 계열을 이해하는 방법으로는 수를 A하거나 B하는 것이 있다.",
                Answer = "이어 세기, 거꾸로 세기"
            },

            new QuestSet
            {
                Quest = "바둑돌 → ○를 그리기 → 숫자로 나타내기 과정은 A → B → C 라고 할 수 있다.",
                Answer = "구체물, 반구체물, 추상물"
            },

            new QuestSet
            {
                Quest = "퀴즈네어 막대의 장점으로는 수의 A를 B적으로 알 수 있다는 것과, 대소 C를 할 수 있다는 점이 있다.",
                Answer = "크기, 직관, 비교"
            },

            new QuestSet
            {
                Quest = "0을 지도하는 방법으로는 구체물을 활용하여 하나씩 줄어드는 활동을 통해 A로 0을 도입한다. (1보다 1 작은 수)",
                Answer = "아무것도 없는 것"
            },

            new QuestSet
            {
                Quest = "0의 역할은 A, B 두 가지가 있다.",
                Answer = "공집합, 자리지기"
            },

            new QuestSet
            {
                Quest = "'어느 수가 더 클까요?' 차시는 수의 A를 B하는 활동을 한다.",
                Answer = "크기, 비교"
            },

            new QuestSet
            {
                Quest = "물건의 수를 비교할 때에는 'A', 'B' 로 말하지만 수를 비교할 때에는 'C', 'D'로 말한다는 점에 유의한다.",
                Answer = "많다, 적다, 크다, 작다"
            },

            new QuestSet
            {
                Quest = "바둑돌과 숫자 연결하기를 브루너의 EIS이론과 연계하면 바둑돌은 A이고 숫자는 B이다.",
                Answer = "영상적 표상, 상징적 표상"
            },

            new QuestSet
            {
                Quest = ";어느 수가 더 클까요?' 차시의 심화 활동 방법으로는 A, B의 크기 비교하기 활동이 있다.",
                Answer = "세 수, 네 수"
            },

            new QuestSet
            {
                Quest = "★A : 3명씩 모여야 해. ★B : 4 다음에는 어디로 가야 하지? ★C : 7번 선수가 등장합니다~!",
                Answer = "집합수, 순서수, 이름수"
            },

            new QuestSet
            {
                Quest = "10 이상의 수를 10개씩 묶음과 낱개로 표현하는 활동은 A의 기초 개념(B의 원리)를 이해하는데 필요한 기초적 경험을 제공한다.",
                Answer = "위치적 기수법, 자릿값"
            },

            new QuestSet
            {
                Quest = "A, B 등으로 수를 세어보는 활동은 곱셈 개념 형성의 기초적 지식과 기능을 익히게 한다.",
                Answer = "이어 세기, 묶어 세기"
            },

            new QuestSet
            {
                Quest = "A, 가르기 활동을 통해 얻고자 하는 것은 첫째로는 B 익히기, 둘째로는 덧셈과 뺄셈의 기초 개념 형성이 있다. ",
                Answer = "모으기, 수 감각"
            },

            new QuestSet
            {
                Quest = "10을 모으기, 가르기 하는 것은 10에 대한 A 개념을 이해하고 덧셈 뺄셈의 기초 개념을 형성하기 위함이다. ",
                Answer = "보수"
            },

            new QuestSet
            {
                Quest = "'10을 여러 가지 방법으로 가르기'를 통해 함양할 수 있는 수학 교과 역량은?",
                Answer = "창의·융합",
                Reference = "창의·융합 : 새롭고 의미 있는 아이디어를 다양하고 풍부하게 산출할 수 있는 수학적 과제를 제공하여 학생의 창의적 사고를 촉진시킨다."
            },

            new QuestSet
            {
                Quest = "수를 지도할 때 이용할 수 있는 교구는 다음과 같다. 1. A. 2. B 막대. 3. 수 모형. 4. 산가지(수수대, 싸리 등을 깨끗하고 짧게 잘라 만든 것) -> 이때 1, 4는 C 지도 시 편리하다.",
                Answer = "연결 큐브, 퀴즈네어, 묶어 세기"
            },

            new QuestSet
            {
                Quest = "14를 A개씩 묶음 1개와 B 4개로 표현할 수 있다.",
                Answer = "10, 낱개"
            },

            new QuestSet
            {
                Quest = "동일한 양을 여러 가지 다른 방식으로 표현하는 것을 A라고 한다. 예를 들어 1/2를 2/4로 표현하고 이를 다시 0.5로 표현하는 방식이 해당된다.",
                Answer = "동치 표현"
            },

            new QuestSet
            {
                Quest = "동치 표현과 연계되는 수학 교과 역량은 무엇인가?",
                Answer = "창의·융합"
            },

            new QuestSet
            {
                Quest = "모으기와 가르기 활동의 의미는 첫째로 A을 확립하고, 둘째로 B와 C의 기초 개념을 형성한다는 데에 있다.",
                Answer = "수 개념, 덧셈, 뺄셈"
            },

            new QuestSet
            {
                Quest = "'친구들이 오이를 땄다. 몇 개인지 세어보자 → 오이의 수 만큼 O를 그려보자 → 모형으로 나타내보자.' 이를 A → B / C의 형태로 정리하면? ",
                Answer = "현실 장면, 기호의 세계, 수학적 모델링"
            },

            new QuestSet
            {
                Quest = "실세계 현상을 간단한 표, 그래프, 수식, 다이어그램 등과 같은 수학적 모델을 이용하여 정리하고 해석하는 활동을 A라고 한다.",
                Answer = "수학적 모델링"
            },

            new QuestSet
            {
                Quest = "두 자리 수와 관련된 교학방 : 두 자리 수를 A개씩 B와 C로 나타내게 하여 D의 기초 개념을 형성하게 한다. ",
                Answer = "10, 묶음, 낱개, 위치적 기수법"
            },

            new QuestSet
            {
                Quest = "수 계열과 세어야 할 대상들을 일 대 일 관계로 연결하며 세는 수 세기 유형은?",
                Answer = "합리적 수 세기"
            },

            new QuestSet
            {
                Quest = "수의 크기를 비교하는 방법은 A개씩 묶음을 먼저 비교하고, B를 비교해 보는 것이 있다. 이때 C는 사용하지 않는다.",
                Answer = "10, 낱개, 부등호"
            },

            new QuestSet
            {
                Quest = "1-2-1. 100까지의 수 단원에서 위치적 기수법의 기초 개념을 형성하는 방법은 A까지의 수를 10개 씩 B과 C로 나타내어 D 쓰고 E 활동을 하는 것이다.",
                Answer = "10, 묶음, 낱개, 세고, 읽는"
            },

            new QuestSet
            {
                Quest = "54를 '504' 또는 '5104'로 쓰는 경우는 A의 개념이 형성되지 않은 경우이다. 이때 지도 방안으로는 B개씩 묶음과 낱개로 나타내도록 한다.",
                Answer = "자릿값, 10"
            },

            new QuestSet
            {
                Quest = "두 자리 수의 대소 비교를 할 때, 묶음의 수가 A 경우 묶음의 수를 비교하고, 묶음의 수가 B 경우 낱개의 수를 비교한다.",
                Answer = "같은, 다른",
                Reference = "십의 자리부터 먼저 비교하고 일의 자리를 나중에 비교하도록 한다."
            },

            new QuestSet
            {
                Quest = "자릿값에 대한 수 개념의 기초를 형성하는 방법으로는, 낱개를 A개씩 묶은 것을 A으로 인식하고 묶음의 수를 '십' 앞에 붙여 읽도록 한다.",
                Answer = "10"
            },

            new QuestSet
            {
                Quest = "학생들이 구체물의 수를 10개 씩 묶어서 세고 수를 쓰는 활동을 통해 발견할 수 있는 것은, 10개씩 묶음 x개, 낱개 y개를 'xy' 라고 쓰고 'A'라고 읽는 규칙을 발견하도록 하는 것이다. 이는 사례에서 B을 발견하여 C하는 과정이다. ",
                Answer = "x십y, 규칙성, 일반화"
            },

            new QuestSet
            {
                Quest = "100까지의 수 범위에서 두 수의 크기를 비교하는 방법은, 십의 자리 수가 A 때 십의 자리 수가 더 큰 수를 찾아보고, 십의 자리 수가 B 때 일의 자리 수가 더 큰 수를 찾는 것이다.",
                Answer = "다를, 같을",
                Reference = "십의 자리, 일의 자리라는 용어는 사용하지 않는다."
            },

            new QuestSet
            {
                Quest = "짝수와 홀수의 개념 도입 방법으로는 생활 속에서 둘 씩 A을 지어보는 활동이 있다. 이를 통해 짝수와 홀수를 B으로 이해하게 도울 수 있다.",
                Answer = "짝, 직관적"
            },

            new QuestSet
            {
                Quest = "자리와 자릿값, 그리고 각 자리의 숫자가 나타내는 값을 비교해보자. 자리는 A, 십의 자리, 일의 자리 등이 있고, 자릿값은 A을 B, 십의 자리를 10, 일의 자리를 1로 표시한다. 각 자리의 숫자가 나타내는 값은 예를 들어 345라는 숫자가 있을 때 3은 C, 4는 D, 5는 E를 가리킨다. ",
                Answer = "백의 자리, 100, 300, 40, 5"
            },

            new QuestSet
            {
                Quest = "두 자리 수 에서 성립한 것이 세 자리 수에도 성립하는지 추측하는 사고는 A이다.",
                Answer = "유추적 추론"
            },

            new QuestSet
            {
                Quest = "실생활 상황에서 세 자리 수와 관련된 정보를 찾고, 이를 좀 더 정돈하기 위해 그 상황을 수 모형으로 변환하고, 이를 기반으로 기호화하는 활동은?",
                Answer = "정보 처리",
                Reference = "필수적인 정보를 찾고 이를 변환한다."

            },

            new QuestSet
            {
                Quest = "세 자리 수와 관련된 수학적 용어를 구두 또는 지필로 표현하는 활동은?",
                Answer = "의사소통"

            },

            new QuestSet
            {
                Quest = "주어진 대상을 여러 가지 방법으로 세어 보거나 수 모형을 사용해 234를 여러 가지 방법으로 나타내어 보는 활동은?",
                Answer = "창의·융합",
                Reference = "하나의 정확한 답보다는 여러 개의 가능한 답을 산출하는 것으로써 창의성과 관련이 있다."

            },

            new QuestSet
            {
                Quest = "몇 백의 개념과 세 자리 수의 개념 도입을 비교해보자. 몇 백의 개념은 A를 이용해 100씩 몇 묶음인지 세어보는 활동이다. 세 자리 수의 개념은 B와 A의 수를 세어보는 활동이다. A의 수를 세는 언어 표현은 비형식적 표현이고, 이를 수 자체를 세는 언어 표현을 사용하여 형식적 표현을 할 수 있도록 지도한다.",
                Answer = "수 모형, 구체물"

            },

            new QuestSet
            {
                Quest = "'사십일'을 '401'로 잘못 쓰는 경우는 A을 이용하여 교정한다.",
                Answer = "자릿값 판"

            },

            new QuestSet
            {
                Quest = "100을 십 모형과 백 모형으로 각각 나타내게 한 후 십 모형 10개는 백 모형 1개로 나타내는 것은 A와 B이다.",
                Answer = "묶기, 교환하기"

            },

            new QuestSet
            {
                Quest = "실생활 문제 상황을 수학적으로 나타내고 분석하여 결론을 도출하고 이를 상황에 맞게 해석하는 능력은 A 또는 B이다.",
                Answer = "수학적 모델링, 정보 처리",
                Reference = "실생활 및 수학적 문제 상황에서 적절한 자료를 탐색하여 수집하고, 목적에 맞게 정리, 분석, 평가하며, 분석한 정보를 문제 상황에 적합하게 활용할 수 있게 한다."

            },

            new QuestSet
            {
                Quest = "500을 100씩 세어 보고 500만큼 묶어보는 활동의 목적은 100씩 A 세어 보게 함으로써 (100-200-300-400-500) B을 이해하도록 한다. 100씩 뛰어서 셀 때 마지막 C(오백)는 D의 크기를 나타내는 것(D수의 원리)이다.",
                Answer = "뛰어서, 수 계열, 수사, 집합"

            },

            new QuestSet
            {
                Quest = "학생들은 몇 십의 구성 원리가 몇 백에서도 성립한다는 사실을 A할 수 있다.",
                Answer = "유추"

            },

            new QuestSet
            {
                Quest = "꽃의 수를 세는 문제 상황을 수 모형과 기호로 나타내는 것은 A 또는 B 능력이다.",
                Answer = "수학적 모델링, 정보 처리"

            },

            new QuestSet
            {
                Quest = "'각 자리의 숫자는 얼마를 나타낼까요?' 학습 목표에서 백의 자리는 100이라는 A을, 십의 자리는 10이라는 A을, 일의 자리는 1이라는 A을 가진다는 것을 이해할 수 있다. 또한 각 자리의 숫자가 나타내는 값을 이해할 수 있다. 또한 세 자리 수를 '(몇 백)+(몇 십)+(몇)'으로 표현할 수 있다. (가법성)",
                Answer = "자릿값"

            },

            new QuestSet
            {
                Quest = "각 자리가 나타내는 값의 크기를 직관적으로 이해하는 데 도움이 되는 것은 A의 장점이다. B로써 수의 비율에 맞추어 십 모형은 일 모형의 10배, 백 모형은 십 모형의 10배를 나타낸다.",
                Answer = "수 모형, 비례 모델"

            },

            new QuestSet
            {
                Quest = "오른쪽부터 왼쪽으로 한 자리씩 옮겨 가며 차례로 일, 십, 백이 되며 한 자리씩 왼쪽으로 갈 때마다 10배씩 커지는 원리를 십진법의 A라고 한다.",
                Answer = "자릿값의 원리"

            },

            new QuestSet
            {
                Quest = "숫자 부채로 세 자리 수를 나타내는 활동은 구체물(수 모형), 수사, 숫자 사이의 연결을 경험할 수 있는 기회이다. 또한 궁극적으로 놀이를 통해 세 자리 수의 이해를 공고히 하기 위한 활동이며, 이는 A에 대한 B로 이어진다.",
                Answer = "자연수, 관계적 이해"

            },

            new QuestSet
            {
                Quest = "134를 수 모형을 이용해 백 모형 1개, 십 모형 3개, 일 모형 4개 또는 백 모형 1개, 십 모형 2개, 일 모형 14개로 나타내는 것은 A 표현이며 수학 교과 역량 가운데 B 능력이다.",
                Answer = "동치, 창의·융합"

            },

            new QuestSet
            {
                Quest = "세 자리 수에서 성립한 십진법, A 등의 이해를 통해 B적 추론을 함으로써 네 자리 수를 학습한다.",
                Answer = "자릿값의 원리, 유추"

            },

            new QuestSet
            {
                Quest = "1000을 지도하는 방법은 다음과 같다. ① 구체물을 A씩 B 묶음으로 세어보기. ② 1000을 수 모형으로 놓아 알아보기 (C 모델) : 묶기과 교환하기. ③ 1000 구성하기 : 숫자 칩(D 모델)으로 천을 직접 그리거나 붙임딱지로 나타낸다. ",
                Answer = "100, 10, 비례, 비비례"

            },

            new QuestSet
            {
                Quest = "네 자리 수와 관련된 정보 A, B, C를 찾아 A를 구체물, B를 반구체물, C를 추상물로 변환한다. ",
                Answer = "수 모형, 그림, 기호"

            },

            new QuestSet
            {
                Quest = "몇 천을 나타낼 때 수 모형(A)을 사용할 수도 있고, 지폐(B)를 사용할 수도 있다.",
                Answer = "비례 모델, 비비례 모델"

            },

            new QuestSet
            {
                Quest = "십진법에서 0의 역할은 A이다.",
                Answer = "자리 지기",
                Reference = "자리 지킴이"

            },

            new QuestSet
            {
                Quest = "각 자리의 숫자가 나타내는 값을 알아볼 때 네 자리 수를 그림으로 변환할 때는 브루너의 EIS 이론 가운데 I(A)라고 할 수 있다. 또한 나타낸 그림을 보고 각 자리의 숫자가 나타내는 값을 수학적 언어로 설명하면 S(B)가 된다. ",
                Answer = "영상적 표상, 기호적 표상"

            },

            new QuestSet
            {
                Quest = "'뛰어 세어 볼까요?' 차시의 목적은 A을 파악하는 것이고, '어느 수가 더 클까요?' 차시의 목적은 B를 비교하는 것이다.",
                Answer = "수의 계열, 수의 크기"

            },

            new QuestSet
            {
                Quest = "네 자리 수의 크기를 비교하는 방법은 A의 자리부터 비교하고 A의 자리가 같으면 B의 자리, B의 자리가 같으면 C의 자리, C의 자리가 같으면 D의 자리 수를 비교한다.",
                Answer = "천, 백, 십, 일"

            },

            new QuestSet
            {
                Quest = "큰 수를 도입하는 방법으로는 학생들에게 친숙한 1000A, 10000A 같은 B의 단위에서 큰 수롤 도입하는 것이 있다.",
                Answer = "원, 돈",
                Reference = "1000원짜리 지폐가 10장 있으면 10000원이 된다는 개념이다."

            },

            new QuestSet
            {
                Quest = "수가 크더라도 자릿값의 작은 단위는 생략하지 않는다. (O 아니면 X)",
                Answer = "X"

            },

            new QuestSet
            {
                Quest = "억, 조 단위의 수가 얼마만큼이 수인지는 이해하고 있으나 숫자나 말로 A하는 활동에 어려움이 있는 경우 지도 방안은 B을 사용하여 억, 조 단위의 수를 나타내어 보고 일의 자리부터 네 자리씩 나누어 구분한 뒤 만, 억, 조를 붙여 읽는 방법을 연습하는 것이다.",
                Answer = "표현, 수 카드"

            },

            new QuestSet
            {
                Quest = "10, 100, 1000, 10000이 어떤 규칙으로 늘어나는지 알아보는 활동의 목적은 A적 추론에 의해 B의 원리를 인식할 수 있게 하는 것이다.",
                Answer = "귀납, 십진법"

            },

            new QuestSet
            {
                Quest = "자리 수가 많아 한 눈에 알아보기 어려운 경우 A의 자리부터 B 자리씩 나누어 표시를 하고 읽는다.",
                Answer = "일, 네"

            },

            new QuestSet
            {
                Quest = "억과 조 단위의 수를 지도할 때 천만 자리 이하의 수를 'A'으로 하여 억과 조 단위의 B에 대한 C 및 D에 집중할 수 있도록 한다. ",
                Answer = "0, 큰 수, 감각, 양감"

            },

            new QuestSet
            {
                Quest = "일상생활에서 큰 수를 표현할 때는 A 자리마다 (1000배마다) B를 사용하여 나타낸다.",
                Answer = "세, 쉼표"

            },

            new QuestSet
            {
                Quest = "A에 필요한 조건을 찾아 A 방법을 바르게 추론한 경우 지도 방법은, ① 자신의 A 과정을 설명해보게 하는 것과 ② 또 다른 A 방법은 없는지 탐색해보게 하고 ③ 유사한 문제를 만들어보게 한다.",
                Answer = ""

            },

            new QuestSet
            {
                Quest = "고대 이집트 숫자와 인도 아라비아 숫자를 비교해보자. 고대 이집트 숫자는 A을 사용하지 않는 반면 인도 아라비아 숫자는 A을 사용한다. 이집트 숫자는 수를 쓰는 데 시간이 많이 걸리지만, 인도 아라비아 숫자는 수를 쓰기가 쉽다. 고대 이집트 숫자는 B을 알기 어렵지만 인도 아라비아 숫자는 큰 수의 경우 B을 헤아려 읽는다. 고대 이집트 숫자는 수를 읽기 쉬우며, 인도 아라비아 숫자는 B을 맞추어 계산가히 쉽다.",
                Answer = "0, 자릿값"

            },

            new QuestSet
            {
                Quest = "약수와 배수의 관계를 이해하는 데 바탕이 되는 것은, A의 범위에서 약수와 배수를 알아보고, B의 관계를 통해서 이해하는 것이다.",
                Answer = "자연수, 곱"

            },

            new QuestSet
            {
                Quest = "어떤 수를 나누어 떨어지게 하는 수를 A라고 한다.",
                Answer = "약수"

            },

            new QuestSet
            {
                Quest = "어떤 수를 1배, 2배, 3배... 한 수를 A라고 한다.",
                Answer = "배수"

            },

            new QuestSet
            {
                Quest = "어떤 두 수가 있을 때, 두 수의 공통인 약수는 A라고 한다. 그리고 두 수의 A 가운데 가장 큰 수를 B라고 한다.",
                Answer = "공약수, 최대공약수"

            },

            new QuestSet
            {
                Quest = "최대공약수를 구하는 방법은 ① A으로 나타낸 곱셈식 이용 ② B으로 나타낸 곱셈식 이용이 있다.",
                Answer = "두 수의 곱, 여러 수의 곱"

            },

            new QuestSet
            {
                Quest = "두 수의 곱으로 나타낸 곱셈식을 이용하는 방법으로는 ① 두 수의 곱으로 나타낸 곱셈식에 A으로 들어있는 수 중에서 가장 B 수를 찾아 최대공약수를 구한다. ② 두 수를 A으로 나눌 수 있는 수 중에서 가장 B 수를 찾아 최대공약수를 구한다.",
                Answer = "공통, 큰"

            },

            new QuestSet
            {
                Quest = "여러 수의 곱으로 나타낸 곱셈식을 이용하는 방법으로는 ① 여러 수의 곱으로 나타낸 곱셈식 중 A으로 들어있는 수 중 가장 B 수가 최대공약수 ② 두 수의 A인 C를 구하여 최대공약수를 구하는 것이 있다. ",
                Answer = "공통, 큰, 약수"

            },

            new QuestSet
            {
                Quest = "A는 가장 작은 수들의 곱으로 나타낸 곱셈식이다. 독립적인 방법으로 형식화하지 않으며, 나눗셈 방식을 설명하기 위한 보조적 역할로 제한한다.",
                Answer = "소인수분해"

            },

            new QuestSet
            {
                Quest = "호제법은 ① 1 이외의 A로 12와 18을 나누고 각각의 몫을 밑에 씀 ② 1 이외의 A로 밑에 쓴 두 몫을 나누고 각각의 몫을 밑에 씀 ③ 1 이외의 A가 없을 때까지 나눗셈을 계속함 ④ 나눈 A들의 곱이 처음 두 수의 B가 됨",
                Answer = "공약수, 최대공약수"

            },

            new QuestSet
            {
                Quest = "공배수는 두 수의 A인 배수이며, 최소공배수는 두 수의 공배수 가운데 가장 B 수이다.",
                Answer = "공통, 작은"

            },

            new QuestSet
            {
                Quest = "최소공배수를 구하는 방법에는 두 수의 A으로 나타낸 곱셈식을 이용하는 것과 여러 수의 A으로 나타낸 곱셈식을 이용하는 것이 있다.",
                Answer = "곱"

            },

            new QuestSet
            {
                Quest = "두 수의 곱으로 나타낸 곱셈식을 이용하는 방법은, 주어진 두 수를 두 수의 곱으로 나타낸 곱셈식 중에서 A으로 들어있는 수가 가장 B 식을 찾아 A인 수와 C 수를 곱하여 최소공배수를 구한다.",
                Answer = "공통, 큰, 남은"

            },

            new QuestSet
            {
                Quest = "여러 수의 곱으로 나타낸 곱셈식을 이용하는 방법은 ① A으로 들어있는 수에 B 수를 곱하여 구하는 것 ② 두 수의 A인 C를 이용하여 구하는 것이 있다. ",
                Answer = "공통, 남은, 약수"

            },

            new QuestSet
            {
                Quest = "5-1-2. 약수와 배수 단원에서 폴리아의 문제 해결 과정 중 '반성' 단계에서 할 수 있는 활동은 다음과 같다. 1. A. 2. B. 3. C",
                Answer = "해결 과정 검토, 다른 해결 전략 탐색, 새로운 문제 만들기"

            },

            new QuestSet
            {
                Quest = "새로운 문제를 만들 때 주어진 조건을 변형하는 것은 A 전략이다.",
                Answer = "도전"

            },

            new QuestSet
            {
                Quest = "A는 분수를 이해하는 방법이다. (연속량 -> 이산량)",
                Answer = "양의 등분할"

            },

            new QuestSet
            {
                Quest = "A가 같은 분수는 B가 클수록 크기가 크고, 단위분수는 A가 작을 수록 크기가 크다.",
                Answer = "분모, 분자"

            },

            new QuestSet
            {
                Quest = "분수의 의미는 다음과 같다. ① A-B : A를 똑같이 나눈 것 중 일B의 크기를 나타내는 것, 등분할(연속량 → 이산량) ② C : '(자연수) / (자연수)'에서 나눗셈의 C을 분수로 나타내는 것. ③ D : 두 양의 상대적인 크기인 비율을 뜻하는 분수. 비교하는 양 : 기준량 ④ E : E하려는 양이 주어진 단위의 정확한 몇 배가 아닐 경우 주어진 단위를 똑같이 분할하여 측정 결과를 자세히 나타내는 분수 (자연수의 단위로 사물을 정확 측정 X, 측정 단위를 세분화) ⑤ F : x/y만큼 확대하거나 축소하는 것 또는 어떤 값을 다른 값에 대응시키는 역할(함수)",
                Answer = "전체, 부분, 몫, 비, 측정, 연산자"

            },

            new QuestSet
            {
                Quest = "분수 지도 모델은 다음과 같다. ① A : 영역이 전체이고 부분은 크기와 동일한 것으로 이루어진 모델. ② B : 띠 모양의 임의의 단위 길이를 등분할한 모델. 예로는 수직선이 있다. ③ C : 사물의 한 집합을 하나의 전체(단위)로 사용한다.",
                Answer = "영역 모델, 길이 모델, 집합 모델"

            },

            new QuestSet
            {
                Quest = "분자가 분모보다 작은 분수, 1보다 작은 분수를 A라고 한다. 분자가 분모와 같거나 분모보다 더 큰 분수를 B라고 한다. 자연수와 진분수로 이루어진 분수를 C라고 한다. 분자가 1인 분수를 D라고 한다.",
                Answer = "진분수, 가분수, 대분수, 단위분수"

            },

            new QuestSet
            {
                Quest = "분수의 단위를 결정하는 것은 A이다.",
                Answer = "분모"

            },

            new QuestSet
            {
                Quest = "대분수 지도 시 유의점으로는 분수에 대한 형식적 이해를 위하여 명시적으로 대분수가 A와 B의 합이라는 것을 동시에 제시할 필요가 있다.",
                Answer = "자연수, 진분수",
                Reference = "그러나 분수의 덧셈을 먼저 배우는 것은 아니다. 대분수 지도 후 분수의 덧셈, 뺄셈을 지도한다."

            },

            new QuestSet
            {
                Quest = "분수의 크기를 비교하는 지도 방법은 첫째, 분모가 A 진분수의 경우 : 분모가 A 경우에는 분자가 크면 더 큰 분수이다. 둘째, B의 경우 : 분모가 큰 B일수록 더 작다.",
                Answer = "같은, 단위분수"

            },

            new QuestSet
            {
                Quest = "분수의 크기 비교 시 유의점으로는 A가 같을 때만 크기 비교가 가능함을 이해하도록 지도해야 한다.",
                Answer = "전체"

            },

            new QuestSet
            {
                Quest = "분수 지도의 순서는 다음과 같다. ① 연속량의 A을 통한 분수의 이해 (분모, 분자 용어 도입) : 영역 모델 사용. ② 분모가 B 분수의 크기 비교 (시각적 이해 → 진분수와 단위 분수의 관계) ③ C의 크기 비교 ④ 이산량의 A을 통한 분수의 이해 : D 모델 사용. ⑤ 분수의 유형 ⑥ E가 같은 분수의 크기 비교(가분수, 대분수)",
                Answer = "등분할, 같은, 단위분수, 집합, 분모"

            },

            new QuestSet
            {
                Quest = "소수 지도 모델에는 A와 B가 있다.",
                Answer = "영역 모델, 길이 모델"

            },

            new QuestSet
            {
                Quest = "소수 지도 시 수 모형에서 큰 정육면체는 A, 단위 정육면체는 B가 된다. 정사각형 판이 A라면, 단위 정육면체는 C가 된다.",
                Answer = "1, 0.001, 0.01"

            },

            new QuestSet
            {
                Quest = "소수의 유형 2가지 중 A는 1보다 작은 크기의 소수로 정수 부분이 0인 소수이다. 반면 B는 정수 부분이 0이 아닌 소수이다.",
                Answer = "순소수, 대소수"

            },

            new QuestSet
            {
                Quest = "자릿값의 원리를 이용한 소수점 이동 방법은 ① 소수를 1/A배 하면 소수점을 기준으로 수가 오른쪽으로 B 자리 이동한다. ② 소수를 A배 하면 수가 왼쪽으로 B 자리 이동한다.  ",
                Answer = "10, 한"

            },

            new QuestSet
            {
                Quest = "소수의 크기를 비교하는 방법은 다음과 같다. ① 소수를 A로 고쳐서 비교한다. ② B 부분의 크기를 먼저 비교한 다음, 소수 부분의 크기를 비교한다. ③ 소수만큼 색칠을 하거나 소수를 나타내는 소수 모형과 같은 C을 이용하여 시각적 비교를 한다. ④ D의 수를 비교한다. ",
                Answer = "분수, 자연수, 구체물, 단위소수"

            },

            new QuestSet
            {
                Quest = "분수와 소수의 관계는 A 관계이다.",
                Answer = "변환"

            },

            new QuestSet
            {
                Quest = "소수 지도의 순서는 다음과 같다. ① 분모가 A인 진분수를 통한 소수 한 자리 수의 이해(순소수) ② B와 cm의 관계를 통한 소수 한 자리 수의 관계 (대소수), ③ 소수 한 자리 수의 크기를 비교하기. ④ cm와 C의 관계를 통한 소수 두 자리 수의 이해 ⑤ m와 D의 관계를 통한 소수 세 자리 수의 이해 ⑥ 소수의 크기 비교 ⑦ 소수 사이의 관계",
                Answer = "10, mm, m, km"

            },

            new QuestSet
            {
                Quest = "등분할의 개념을 이해하는 방법으로는 일상생활의 친숙한 등분할 상황에서 전체가 A인 B을 똑같이 나누는 활동이 있다.",
                Answer = "1, 연속량"

            },

            new QuestSet
            {
                Quest = "분수의 크기를 비교하는 방법은 2가지이다. 첫째, 분모가 같은 진분수끼리 크기를 비교 : A적으로 비교 -> B의 수를 비교한다. 둘째, B끼리 크기를 비교 : A적으로 비교 -> 분모를 비교한다. ",
                Answer = "시각, 단위분수"

            },

            new QuestSet
            {
                Quest = "소수 한 자리 수를 이해할 때는 A가 B인 진분수를 이용한다.",
                Answer = "분모, 10"

            },

            new QuestSet
            {
                Quest = "분수 지도 시 유의점으로는 A를 인식하는 것이 중요하므로 상황이 바뀔 때마다 A가 무엇인지 인식하게 한다.",
                Answer = "전체"

            },

            new QuestSet
            {
                Quest = "소수에서 측정한 결과를 자세히 나타내기 위한 방법으로는 계속해서 A해갈 수 있음을 직관적으로 이해하게 하는 것이 있다.",
                Answer = "10등분"

            },

            new QuestSet
            {
                Quest = "분수를 A들의 합으로 나타내는 방법은 분모의 약수 중에서 합이 분자가 되는 단위를 찾는 것이다. ",
                Answer = "단위분수"

            },

            new QuestSet
            {
                Quest = "두 수의 비가 같은 정수의 순서쌍들의 모임을 A라고 한다. 비와 동치관계이다.",
                Answer = "유리수"

            },

            new QuestSet
            {
                Quest = "소수 지도 모델에는 A와 B가 있다.",
                Answer = "영역 모델, 길이 모델"

            },

            new QuestSet
            {
                Quest = "'똑같이 나누어 볼까요?'차시에서 배우고자 하는 것은 A 개념이다.",
                Answer = "등분할"

            },

            new QuestSet
            {
                Quest = "전체에 대한 부분의 크기로서의 분수 개념을 이해할 때는 A 모델을 사용하는 것이 좋다.",
                Answer = "영역"

            },

            new QuestSet
            {
                Quest = "분모가 같은 분수의 크기를 비교할 때는 A 모델을 활용한다.",
                Answer = "길이"

            },

            new QuestSet
            {
                Quest = "제시된 분수에 맞게 종이 띠를 직접 잘라 비교해 보는 활동을 A 활동이라 한다.",
                Answer = "구체적 조작"

            },

            new QuestSet
            {
                Quest = "분수 중에서 1/2, 1/3, 1/5와 같이 분자가 1인 분수를 A라고 한다.",
                Answer = "단위분수"

            },

            new QuestSet
            {
                Quest = "단위분수의 크기를 비교하는 방법에는 A에 나타내어 시각적으로 비교하는 것이 있다. 이때 분모가 큰 단위분수일 수록 더 B.",
                Answer = "수직선, 작다"

            },

            new QuestSet
            {
                Quest = "전체를 다르게 그리는 학생의 오개념을 지도하기 위한 방안은 다음과 같다. 분수의 크기 비교를 하기 위해서는 전체가 똑같은 A와 B인 두 분수를 비교해야 한다. 따라서 전체가 같을 때만 분수의 크기 비교가 가능함으로 이해하도록 지도한다.",
                Answer = "크기, 모양"

            },

            new QuestSet
            {
                Quest = "소수의 개념을 도입할 때는 분모가 10인 A를 통하여 소수 B 자리 수를 도입한다.",
                Answer = "진분수, 한"

            },

            new QuestSet
            {
                Quest = "소수는 A의 연장으로 활용하기 위한 것이다.",
                Answer = "십진기수법"

            },

            new QuestSet
            {
                Quest = "□■, 1/2(분수), 0.5(소수)는 모두 A이다.",
                Answer = "동치 표현"

            },

            new QuestSet
            {
                Quest = "길이 단위를 이용해 소수를 이해한 방법에는 cm와 mm의 A를 이용하는 것이 있다.",
                Answer = "관계"

            },

            new QuestSet
            {
                Quest = "3cm 6mm와 같은 것을 A라고 한다. 반면 3.6cm와 같은 것을 B라고 한다.",
                Answer = "복명수, 단명수"

            },

            new QuestSet
            {
                Quest = "소수의 크기를 비교할 때 ① A 모델을 통한 직관적 (시각적) 비교 ② B의 갯수를 통한 비교",
                Answer = "길이, 단위소수"

            },

            new QuestSet
            {
                Quest = "소수의 크기 비교 심화활동은 분모가 A인 진분수와 1보다 작은 소수 B 자리인 소수의 크기를 비교한다.",
                Answer = "10, 한"

            },

            new QuestSet
            {
                Quest = "두 분수의 크기를 비교하기 위한 조건으로는 A가 같은지를 먼저 비교해야 한다.",
                Answer = "전체"

            },

            new QuestSet
            {
                Quest = "1/2, 2/4. 4/8, 6/12 등의 양을 비교할 때 표현 방법은 'A' 이다. ('크기가 같은 분수' '동치분수'라는 표현 사용하지 않는다.)",
                Answer = "서로 같습니다."

            },

            new QuestSet
            {
                Quest = "이산량을 분수로 표현하는 것의 어려움은 같은 전체에 대하여 똑같은 양일지라도 A을 하는 방법에 따라 표현되는 분수가 달라지기 때문이다.",
                Answer = "등분할"

            },

            new QuestSet
            {
                Quest = "집합(이산량) 모델의 도입 방법은 A 하기 - 부분을 B 보기 - C로 나타내기 순서로 제시된다.",
                Answer = "등분할, 세어, 분수"

            },

            new QuestSet
            {
                Quest = "이산량의 의미로 분수를 다룰 때 유의할 점은 이산량으로 제시된 모든 양을 A로, 똑같이 나누어진 양을 B로 보고, 이 관계를 분수로 표현할 수 있어야 한다.",
                Answer = "전체, 부분",
                Reference = "이산량의 분수 배만큼 구하는 상황이 제시되면 그 의미에 충실하여 전체를 등분할하고 자연수의 분수 배만큼 구할 수 있어야 한다."

            },

            new QuestSet
            {
                Quest = "이산량에서 지도 시 사용하는 분수 지도 모델은 A이다. A을 등분할하여 전체-부분의 의미를 파악한다.",
                Answer = "집합 모델"

            },

            new QuestSet
            {
                Quest = "'분수만큼은 얼마일까요?' 차시에서 배우는 것은 A의 분수 B 만큼 구하기이다.",
                Answer = "자연수, 배"

            },

            new QuestSet
            {
                Quest = "분자가 분모보다 작은 분수를 A라고 한다. 반면 분자가 분모와 같거나 분모보다 큰 분수를 B라고 한다.",
                Answer = "진분수, 가분수"

            },

            new QuestSet
            {
                Quest = "분모가 같은 A의 크기를 비교하는 방법은, 먼저 자연수의 크기를 비교하고 자연수의 크기가 같으면 분자의 크기를 비교하여 더 큰 수를 구한다.",
                Answer = "대분수"

            },

            new QuestSet
            {
                Quest = "소수 두 자리 수는 A와 B, 소수 세 자리 수는 C와 D 사이의 관계를 통해 도입한다.",
                Answer = "1/100, 0.01, 1/1000, 0.001"

            },

            new QuestSet
            {
                Quest = "소수 세 자리 수 까지의 크기 비교의 바탕은 A의 이해이다.",
                Answer = "십진기수법"

            },

            new QuestSet
            {
                Quest = "소수점의 위치 변화시 지도 방법은 A의 B, C, D, E의 관계를 이용하여 주어진 소수에 10배, 100배, 1000배 또는 A에 1/10, 1/100, 1/1000을 했을 때 계산 결과가 어떻게 달라지는지를 비교하여 지도한다.",
                Answer = "자연수, 일, 십, 백, 천"

            },

            new QuestSet
            {
                Quest = "소수의 크기 비교 시 유의점은 A이 되는 것이 무엇인지를 명확히 이해할 수 있도록 하는 것이다. (B 사용)",
                Answer = "기준, 수 모형"

            },

            new QuestSet
            {
                Quest = "길이가 긴 수를 더 큰 소수라 말하는 경우, A 부분과 B 부분으로 나누어 소수의 크기를 비교할 수 있게 한다.",
                Answer = "자연수, 소수"

            },

            new QuestSet
            {
                Quest = "소수 학습을 위한 시각적 모델은 다음과 같다. 1. A : 큰 정육면체 1, 단위 정육면체 0.001/ 정사각형 판 1, 단위 정육면체 0.01. 2. B : 소수의 부분-전체 개념, 자릿값 개념을 보여주는 데 효과적으로 활용될 수 있다. 하나의 단위 정사각형을 10, 100, 1000등분 한 뒤 일부를 색칠해 소수를 표현한다. 3. C",
                Answer = "수 모형, 소수 정사각형, 수직선"

            },

            new QuestSet
            {
                Quest = "0.01를 이용할 때 사용하는 도구는 A(영역 모델), B(길이 모델)이 있다. C 또한 가능하다. (일 모형이 소수 둘째 자리가 된다.)",
                Answer = "모눈종이, 수직선, 수 모형"

            },

            new QuestSet
            {
                Quest = "소수 두 자리 수 지도에서 모눈종이를 사용할 시 장점은 A의 개념을 이해시키는 데 좋다는 것이 있다. ",
                Answer = "자릿값"

            },

            new QuestSet
            {
                Quest = "학생들이 자릿값을 혼동할 경우 지도 방안은 다음과 같다. ① 자릿값 A을 활용한다. ② 2.64의 경우 2.64 = 2 + 0.6 + 0.04임을 판서 (B) ",
                Answer = "판, 가법성"

            },

            new QuestSet
            {
                Quest = "소수의 크기를 비교하는 방법에는 2가지가 있다. 첫째, 모눈종이를 사용한다(A 모델). 둘째, 수직선을 사용한다(B 모델).",
                Answer = "영역, 길이"

            },

            new QuestSet
            {
                Quest = "소수의 크기를 비교하는 순서는 다음과 같다. 소수 A 자리 수 비교 -> 소수 B 자리 수 비교 -> 소수 C 자리 수 비교",
                Answer = "첫째, 둘째, 셋째"

            },

            new QuestSet
            {
                Quest = "소수 사이의 관계 학습 시 선행 개념은 A이다.",
                Answer = "자릿값의 원리"

            },

            new QuestSet
            {
                Quest = "소수 사이 관계에 의한 소수점의 이동은 1/10배 하면 소수점을 기준으로 수가 A으로 한 자리 이동하고, 10배하면 수가 B으로 한 자리 이동한다는 것이다.",
                Answer = "오른쪽, 왼쪽"

            }

            
        };
            
        
        public static List<QuestSet> math_Part_NumCalcu = new List<QuestSet>            
        {
            new QuestSet
            {
                Quest = "더 이상 분할할 수 없어 독립된 개체를 셀 수 있는 양 (자연수와 대응) 예로는 사탕 등을 A라고 한다. 반면 셀 수 없는 양, 분할이 가능하여 잴 수 있는 양 (실수와 대응) 예로는 넓이, 길이, 부피 등을 B라고 한다.",
                Answer = "이산량, 연속량"

            },

            new QuestSet
            {
                Quest = "열둘째는 A이며 열두째는 B이다.",
                Answer = "집합수, 순서수"

            },

            new QuestSet
            {
                Quest = "가르기와 모으기 활동의 목적은 ① A 개념 이해 : 받아올림, 받아내림 할때 반드시 필요하다. ② B와 C의 기초 가 있다.",
                Answer = "보수, 덧셈, 뺄셈"

            },

            new QuestSet
            {
                Quest = "수를 A하고 B하는 활동은 20 이하의 수의 범위에서 한다.",
                Answer = "분해, 합성"

            },

            new QuestSet
            {
                Quest = "덧셈, 뺄셈 문제 상황은 A, B, C, D로 4가지가 있다.",
                Answer = "첨가, 합병, 제거, 비교"

            },

            new QuestSet
            {
                Quest = "나뭇가지 위에 새 5마리가 앉아 있었는데 2마리가 더 날아왔다. 나뭇가지 새는 모두 몇 마리인가? <- 이 문제 상황은 A이다.",
                Answer = "첨가",
                Reference = "첨가 : 변화를 일으키는 행위, 시간에 따른 변화에 관련되는 상황"

            },

            new QuestSet
            {
                Quest = "물 속에 오리가 4마리, 물 밖에 오리가 3마리 있다. 모두 몇 마리 인가? <- 이 문제 상황은 A이다.",
                Answer = "합병",
                Reference = "합병 : 전체 집합과 그 부분 집합의 관계에 관련되는 상황"

            },

            new QuestSet
            {
                Quest = "주차장에 있던 자동차 5대중 2대가 나갔다. 주차장에는 자동차가 몇 대인가? <-이 문제 상황은 A이다.",
                Answer = "제거",
                Reference = "제거 : 변화를 일으키는 행위, 시간에 따른 변화에 관련되는 상황"

            },

            new QuestSet
            {
                Quest = "민영이는 구슬을 8개, 민지는 구슬을 5개 가지고 있다. 민영이는 민지보다 몇 개의 구슬을 더 많이 가졌는가? <- 이 문제 상황은 A이다.",
                Answer = "비교",
                Reference = "비교 : 서로소인 두 집합의 크기를 비교하는 것과 관련된 상황 (양의 비교)"

            },

            new QuestSet
            {
                Quest = "나뭇가지 위에 새가 5마리 앉아 있었는데, 몇 마리가 더 날아와서 7마리가 되었다. 더 날아온 새는 몇 마리인가? -> 이 문제 상황은 A이며, B을 하고 있다.",
                Answer = "첨가, 뺄셈"

            },

            new QuestSet
            {
                Quest = "자연수의 덧셈과 뺄셈 교학방유 : '더한다' , '합한다', '~보다 큰 수', '~보다 작은 수', '뺀다', '덜어 낸다', '합', '차' 등의 A을 사용하여 덧셈과 뺄셈의 B에 친숙해지게 한다.",
                Answer = "일상용어, 의미"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈 지도 모델에는 A, B, C가 있다. ① A : 양에 바탕을 둔 기수 개념 표현(집합수). 10으로 묶는 활동을 강조하여 십진법의 개념을 지도하고 표준 알고리즘을 위한 것이다. 예로는 바둑돌, 연결큐브(구조화X), 수 모형(구조화O) 등이 있고, 자릿값 판(반구체 모델) 또한 여기에 해당된다. ② B : 서수 개념(순서수), 수 세기를 기초로 하여 연산으로 연결한다. 예로는 수직선, 구슬 줄 등이 있다. ③ C : A + B이다. 수판, 주판 등이 있다.",
                Answer = "묶음 모델, 직선 모델, 복합 모델"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈의 전략은 다음과 같다. ① A에 기초한 전략 ② B에 기초한 전략 ③ C에 기초한 전략",
                Answer = "직접 모델링, 수 세기, 수 지식"

            },

            new QuestSet
            {
                Quest = "A에 기초한 전략이란 구조화되지 않은 구체물(연결큐브, 바둑돌, 자석, 빨대, 손가락, 그림 등) 또는 반구체물을 사용하여 물체를 세는 것이다.",
                Answer = "직접 모델링"

            },

            new QuestSet
            {
                Quest = "A에 기초한 전략이란 구조화된 모델(수판, 구슬 줄, 수 모형)을 이용하는 것이다. 이어 세기, 거꾸로 세기, 두 배 전략, 하나 더 전략, 하나 덜 전략 등을 사용할 수 있다.",
                Answer = "수 세기"

            },

            new QuestSet
            {
                Quest = "A에 기초한 전략이란 시각적 이미지의 도움 없이 수의 합성과 분해에 관한 지식, 수 계열과 수 관계, 교환법칙과 같은 기본 법칙 등 학생들이 알고 있는 수에 관련된 다양한 지식을 활용하여 해결하는 것이다.",
                Answer = "수 지식",
                Reference = "필요한 경우 수직선을 활용할 수 있다."

            },

            new QuestSet
            {
                Quest = "다음은 덧셈과 뺄셈 지도 4단계이다. 원리 탐구 학습 모형을 적용 가능하다. ① A을 이용한 문제 제시 ② 문제를 B로 나타내기 : 수 모형을 이용한 조작활동으로 원리 이해 ③ B 조작활동으로 답 구하기 (C가 내재된 조작 활동-스캠프의 D 이해, E 지식) ④ 조작 활동 과정을 발표하고 F로 나타내기 (수학적 원리의 G / 세로셈 표준 알고리즘)",
                Answer = "실생활 장면, 모델, 수학적 원리, 관계적, 개념적, 기호, 형식화"

            },

            new QuestSet
            {
                Quest = "세로셈의 목적은 1. 계산 방법을 A하는 것 2. 계산 B을 숙달하는 데에 있다.",
                Answer = "이해, 기능"

            },

            new QuestSet
            {
                Quest = "덧셈 지도 방법(원리 이해 -> A) 순서는 다음과 같다. ① B이 없는 덧셈 (예 : 22 + 12 = 34) 원리 이해 : 수 모형 (10개씩 묶음끼리 더하고 낱개끼리 더한다), A : C (10개씩 묶음은 10개씩 묶음끼리 줄을 맞추고, 낱개는 낱개끼리 줄을 맞추어 쓴다) ② B이 있는 덧셈 : 원리 이해 - 일 모형 10개를 십 모형 1개로 바꾸어 십 모형 1개와 일 모형 1개로 나타낼 수 있습니다. (받아올림의 의미가 드러나는 수 모형 조작활동) 형식화 : 1) 자리에 맞추어 수를 쓴다. (D) 2) 일의 자리 수끼리의 합에서 10이거나 10이 넘으면 십의 자리로 받아 올림하고 받아 올림 표시를 해 준다. 1은 일의 자리에 내려 쓴다. 3) 받아 올림한 수는 십의 자리의 수와 합하여 내려 쓴다.",
                Answer = "형식화, 받아올림, 세로셈, 위치적 기수법"

            },

            new QuestSet
            {
                Quest = "뺄셈 지도 방법 순서는 다음과 같다. ① A이 없는 뺄셈 원리 이해 : 수 모형(10개씩 묶음끼리 덜어내고 낱개끼리 덜어 냅니다.), 형식화 : 세로셈(10개씩 묶음은 10개씩 묶음끼리 줄을 맞추고, 낱개는 낱개끼리 줄을 맞추어 쓴다.) ② A이 있는 뺄셈 원리 이해 : 십 모형 1개를 일 모형 10개로 바꾼 후 빼면 됩니다. (A의 의미(원리)가 들어있는 수 모형 조작활동), 형식화 : 세로셈 (32 - 8 = 24) 1) 자리에 맞추어 수를 쓴다. (B) 2) 일의 자리 수끼리 뺄 수 없으면 십의 자리에서 일의 자리에 A하고 A 표시를 해준다. 일의 자리 위에 10을 쓰는 방법으로 나타낸다. 3) 일의 자리 수끼리 뺀다. 12에서 8을 뺀 수 4를 일의 자리에 내려 쓴다. 4) 십의 자리 수 2는 그대로 내려 쓴다.",
                Answer = "받아내림, 위치적 기수법"

            },

            new QuestSet
            {
                Quest = "알고리즘 지도 순서를 적용할 때 [22와 12를 모형으로 나타내기] 는 [A] 이고, [22 + 12를 모형으로 나타내기] 는 [B] 이다. 또한 [22 + 12를 구하는 세로 형식의 알고리즘 이해하기] 는 [C]이다.",
                Answer = "문제를 모델로 나타내기, 모델 조작활동으로 답 구하기, 조작활동 과정을 발표하고 기호로 나타내기"

            },

            new QuestSet
            {
                Quest = "세로 형식의 알고리즘을 이해하기 위한 선행학습 요소 2가지는 A와 B가 있다.",
                Answer = "위치적 기수법, 자릿값"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 덧셈식에서 조작활동을 할 때 할 수 있는 발문은?",
                Answer = "낱개 모형 10개를 십 모형 1개로 바꾼다."

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 덧셈식에서 할 수 있는 형식화된 발문은?",
                Answer = "일의 자리 수끼리의 합이 10이거나 10보다 클 경우에는 10을 십의 자리로 받아올림한다."

            },

            new QuestSet
            {
                Quest = "받아내림이 있는 뺄셈식에서 조작활동을 할 때 할 수 있는 발문은?",
                Answer = "십 모형 1개를 낱개 모형 10개로 바꾼다."

            },

            new QuestSet
            {
                Quest = "받아내림이 있는 뺄셈식에서 할 수 있는 형식화된 발문은?",
                Answer = "일의 자리 수끼리 뺄 수 없을 때는 십의 자리에서 10을 받아 내려 계산한다."

            },

            new QuestSet
            {
                Quest = "덧셈의 성질에는 A, B 2가지가 있다. A는 더하는 순서를 바꾸어도 결과는 같다(3 + 5 = 5 + 3)는 법칙이고, B는 세 수를 더할 때 더하는 순서를 바꾸어도 (7 + 8) + 2 = 7 + (8 + 2)",
                Answer = "교환 법칙, 결합 법칙",
                Reference = "뺄셈에서는 교환 법칙과 결합 법칙은 성립하지 않는다."

            },

            new QuestSet
            {
                Quest = "뺄셈의 방법에는 A, B 2가지가 있다. A는 뺄셈에서 감수를 분해하는 방법이다. 예 : 14 - (4 + 2) = 14 - 4 - 2 = 8. B는 뺄셈에서 피감수를 분해하는 방법이다. 예 : (10 + 3) - 8 = (10 - 8) + 3 = 5",
                Answer = "감감법, 감가법"

            },

            new QuestSet
            {
                Quest = "1~2학년 덧셈과 뺄셈 교학방유 : 덧셈은 A의 범위에서 다루되, 합이 B인 경우도 포함한다.",
                Answer = "두 자리 수, 세 자리 수"

            },

            new QuestSet
            {
                Quest = "1~2학년 덧셈과 뺄셈 교학방유 : 덧셈과 뺄셈을 여러 가지 방법으로 계산하는 활동을 통하여 A을 기르게 한다.",
                Answer = "연산 감각"

            },

            new QuestSet
            {
                Quest = "1~2학년 덧셈과 뺄셈 평방유 : 덧셈과 뺄셈을 여러 가지 방법으로 계산하는 활동을 평가할 때에는 학생들이 자유롭게 계산하도록 하는 데 초점을 두고 이를 지나치게 A하지 않도록, 관찰, 면담 등의 다양한 방법을 이용한다.",
                Answer = "형식화"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈은 어떤 관계인가?",
                Answer = "역연산 관계",
                Reference = "이해하려면 가역적 사고가 가능해야 한다."

            },

            new QuestSet
            {
                Quest = "1~2학년 덧셈과 뺄셈 교학방유 : A을 덧셈식과 뺄셈식으로 나타내는 활동을 통하여 덧셈과 뺄셈의 관계를 이해하게 한다.",
                Answer = "한 가지 상황"

            },

            new QuestSet
            {
                Quest = "세 수의 덧셈과 뺄셈의 목적은 ① 몇 + 몇 = 십몇 이나 십몇 - 몇 = 몇을 이해하기 위한 기초가 된다. ② 10이 되는 더하기와 10에서 빼기는 이어지는 학습 내용인 A를 위한 선수 학습에 해당한다. ③  10의 B에 익숙해진 다음 여러 수의 계산에서 10을 만드는 두 수를 파악하는 것이 가능해진다.",
                Answer = "10을 만들어 더하기, 보수관계"

            },

            new QuestSet
            {
                Quest = "1~2학년 덧셈과 뺄셈 교학방유 ① □가 사용된 덧셈식과 뺄셈식은 □의 값을 A으로 구할 수 있는 수준으로 다룬다. ② 학생들에게 친근한 B을 이용하여 덧셈과 뺄셈에 관련된 문제를 해결하게 한다. ③ C 영역의 문제 상황에 적합한 문제 해결 전략을 지도하여 문제 해결 능력을 기르게 한다.",
                Answer = "직관적, 실생활 상황, 수와 연산"

            },

            new QuestSet
            {
                Quest = "1-1-3. 덧셈과 뺄셈 교학방유 : 덧셈과 뺄셈을 A으로 계산하는 활동을 통하여 B을 기르게 한다.",
                Answer = "여러 가지 방법, 연산 감각"

            },

            new QuestSet
            {
                Quest = "1-1-3. 덧셈과 뺄셈 평방유 : 덧셈과 뺄셈을 여러 가지 방법으로 계산하는 활동을 평가할 때에는 학생들이 자유롭게 계산하도록 하는데 초점을 두고 이를 지나치게 A하지 않도록 관찰, 면담 등의 B을 이용한다.",
                Answer = "형식화, 다양한 방법"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈은 A나 B와 같은 상황에서 곱셈과 나눗셈으로 발전한다.",
                Answer = "동수누가, 동수누감"

            },

            new QuestSet
            {
                Quest = "1-1-3. 덧셈과 뺄셈 단원 개관 :  A, B, C, D등의 다양한 실생활 상황 속에서 이야기를 만들어보고 직접 합하거나 덜어 내는 활동을 통해 덧셈과 뺄셈이 필요한 상황과 덧셈과 뺄셈의 의미를 이해한다. 이를 E, F, G 기호를 이용하여 H과 I으로 쓰고 읽는다.",
                Answer = "첨가, 합병, 제거, 비교, +, -, =, 덧셈식, 뺄셈식"

            },

            new QuestSet
            {
                Quest = "9까지의 수를 모으기와 가르기를 할 때 폴리아의 어떤 전략을 활용할 수 있는가?",
                Answer = "실제로 해보기 전략"

            },

            new QuestSet
            {
                Quest = "덧셈 상황을 인식하고 구체물이나 손가락을 이용하여 덧셈을 하게 하는 것을 브루너의 EIS 이론으로 설명하면 A적 표상이다.",
                Answer = "활동"

            },

            new QuestSet
            {
                Quest = "구체적인 활동을 기초로 덧셈 상황을 +, = 기호를 사용하여 덧셈식으로 쓰고 읽게 하는 것을 브루너의 EIS 이론으로 설명하면 A적 표상이다.",
                Answer = "상징"

            },

            new QuestSet
            {
                Quest = "구체물을 통해 수의 A와 B 활동을 해봄으로써 덧셈과 뺄셈의 기초가 형성되게 한다.",
                Answer = "모으기, 가르기"

            },

            new QuestSet
            {
                Quest = "A 등의 다양한 상황을 이용하여 덧셈을 이해하고 덧셈식으로 나타낼 수 있게 한다.",
                Answer = "첨가와 합병"

            },

            new QuestSet
            {
                Quest = "A 등의 다양한 상황을 이용하여 뺄셈을 이해하고 뺄셈식으로 나타낼 수 있게 한다.",
                Answer = "제거와 비교"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈 상황에서 A로 한 활동을 어떻게 표현할 것인지를 학생들과 같이 생각해 보면서 B, C을 도입한다.",
                Answer = "구체물, 덧셈식, 뺄셈식"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈의 A와 B을 인식할 수 있는 C을 다양하게 제시한다.",
                Answer = "의미, 필요성, 실생활 상황"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈을 할 때 다양한 A을 사용하여 해결해 보고, 서로의 A을 B하여 좀 더 효과적인 A을 발견할 수 있도록 한다.",
                Answer = "방법, 비교"

            },

            new QuestSet
            {
                Quest = "손가락이나 구체물을 사용하여 하나씩 세는 방법은 A에 기초한 전략이다.",
                Answer = "직접 모델링"

            },

            new QuestSet
            {
                Quest = "수판과 같이 구조화된 모델을 통해 세는 방법은 A에 기초한 전략이다.",
                Answer = "수 세기"

            },

            new QuestSet
            {
                Quest = "무궁화의 수만큼 바둑돌을 수판에 놓으면 5개애 3개가 더 있으니까 5 다음에 6, 7, 8로 세어 8송이인 것을 알 수 있습니다. -> A 전략",
                Answer = "이어세기"

            },

            new QuestSet
            {
                Quest = "3 + 3 = 6인데 2개가 더 있는 것과 같으니 6다음에 7, 8이 됩니다. -> A 전략, B 전략",
                Answer = "두 배, 이어세기"

            },

            new QuestSet
            {
                Quest = "'덧셈을 다양한 방법으로 해결하고, 해결 방법을 비교하여 더 효율적인 방법 찾기'와 관련된 수학 교과 역량은?",
                Answer = "창의·융합"

            },

            new QuestSet
            {
                Quest = "식 만들기 전략은 A(B와 C에 관한 지식)에 기초한 전략이다.",
                Answer = "수 지식, 분해, 합성"

            },

            new QuestSet
            {
                Quest = "놀이동산에서 6명의 어린이가 열차를 타고 가다가 2명이 내린 장면은 A 상황이고, B를 사용한 모델이며, C에 기초한 덧셈 전략을 사용했다.",
                Answer = "제거, 연결큐브, 직접 모델링"

            },

            new QuestSet
            {
                Quest = "다람쥐가 토끼보다 얼마나 더 많은지 알아보는 것은 A 상황이다.",
                Answer = "비교"

            },

            new QuestSet
            {
                Quest = "<0을 더하거나 빼면 어떻게 될까요?> A 상황 : 4장의 딱지를 가지고 딱지치기를 했는데 더 따지 못해 그대로 4장이다. B 상황 : 왼손에 공깃돌이 하나도 없고, 오른손에 공깃돌이 6개 있어서 공깃돌이 모두 6개 있다. C 상황 : 딸기가 4개 있었는데 아무도 먹지 않아서 그대로 4개가 있다. D 상황 : 준영이는 사탕 6개, 호영이도 사탕 6개가 있어서 두 친구가 가지고 있는 사탕의 차는 0이다. E 상황 : 새 연필이 6자루 있는데 하나도 쓰지 않아서 그대로 6자루가 남아 있습니다.",
                Answer = "첨가, 합병, 제거, 비교, 제거"

            },

            new QuestSet
            {
                Quest = "0 + 5와 5 + 0도 5로 같고, 1 + 4와 4 + 1도 5로 같다. 이에 관련된 법칙은 A 법칙이다. ",
                Answer = "교환"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈을 A으로 계산하는 활동을 통하여 B을 기르게 한다.",
                Answer = "여러 가지 방법, 연산 감각"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈을 여러 가지 방법으로 계산하는 활동을 평가할 때에는 학생들이 자유롭게 계산하도록 하는 데 초점을 두고 이를 지나치게 A하지 않도록 관찰, 면담 등의 B을 이용한다.",
                Answer = "형식화, 다양한 방법"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈의 의미의 이해는 A을 통해서 해야 한다.",
                Answer = "실생활 상황"

            },

            new QuestSet
            {
                Quest = "1-2-2. 덧셈과 뺄셈(1) 단원에서는 받아올림이 없는 덧셈과 받아내림이 없는 뺄셈을 A의 범위 내에서 해야한다.",
                Answer = "두 자리 수"

            },

            new QuestSet
            {
                Quest = "두 자리 수의 받아올림이 없는 덧셈, 받아내림이 없는 뺄셈을 학습하면서 A을 기르고 B을 이해하여 C하도록 한다.",
                Answer = "연산 감각, 계산 원리, 형식화"

            },

            new QuestSet
            {
                Quest = "1-2-2. 덧셈과 뺄셈(1) 단원의 최종 목표는 A에 기초한 형식적 알고리즘을 이해하고 숙달하는 것이다. 즉, 덧셈(뺄셈)을 하는 두 수를 세로로 정렬하고 각 자리의 수끼리 더하여(빼서) 그 결과를 세로 줄에 맞추어 쓰도록 하는 B을 이해하고 숙달하는 것이 중요한 목표이다.",
                Answer = "자릿값, 세로 형식의 계산 알고리즘"

            },

            new QuestSet
            {
                Quest = "두 자리 수의 덧셈과 뺄셈의 단계별 알고리즘 지도 단계는 다음과 같다. 1단계 : A을 이용한 문제 제시. 2단계 : 문제를 B(수 모형)로 나타내기. 3단계 : B 조작 활동으로 답 구하기 (C가 내재된 D). 4단계 : D 과정을 발표하고 E로 나타내기 (C의 F)",
                Answer = "생활 장면, 모델, 수학적 원리, 조작 활동, 기호, 형식화"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈이 필요한 상황을 통해 덧셈과 뺄셈의 A을 인지하고 학습할 수 있도록 지도한다.",
                Answer = "필요성"

            },

            new QuestSet
            {
                Quest = "모형(연결큐브)을 사용한 A을 통해 B으로 결과를 이해할 수 있도록 한 후 점차 C에 의한 덧셈과 뺄셈으로 D할 수 있도록 한다.",
                Answer = "조작활동, 직관적, 자릿값, 형식화"

            },

            new QuestSet
            {
                Quest = "모형(연결큐브)을 사용하여 지도서 10개씩 묶음은 10개씩 묶음끼리, 낱개는 낱개끼리 구분하여 놓고 A에 의한 덧셈과 뺄셈 활동이 되도록 지도한다.",
                Answer = "십진법"

            },

            new QuestSet
            {
                Quest = "받아올림이 없는 덧셈식과 받아내림이 없는 뺄셈식에서 A와 B에 대한 개념을 이해하도록 지도한다.",
                Answer = "십의 자리, 일의 자리"

            },

            new QuestSet
            {
                Quest = "'21 + 6을 구하는 방법을 말해보세요. 21 + 6을 식으로 나타내면 6은 2와 1 중에서 어느 숫자와 줄을 맞추어 써야 할까요?'는 덧셈과 뺄셈의 지도 단계중 A 단계에 해당한다.",
                Answer = "조작활동 과정을 발표하고 기호로 나타내기"

            },

            new QuestSet
            {
                Quest = "22 + 12를 식으로 나타내려면 A은 A끼리 줄을 맞추고, B는 B끼리 줄을 맞춰 써야 한다.",
                Answer = "10개씩 묶음, 낱개"

            },

            new QuestSet
            {
                Quest = "22 + 12를 계산하는 방법은 A는 A끼리, B는 B끼리 더하는 것이다.",
                Answer = "낱개, 10개씩 묶음"

            },

            new QuestSet
            {
                Quest = "여러 가지 방법으로 덧셈을 계산하는 활동을 통하여 기를 수 있는 감각은 A이고, 수학 교과 역량은 B이다.",
                Answer = "연산 감각, 창의·융합 능력"

            },

            new QuestSet
            {
                Quest = "문제 해결 과정을 설명하고 들으며 수학 학습 활동 과정과 결과를 다른 사람에게 표현하고 다른 사람의 생각을 이해하고 평가하는 것은 A 능력이다.",
                Answer = "의사소통",
                Reference = "의사소통 : 수학적 아이디어 또는 수학 학습 과정과 결과를 말, 글, 그림, 기호, 표, 그래프 등을 사용하여 다른 사람과 효율적으로 의사소통할 수 있게 한다. 다양한 관점을 존중하면서 다른 사람의 생각을 이해하고 수학적 아이디어를 표현하며 토론하게 한다."

            },

            new QuestSet
            {
                Quest = "21 + 15 = 36, 15 + 21 = 36 에 사용된 법칙 A와 덧셈 전략 B는?",
                Answer = "교환 법칙, 수 지식에 기초한 전략"

            },

            new QuestSet
            {
                Quest = "받아내림이 없는 뺄셈식의 지도 과정에서 A에 대한 개념이 필요하다. 모든 계산은 세로 줄에 맞추어 B의 순서로 이루어지며 이때 세로줄에 어떤 수를 맞추어야 하는지를 정확하게 이해해야 한다.",
                Answer = "10개씩 묶음과 낱개, 낱개에서 10개씩 묶음",
                Reference = "자릿값, 위치적 기수법"

            },

            new QuestSet
            {
                Quest = "어느 동물이 몇 마리 더 많은지 알아봅시다. -> A 상황, B 모델",
                Answer = "비교, 수판"

            },

            new QuestSet
            {
                Quest = "85 - 23의 차를 구하는 방법에는 1. A(B 분해) 예 : 85 - 20 - 3 , 2. C(D 분해) 예 : 80 - 23 + 5 가 있다.",
                Answer = "감감법, 감수, 감가법, 피감수"

            },

            new QuestSet
            {
                Quest = "모형을 통한 조작활동을 할 때 '10개씩 묶음은 10개씩 묶음끼리, 낱개는 낱개끼리 더한다'는 A된 발문이고, 세로셈 형식으로 나타낼 때 '십의 자리끼리, 일의 자리끼리 더한다'는 B된 발문이다.",
                Answer = "비형식화, 형식화"

            },

            new QuestSet
            {
                Quest = "1-2-4. 덧셈과 뺄셈(2) 교학방유 : 덧셈과 뺄셈을 A으로 계산하는 활동을 통하여 B을 기르게 한다.",
                Answer = "여러 가지 방법, 연산 감각"

            },

            new QuestSet
            {
                Quest = "1-2-4. 덧셈과 뺄셈(2) 평방유 : 덧셈과 뺄셈을 여러 가지 방법으로 계산하는 활동을 평가할 때에는 학생들이 자유롭게 계산하도록 하는 데 초점을 두고 이를 지나치게 A하지 않도록 관찰, 면담 등의 B을 이용한다.",
                Answer = "형식화, 다양한 방법"

            },

            new QuestSet
            {
                Quest = "A를 통해 3 + 8과 8 + 3의 합이 같음을 알게 하여 덧셈의 B을 이해하게 한다.",
                Answer = "이어 세기, 교환법칙"

            },

            new QuestSet
            {
                Quest = "10이 되도록 두 수를 모으거나 10을 두 수로 가르는 활동을 통해 성립할 수 있는 개념은 A이다.",
                Answer = "10에 대한 보수 관계"

            },

            new QuestSet
            {
                Quest = "A이 되는 두 수를 이용하여 세 수의 덧셈을 학습하게 된다.",
                Answer = "합이 10"

            },

            new QuestSet
            {
                Quest = "수학의 모든 연산의 출발점은 A이며, 이는 두 개의 항으로 이루어진 것을 뜻한다.",
                Answer = "이항 연산"

            },

            new QuestSet
            {
                Quest = "(몇) + (몇) = (십몇)은 받아올림에 대한 필수 단계이다. 이를 위해 필요한 선행 학습 요소는 다음과 같다. '(몇) + (몇) = (십몇)의 A 또는 B를 적절하게 분해하여 10의 C 관계를 이용한 D 수의 덧셈으로 바꾸어 계산하는 것이 필요하다.'",
                Answer = "가수, 피가수, 보수, 세"

            },

            new QuestSet
            {
                Quest = "한 자리 수인 세 수의 덧셈과 뺄셈은 주어진 A에 맞게 앞에서부터 순서대로 계산할 수 있도록 지도한다.",
                Answer = "상황"

            },

            new QuestSet
            {
                Quest = "세 수의 뺄셈 시 A를 바꾸면 결과가 달라질 수 있음을 보여 A를 지켜야 할 필요성을 느끼게 한다.",
                Answer = "계산 순서"

            },

            new QuestSet
            {
                Quest = "두 수를 바꾸어 더해도 그 합이 같다는 것을 A하도록 지도하는데 중점을 둔다.",
                Answer = "학생들이 스스로 발견"

            },

            new QuestSet
            {
                Quest = "두 수를 바꾸어 더해도 그 결과가 같다는 것을 지도할 때에는 A를 통해 이해하게 하고, 3 + 8에 비해 8 + 3이 B임을 느끼도록 지도한다.",
                Answer = "이어 세기, 효율적"

            },

            new QuestSet
            {
                Quest = "합이 10이 되는 두 수를 이용한 세 수의 덧셈에서 합이 10이 되는 두 수를 먼저 더하고, 나머지 수를 더하는 것이 편리함을 A도록 유도한다.",
                Answer = "자연스럽게 느끼"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈의 계산 방법을 학습하는 과정에서 교사의 지시가 아닌 학생들의 탐구와 놀이 및 A에 의한 발견이 이루어지도록 학생 중심의 학습 계획을 구성하고 안내한다.",
                Answer = "의사소통"

            },

            new QuestSet
            {
                Quest = "세 수의 덧셈은 이항 연상을 A한 것이다.",
                Answer = "연속적 수행"

            },

            new QuestSet
            {
                Quest = "학생들의 수학 학습 지도와 관련하여 3 X 3 형태의 마방진이 등장하는 이유는 A 수의 덧셈에서 B을 지도하기 위한 것이다.",
                Answer = "세, 결합법칙"

            },

            new QuestSet
            {
                Quest = "1-2-6. 덧셈과 뺄셈 (3) 교학방유 : 수를 분해하고 합성하는 활동은 A 이하의 수의 범위에서 한다.",
                Answer = "20"

            },

            new QuestSet
            {
                Quest = "1-2-6. 덧셈과 뺄셈 (3) 교학방유 : '더한다' , '합한다' , '~보다 ~큰 수' , '~보다 ~작은 수', '뺀다', '덜어 낸다', '합', '차' 등의 A를 사용하여 덧셈과 뺄셈의 의미에 친숙하게 한다.",
                Answer = "일상용어"

            },

            new QuestSet
            {
                Quest = "1-2-6. 덧셈과 뺄셈 (3) 교학방유 : 덧셈과 뺄셈을 A으로 계산하는 활동을 통하여 B을 기르게 한다.",
                Answer = "여러 가지 방법, 연산 감각"

            },

            new QuestSet
            {
                Quest = "1-2-6. 덧셈과 뺄셈 (3) 평방유 : 덧셈과 뺄셈을 여러 가지 방법으로 계산하는 활동을 평가할 때에는 학생들이 자유롭게 계산하도록 하는데 초점을 두고 이를 지나치게 A하지 않도록 관찰, 면담 등의 B을 이용한다.",
                Answer = "형식화, 다양한 방법"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈의 지도 순서는 다음과 같다. ① A 속에서 덧셈과 뺄셈 상황을 인식한다. ② 적절한 B을 선택한다. ③ 다양한 C을 사용하여 여러가지 전략으로 익힌다. (더 큰 수의 덧셈과 뺄셈의 D에 기초한다)",
                Answer = "실생활 상황, 연산, 모델, 형식화"

            },

            new QuestSet
            {
                Quest = "(십몇) - (몇) = (몇)의 계산에서 A나 B를 분해하는 등 여러 가지 방법으로 계산할 수 있게 한다.",
                Answer = "감수, 피감수"

            },

            new QuestSet
            {
                Quest = "수의 모으기와 가르기를 할 때 수판과 같이 A을 통해 B을 이용할 수 있도록 안내한다.",
                Answer = "구조화된 모델, 10"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈을 할 때 A과 같이 구조화된 모델을 다양한 방향으로 보게 함으로써 B나 C, D나 E를 분해하는 등 여러 가지 방법을 생각해 낼 수 있도록 안내한다.",
                Answer = "수판, 가수, 피가수, 감수, 피감수"

            },

            new QuestSet
            {
                Quest = "수판과 모형 혹은 다양한 구체물을 사용하여 A을 하면서 모으기와 가르기를 해 보도록 지도한다.",
                Answer = "직접 조작 활동"

            },

            new QuestSet
            {
                Quest = "'11에서 19까지의 수를 구체적 조작 없이 10을 이용하여 가르기를 하도록 하는 것'에서 사용한 덧셈 전략은?",
                Answer = "수 지식에 기초한 전략"

            },

            new QuestSet
            {
                Quest = "연결 큐브를 이용하여 덧셈하는 것과 ○를 그림으로써 덧셈하는 것에는 다음과 같은 차이가 있다. 연결 큐브는 A 전략을 쓰며 B를 이용한다. 반면 ○ 그리기 활동을 할때는 C 전략을 쓰며 D를 이용한다. 이는 E에 기초한 전략이다.",
                Answer = "실제로 해보기, 구체물, 그림 그리기, 반구체물, 수 세기"

            },

            new QuestSet
            {
                Quest = "수를 구체적 조작 없이 가르기할 때 사용되는 덧셈 전략은?",
                Answer = "수 지식에 기초한 전략"

            },

            new QuestSet
            {
                Quest = "표가 나오면 A 활동을 한다.",
                Answer = "규칙 찾기"

            },

            new QuestSet
            {
                Quest = "종이컵 12개 중 3개를 꾸몄다. 앞으로 꾸며야 하는 종이컵은 몇 개인가? -> 뺄셈의 A 상황",
                Answer = "제거"

            },

            new QuestSet
            {
                Quest = "피감수가 10이 되도록 감수 중 일부를 빼고 피감수인 10에서 남은 감수를 빼는 방법은 A이다.",
                Answer = "감감법"

            },

            new QuestSet
            {
                Quest = "눈사람은 11개 모자는 8개 있다. 눈사람에게 모자를 씌우려면 모자가 몇 개 더 필요한가? -> 이것은 뺄셈의 A 상황이다.",
                Answer = "비교"

            },

            new QuestSet
            {
                Quest = "14 - 9 = 10 - 9 + 4 = 5. 이 식에 적용된 뺄셈의 방법은?",
                Answer = "감가법"

            },

            new QuestSet
            {
                Quest = "2-1-3. 덧셈과 뺄셈 교학방유 : 덧셈은 A의 범위에서 다루되, 합이 B인 경우도 포함한다.",
                Answer = "두 자리 수, 세 자리 수"

            },

            new QuestSet
            {
                Quest = "2-1-3. 덧셈과 뺄셈 교학방유 : 덧셈과 뺄셈을 A으로 계산하는 활동을 통하여 B을 기르게 한다.",
                Answer = "여러 가지 방법, 연산 감각"

            },

            new QuestSet
            {
                Quest = "2-1-3. 덧셈과 뺄셈 교학방유 : □가 사용된 덧셈식과 뺄셈식은 □의 값을 A으로 구할 수 있는 수준으로 다룬다.",
                Answer = ""

            },

            new QuestSet
            {
                Quest = "2-1-3. 덧셈과 뺄셈 교학방유 : 덧셈과 뺄셈을 여러 가지 방법으로 계산하는 활동을 평가할 때에는 학생들이 자유롭게 계산하도록 하는 데 초점을 두고 이를 지나치게 A하지 않도록 관찰, 면담 등의 B을 이용한다.",
                Answer = "형식화, 다양한 방법"

            },

            new QuestSet
            {
                Quest = "두 자리 수 범위의 받아올림, 받아내림이 있는 덧셈과 뺄셈의 계산 방법은 다음과 같다. ① A끼리 계산한다.(B끼리, C끼리) ② 받아올림, 받아내림 한다.",
                Answer = "같은 단위, 십의 자리수 , 일의 자리 수"

            },

            new QuestSet
            {
                Quest = "74 + 56 = 1210. 이는 받아올림이 있는 자연수의 덧셈 오류이다. 이는 A로 나타나는 수의 B은 생각하지 않고 두 A를 각각 기록하여 생겨난 오류이다. 이를 지도할 때에는 ① C ② D을 사용하고 그 합을 D을 이용하여 나타낸다.",
                Answer = "합의 결과, 자릿값, 어림, 수 모형"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 자연수의 덧셈의 오류는 다음과 같다. ① 받아올림을 A 오류 ② 받아올림 할 수를 B 오류",
                Answer = "하지 않는, 내려 쓰는"

            },

            new QuestSet
            {
                Quest = "197 - 43 = 1414. 이는 A이 있는 자연수의 뺄셈 오류이다. 이는 필요하든지 그렇지 않던 간에 무조건 A을 한 데에서 비롯된 오류이다. 이를 지도하는 방안은 ① B를 구체물로 표현하는 것 ② 계산 전 '예', '아니오' ③ C, D",
                Answer = "받아내림, 피감수, 수직선, 어림"

            },

            new QuestSet
            {
                Quest = "두 자리 수 범위에서 받아내림이 있는 자연수의 뺄셈의 오류는 다음과 같다. ① A 오류 (뺄 수 없는 것은 그냥 0을 씀), ② 받아내림 오류 (B의 변화가 없다)",
                Answer = "0처리, 십의 자리 수"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 덧셈식에서 일의 자리 수 합이 10이거나 10보다 클 경우에는 10을 십의 자리로 A함을 인식할 수 있도록 지도한다.",
                Answer = "받아올림"

            },

            new QuestSet
            {
                Quest = "받아내림이 있는 뺄셈식에서 일의 자리 수끼리 뺄 수 없을 때에는 십의 자리에서 A을 받아내려 계산함을 인식할 수 있도록 지도한다.",
                Answer = "10"

            },

            new QuestSet
            {
                Quest = "두 수의 덧셈과 뺄셈을 형식화하기 전에 A, B 등 수학 교구를 C하도록 하여 C활동이 받아올림, 받아내림의 개념과 의미있게 연결되어 D으로 나타내도록 지도한다.",
                Answer = "수 모형, 연결큐브, 조작, 식"

            },

            new QuestSet
            {
                Quest = "한 가지 상황을 덧셈식과 뺄셈식으로 나타내는 통하여 덧셈과 뺄셈의 A를 이해하게 한다. 이 때 논리적이고 정확한 설명이 아닐지라도 학생 자신의 언어로 이야기해보도록 지도한다.",
                Answer = "관계"

            },

            new QuestSet
            {
                Quest = "받아올림에 대한 원리 이해를 할 수 있는 원리 탐구 학습 모형의 단계는?",
                Answer = "수학적 원리가 내재된 조작활동"

            },

            new QuestSet
            {
                Quest = "세로셈을 할 수 있는 원리 탐구 학습 모형의 단계는?",
                Answer = "수학적 원리의 형식화"

            },

            new QuestSet
            {
                Quest = "구체물의 조작에서 알아낸 것을 수로 바꾼 과정은 A 단계이고, 기수법에 맞도록 계산 과정을 간단하게 나타낸 것은 B 단계이다.",
                Answer = "스캐폴딩, 정교화"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 (두 자리 수) + (한 자리 수)의 형식화 된 발문 A, B는?",
                Answer = "일의 자리 수끼리의 합에서 10이거나 10이 넘으면 십의 자리에 받아올림하고 받아올린 표시를 해준다, 받아올림한 수는 십의 자리의 수와 합하여 내려 쓴다."

            },

            new QuestSet
            {
                Quest = "받아올림의 의미가 드러나는 발문은?",
                Answer = "일 모형 10개를 십 모형 1개로 바꿀 수 있다."

            },

            new QuestSet
            {
                Quest = "15 + 6과 같이 일의 자리에서 받아올림이 있는 두 자리 수와 한 자리 수의 덧셈의 세로셈 형식에 대한 알고리즘은 다음과 같다. ① 자리에 맞추어 수를 쓴다(A). ② 올림하여 B 위에 작게 1로 나타내고, 남은 1은 C에 내려쓴다(D). ③ 받아올림한 1과 B 수 1을 합하여 B에 2를 내려쓴다.",
                Answer = "위치적 기수법, 십의 자리, 일의 자리, 자릿값"

            },

            new QuestSet
            {
                Quest = "72 + 43과 같이 십의 자리에서 받아올림이 있는 두 자리 수끼리의 덧셈의 세로셈 형식 알고리즘은 다음과 같다. ① 자리에 맞추어 수를 쓴다(A). ② B 수끼리의 합 2 + 3 = 5를 B에 내려 쓴다. ③ C 수끼리의 합 7 + 4 = 11에서 10은 D의 자리로 받아올림하여 D의 자리 위에 작게 1로 나타내고, 남은 1은 C에 내려쓴다. ④ 받아올림한 1은 D에 내려쓴다.",
                Answer = "위치적 기수법, 일의 자리, 십의 자리, 백의 자리"

            },

            new QuestSet
            {
                Quest = "받아내림의 의미가 드러나도록 구체물을 조작할 때 할 수 있는 발문은?",
                Answer = "일 모형끼리 뺄 수 없으면 십 모형 1개를 일 모형 10개로 바꾼다."

            },

            new QuestSet
            {
                Quest = "32 - 8과 같이 받아내림이 있는 두 자리 수 와 한 자리 수 뺄셈 계산의 세로셈 형식 알고리즘은 다음과 같다. ➀ 자리에 맞추어 수를 쓴다(A). ➁ 2 - 8을 할 수 없으므로 B 수 3을 지우고 위에 2를 작게 쓴 다음 C 위에 10을 작게 쓰고 12에서 8을 뺀 값인 4를 C에 내려 쓴다. ➂ B에 남아있는 2를 B에 내려 쓴다.  ",
                Answer = "위치적 기수법, 십의 자리, 일의 자리"

            },

            new QuestSet
            {
                Quest = "74 - 6 = 72라고 계산한 경우, 학생이 이해하고 있지 않은 개념 A, B 2가지는?",
                Answer = "자릿값에 대한 이해, 받아내림에 대한 이해"

            },

            new QuestSet
            {
                Quest = "74 - 6 = 72라고 계산한 경우 지도 방법은?",
                Answer = "받아내림을 하여 계산해야 한다는 개연적 추론을 사용하여 옳게 계산하게 한다."

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈은 A 관계이다.",
                Answer = "역연산"

            },

            new QuestSet
            {
                Quest = "덧셈과 뺄셈의 관계를 알아보기 위해 할 수 있는 활동은 A을 B로 B을 A로 바꾸어보는 활동이 있다.",
                Answer = "덧셈식, 뺄셈식"

            },

            new QuestSet
            {
                Quest = "정교하거나 정확한 계산을 하지 않고 타당한 의사 결정을 하기에 충분한 답을 만들어내는 과정을 A이라고 한다.",
                Answer = "어림셈"

            },

            new QuestSet
            {
                Quest = "A의 활용은 다음과 같다. 1. A을 사용해서 무엇을 구해야 하는지 알 수 있다. 2. 계산을 바르게 하고 있는지를 확인할 수 있다. 3. 계산 결과에 대한 B을 하고 그것이 타당한지를 결정할 수 있다.",
                Answer = "어림셈, 반성"

            },

            new QuestSet
            {
                Quest = "덧셈, 뺄셈, 곱셈, 나눗셈을 하기 전에 계산 결과를 A해 보고, A한 값을 이용하여 계산 결과가 B한지 확인해보게 한다.",
                Answer = "어림, 타당"

            },

            new QuestSet
            {
                Quest = "학생들에게 친근한 A을 이용하여 덧셈, 뺄셈, 곱셈, 나눗셈에 관련된 문제를 만들고 B하게 한다.",
                Answer = "실생활 상황, 해결"

            },

            new QuestSet
            {
                Quest = "수와 연산 영역의 문제 상황에 적합한 A을 지도하고, B을 설명하게 하여 C을 기르게 한다.",
                Answer = "문제 해결 전략, 문제 해결 과정, 문제 해결 능력"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 세 자리수 끼리의 덧셈 계산 지도 방법은 다음과 같다. 수 모형을 활용한 A을 통하여 받아올림을 이해할 수 있도록 한 후 점차 B에 의한 덧셈과 뺄셈으로 C할 수 있도록 한다.",
                Answer = "조작활동, 자릿값, 형식화"

            },

            new QuestSet
            {
                Quest = "(세 자리 수) + (세 자리 수)를 수 모형으로 조작 활동한 결과를 식으로 나타내지 못하는 경우 지도 방안은 '주어진 수를 각 A에 B 한다.' 이다.",
                Answer = "자릿값, 맞추어 쓰게"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 (세 자리 수) + (세 자리 수)를 수 모형 조작활동으로 구할 수 있지만 조작 활동 없이 계산하는 것을 어려워하는 경우, 피아제의 A 추상화가 일어나는 것이다.",
                Answer = "의사경험적"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 (세 자리 수) + (세 자리 수)를 수 모형 조작활동으로 구할 수 있지만 조작 활동 없이 계산하는 것을 어려워하는 경우 지도 방안을 쓰시오.",
                Answer = "수 모형을 활용한 구체물 조작 활동 결과를 계산하는 식과 연결하여 이해할 수 있게 한다.",
                Reference = "일 모형, 십 모형, 백 모형을 차례로 더하게 하고 더하는 과정을 세로 형식의 계산식에 수로 나타내어 보게 한다."

            },

            new QuestSet
            {
                Quest = "342 + 117과 같이 받아올림이 없는 세 자리수 끼리의 덧셈 계산 세로셈 형식 알고리즘은 다음과 같다. ① A의 숫자를 맞추어 적는다. ② B부터 더한 값을 적어 준다. ③ C, D까지 더한 값을 차례대로 적어 준다.",
                Answer = "각 자리, 일의 자리, 십의 자리, 백의 자리"

            },

            new QuestSet
            {
                Quest = "128 + 114와 같이 받아올림이 일의 자리에서 한 번 있는 세 자리 수끼리의 덧셈 계산 세로셈 형식 알고리즘은 다음과 같다. ① 각 자리의 A를 맞추어 적는다. ② B에서 C가 있으면 D에 받아올려 계산한다.  ",
                Answer = "숫자, 일의 자리, 받아올림, 십의 자리"
                
            },

            new QuestSet
            {
                Quest = "학생들이 수 모형을 가지고 A 바꾸는 활동이 덧셈에서 받아올림과 어떤 관계가 있으며, 세로 계산에서 어떻게 나타내야 하는지 그 의미를 학생 스스로 발견하게 한다.",
                Answer = "일 모형이 10개가 되면 십 모형으로, 십 모형이 10개가 되면 백 모형으로"

            },

            new QuestSet
            {
                Quest = "A으로, B으로, 백 모형이 10개가 되면 어떤 모형으로 바꿔야 하는지 생각해보게 하여 자릿값과 받아올림의 계산 원리를 B하도록 한다.",
                Answer = "일 모형이 10개가 되면 십 모형, 십 모형이 10개가 되면 백 모형, 추론"

            },

            new QuestSet
            {
                Quest = "374 - 158과 같은 받아올림이 A 번 있는 (세 자리 수) - (세 자리 수)의 계산의 세로셈 형식에 대한 알고리즘은 다음과 같다. ① 각 자리의 B를 맞추어 적는다. ② C에서 받아내림이 있으면 D에 받아내려 계산한다.",
                Answer = "한, 숫자, 십의 자리, 일의 자리"

            },

            new QuestSet
            {
                Quest = "524 - 365와 같은 받아올림이 A 번 있는 (세 자리 수) - (세 자리 수)의 계산의 세로셈 형식에 대한 알고리즘은 다음과 같다. B에서 받아내림이 있으면 C에 받아내려 계산하고, D에서 받아내림이 있으면 B에 받아내려 계산한다.",
                Answer = "두, 십의 자리, 일의 자리, 백의 자리"

            },

            new QuestSet
            {
                Quest = "수 모형을 사용한 524 - 365의 계산에서 십 모형이 11개가 되는 이유를 서술하시오.",
                Answer = "십 모형 1개를 일 모형 10개로 바꾸어 십 모형이 2개에서 1개가 되었기 때문에, 백 모형 1개를 십 모형 10개로 바꾼 것을 더하면 11개가 된다."

            },

            new QuestSet
            {
                Quest = "받아내림이 두 번 있는 뺄셈의 계산 원리를 이해하도록 지도하시오.",
                Answer = "십 모형 1개를 일 모형 10개로, 백 모형 1개를 십 모형 10개로 바꾸는 연속적인 조작활동을 충분히 하도록 한다."

            },

            new QuestSet
            {
                Quest = "곱셈의 개념 A, B, C 3가지를 서술하시오.",
                Answer = "동수누가 개념, 배의 개념, 곱집합 개념"

            },

            new QuestSet
            {
                Quest = "곱셈의 개념 중 A 개념은 곱셈을 같은 수의 반복된 덧셈으로 정의하는 것이다.",
                Answer = "동수누가",
                Reference = "a × (b + 1) = a × b + a"

            },

            new QuestSet
            {
                Quest = "곱셈의 개념 중 A 개념은 곱셈을 단위량인 묶음의 크기와 묶음의 수에 해당하는 배, 그리고 전체량인 전체의 크기 사이의 상호관계를 의미한다.",
                Answer = "배의",
                Reference = "2 × 3 = 6은 2의 3배가 6임을 의미"
            },

            new QuestSet
            {
                Quest = "곱셈의 개념 중 A 개념은 집합론에 근거한 곱셈의 개념이다.",
                Answer = "곱집합",                

            },

            new QuestSet
            {
                Quest = "곱셈 개념 지도 단계는 다음과 같다. 1단계 : A (몇씩 몇 묶음), 2단계 : 묶음을 'B'로 나타내기 → B 개념 도입, 3단계 : 곱셈식과 C를 이용한 덧셈식 연결하기",
                Answer = "묶어 세기, 배, 동수누가"

            },

            new QuestSet
            {
                Quest = "곱셈 지도 모델 A, B, C, D 4가지를 서술하시오.",
                Answer = "묶음 모델, 조합 모델, 배열 모델, 직선 모델"

            },

            new QuestSet
            {
                Quest = "곱셈 지도 모델 A는 여러 사물을 몇 씩 몇 묶음으로 만들어서 나타내는 것이다.",
                Answer = "묶음 모델"

            },

            new QuestSet
            {
                Quest = "곱셈 지도 모델 A는 두 개 이상의 집합에서 만들 수 있는 가능한 순서쌍을 알아보는 데 사용하는 모델이다.",
                Answer = "조합 모델"

            },

            new QuestSet
            {
                Quest = "곱셈 지도 모델 A는 여러 사물을 가로 방향과 세로 방향으로 일정하게 배열하는 것이다.",
                Answer = "배열 모델"

            },

            new QuestSet
            {
                Quest = "곱셈 지도 모델 A는 반직선 형태를 일정한 간격으로 나눈 다음 호를 이용하여 일정한 간격의 크기를 도식화하여 나타낸 것이다.",
                Answer = "직선 모델"

            },

            new QuestSet
            {
                Quest = "곱셈 상황 A, B, C, D, E, F 6가지를 서술하시오.",
                Answer = "묶음, 배열, 비교, 비율, 조합, 넓이"

            },

            new QuestSet
            {
                Quest = "곱셈 상황 A은 배의 개념과 동수누가를 동시에 설명하기 위해 제시되는 상황이다.",
                Answer = "묶음"

            },

            new QuestSet
            {
                Quest = "곱셈 상황 A은 직사각형 모양으로 가지런히 대상이 정렬되어 있을 때 모두 몇 개인지 쉽게 셀 수 있도록 제시되는 상황이다.",
                Answer = "배열"

            },

            new QuestSet
            {
                Quest = "곱셈 상황 A는 2개 이상의 집합에서 집합의 크기를 비교하는 상황이다.",
                Answer = "비교"

            },

            new QuestSet
            {
                Quest = "곱셈 상황 A은 개별 항목의 수와 그에 해당하는 비율이 주어졌을 때 전체의 값을 구하는 상황이다.",
                Answer = "비율"

            },

            new QuestSet
            {
                Quest = "곱셈 상황 A은 두 가지 유형의 항목을 각각 짝지어서 나타낼 때 모든 경우의 수를 구하는 상황이다.",
                Answer = "조합"

            },

            new QuestSet
            {
                Quest = "곱셈 상황 A는 직사각형 가로와 세로의 길이가 주어졌을 때 단위넓이의 개수를 구하게 되는 상황이다.",
                Answer = "넓이"

            },

            new QuestSet
            {
                Quest = "[교학방유] 곱셈의 의미는 A와 B를 통해 다루고, 1의 곱과 0의 곱은 C과 관련지어 다룬다.",
                Answer = "배의 개념, 동수누가, 실생활"

            },

            new QuestSet
            {
                Quest = "곱셈구구를 위한 곱셈 전략(수준) A, B, C, D 4가지를 쓰시오",
                Answer = "직접 모델링 수준, 수 세기 수준, 구조화 수준, 형식화 수준"

            },

            new QuestSet
            {
                Quest = "곱셈구구를 위한 곱셈 전략(수준) 가운데 A 수준에서는 사물의 개수를 하나씩 세어 가는 수준으로 동수누가와 같은 덧셈이나 곱셈을 하지 못한다.",
                Answer = "직접 모델링"

            },

            new QuestSet
            {
                Quest = "곱셈구구를 위한 곱셈 전략(수준) 가운데 A 수준에서는 덧셈에 기초하는 수준으로 덧셈과 구분되는 곱셈 개념을 가지고 있지 못한 상태이다.",
                Answer = "수 세기"

            },

            new QuestSet
            {
                Quest = "곱셈구구를 위한 곱셈 전략(수준) 가운데 A 수준에서는 직선 모델이나 배열 모델 등 여러 가지 구조화된 시각적 모델을 사용할 수 있고 곱셈 구구를 이용해서 문제를 해결할 수 있으며, 교환법칙, 분배법칙, 결합법칙을 암묵적으로 다룰 수 있다.",
                Answer = "구조화"

            },

            new QuestSet
            {
                Quest = "곱셈구구를 위한 곱셈 전략(수준) 가운데 A 수준에서는 수와 수 사이의 관계, 교환법칙, 결합법칙, 0과 1의 곱 등의 곱셈 성질을 알고 다양한 곱셈 구구를 이용하여 추론함으로써 여러 가지 곱셈 전략으로 문제를 해결한다.",
                Answer = "형식화"

            },

            new QuestSet
            {
                Quest = "곱셈구구 지도 순서는 다음과 같다. A단 → B단 → C, D단(2배 전략) → E, F단(2배 전략) → G단 → H단 → I단과 J의 곱",
                Answer = "2, 5, 3, 6, 4, 8, 7, 9, 1, 0",
                Reference = "n단 곱셈 구구를 만드는 방법에는 첫째, n씩 계속해서 더하는 방법과 둘째, 앞의 곱에 n만큼 더하는 방법이 있다. (곱셈 구구 구성 원리)"

            },

            new QuestSet
            {
                Quest = "곱셈의 성질 A법칙, B법칙, C법칙 3가지를 쓰시오.",
                Answer = "교환, 결합, 덧셈에 대한 분배"

            },

            new QuestSet
            {
                Quest = "곱셈의 A법칙에 따르면 곱셈에서 곱하는 두 수의 순서를 서로 바꾸어도 곱이 같다.",
                Answer = "교환"

            },

            new QuestSet
            {
                Quest = "곱셈의 B법칙에 따르면 세 수를 곱할 때 곱하는 순서를 바꾸어도 결과는 같다.",
                Answer = "결합"

            },

            new QuestSet
            {
                Quest = "곱셈의 C법칙에 따르면, 예를 들어 7 × 16 = 7 × (10 + 6) = (7 × 10) + (7 × 6) 이다.",
                Answer = "덧셈에 대한 분배"

            },

            new QuestSet
            {
                Quest = "곱셈 지도 과정은 4단계로 제시된다. A → B → C → D",
                Answer = "구체물을 이용한 조작활동, 학생들이 만든 전략, 표준화된 알고리즘, 어림셈"

            },

            new QuestSet
            {
                Quest = "승수가 한 자리 수인 곱셈을 하는 원리는 A를 B에 따라 분해하여 C을 적용하여 부분 곱을 구하여 더한다. ",
                Answer = "피승수, 자릿값, 분배법칙",

            },

            new QuestSet
            {
                Quest = "(두 자리 수) × (한 자리 수)를 세로로 계산할 때 올림을 사용하는 방법을 어려워하는 경우는 A이 나타나는 B의 방법에서 점진적으로 올림을 사용하는 방법으로 이해할 수 있게 한다.",
                Answer = "자릿값, 부분 곱"

            },

            new QuestSet
            {
                Quest = "(두 자리 수) × (한 자리 수)를 지도할 때 A을 사용한 활동과 세로 계산을 연결하여 B을 잘 이해할 수 있게 한다.",
                Answer = "수 모형, 자릿값"

            },

            new QuestSet
            {
                Quest = "승수가 두 자리 수인 곱셈을 하는 원리는 다음과 같다. 1. 곱하는 수가 몇십 → A을 이용하여 이해. 2. 곱하는 수가 몇십 몇 → B을 C에 따라 분해하여 D을 구하여 더한다.",
                Answer = "결합법칙, 승수, 자릿값, 부분 곱"

            },

            new QuestSet
            {
                Quest = "각 단계에 적용된 원리 A, B, C, D를 쓰시오. 365 × 20 = 365 (10 × 2) [A] = 365 × (2 × 10) [B] = (365 × 2) × 10 [C] = 730 × 10 [D] = 7300  ",
                Answer = "자릿값 개념, 교환법칙, 결합법칙, 10의 거듭제곱의 곱"

            },

            new QuestSet
            {
                Quest = "곱하는 수(승수)가 한 자리 수일때는 A을 이용한다.",
                Answer = "묶음"

            },

            new QuestSet
            {
                Quest = "곱하는 수(승수)가 두 자리 수일 때는 B 모델(C)을 이용한다.",
                Answer = "배열, 모눈종이"

            },

            new QuestSet
            {
                Quest = "곱하는 수(승수)가 한 자리 수일 때, 원리 이해 지도 방법 - T : 32 × 4를 수 모형으로 어떻게 계산할까요? S : A이 12개이고, B이 8개이므로 128입니다.",
                Answer = "십 모형, 일 모형"

            },

            new QuestSet
            {
                Quest = "곱하는 수(승수)가 한 자리 수일 때, 형식화(세로셈) 지도 방법 - T : 32 × 4 = 128을 세로로 계산하면 어떻게 나타낼 수 있을까요? S : A",
                Answer = "십의 자리를 계산한 120과 일의 자리를 계산한 8을 더하여 128을 구합니다."

            },

            new QuestSet
            {
                Quest = "곱하는 수(승수)가 두 자리 수일 때, 원리 이해 지도 방법 - T : 53 × 29를 나타낸 색깔별 모눈의 수를 각각 곱셈식으로 나타내 보세요. S : A, B, C, D 입니다. T : 곱셈식의 값을 각각 구해 보세요. S : 50 × 20 = 1000, 3 × 20 = 60, 50 × 9 = 450, 3 × 9 = 27입니다. 따라서 A입니다.",
                Answer = "50×20, 3 × 20, 50 × 9, 3 × 9, 1000 + 60 + 450 + 27 = 1537"

            },

            new QuestSet
            {
                Quest = "곱하는 수(승수)가 두 자리 수일 때, 형식화 (세로셈) 지도 방법 - T : 53 × 29를 계산하는 방법을 말해보세요. S :  53과 A의 자리 B를 먼저 곱하고, 53과 C자리 D를 곱한 값을 더합니다. S : 53을 E와 F으로 나누고, 29를 G, H로 나누어서 각각을 곱하여 더합니다.",
                Answer = "일의 자리, 9, 십의 자리, 2, 50, 3, 20, 9"

            },

            new QuestSet
            {
                Quest = "(세 자리 수) × (몇십)을 지도할 때에는 A를 이용한다.",
                Answer = "10의 거듭제곱의 곱"

            },

            new QuestSet
            {
                Quest = "(세 자리 수) × (몇십) 에서 (세 자리 수) × (몇)의 값에 곱하는 (몇십)의 A만큼 0을 붙입니다.  ",
                Answer = "0의 개수"

            },

            new QuestSet
            {
                Quest = "[교학방유] 곱셈은 '(두 자리 수) × (한 자리 수)' , '(A) × (한 자리 수)', '(두 자리 수) × (두 자리 수)' , '(A) × (두 자리 수)'를 포함한다.",
                Answer = "세 자리 수"

            },

            new QuestSet
            {
                Quest = "곱셈의 어림 전략은 A, B, C 3가지가 있다.",
                Answer = "프론트엔드 전략, 라운딩 전략, 조절 전략"

            },

            new QuestSet
            {
                Quest = "곱셈의 어림 전략 가운데 A 전략은 높은 자리에서 낮은 자리로 내려가면서 계산하는 방법이다.",
                Answer = "프론트엔드"

            },

            new QuestSet
            {
                Quest = "곱셈의 어림 전략 가운데 A 전략은 끝수를 처리하여 암산하기 쉬운 수로 만드는 것이다.",
                Answer = "라운딩"

            },

            new QuestSet
            {
                Quest = "곱셈의 어림 전략 가운데 A 전략은 앞의 두 가지 전략에서 발생한 수의 차이를 어림해 조정하는 것이다.",
                Answer = "조절"

            },

            new QuestSet
            {
                Quest = "곱셈 방법에는 A, B, C, D 등의 4가지 방법이 있다.",
                Answer = "선 긋기 곱셈 방법, 격자 곱셈 방법, 문살 곱셈 방법, 곱셈 막대 방법"

            },

            new QuestSet
            {
                Quest = "곱셈 방법 가운데 A 곱셈 방법은 곱하는 두 수를 각각 자리 수끼리 나누어 선을 교차하게 그은 후, 선이 만나는 점의 수를 묶어서 세는 방법이다.",
                Answer = "선 긋기"

            },

            new QuestSet
            {
                Quest = "곱셈 방법 가운데 A 곱셈 방법은 격자 모양 위에 곱해지는 세 자리 수를, 격자 모양 오른쪽에 곱하는 두 자리 수를 두 줄로 쓴다. 대각선을 그어 해당 격자 밖의 위와 오른쪽에 있는 각 수끼리의 곱을 구하여 대각선의 위쪽에 곱의 십의 자리 숫자를, 아래쪽에 곱의 일의 자리 숫자를 쓴다. 각 수끼리의 곱을 다 쓴 후 대각선을 따라 같은 위치에 있는 수의 합을 구하여 위쪽으로 받아올림하여 차례대로 쓴다.",
                Answer = "격자"

            },

            new QuestSet
            {
                Quest = "곱셈 방법 가운데 A 곱셈 방법에 따르면 세로선을 빨간색으로 2줄, 파란색으로 3줄을 긋고 세로선 위에 겹치게 가로선을 빨간색으로 3줄, 파란색으로 2줄 긋는다. 서로 만나는 점에 표시를 해 간다.",
                Answer = "문살"

            },

            new QuestSet
            {
                Quest = "곱셈 방법 가운데 A 방법에 따른 예를 들어보면, 32 × 3을 계산할 때, 3의 단, 2의 막대를 차례로 놓은 뒤 3에 해당하는 줄을 찾는다. 대각선으로 맨 오른쪽 아래부터 일의 자리가 되고 다음 대각선에 있는 수를 모두 더하여 십의 자리가 된다. 그 다음 대각선에 있는 수를 모두 더한다.",
                Answer = "곱셈 막대"

            },

            new QuestSet
            {
                Quest = "[교학방유] 덧셈, 뺄셈, 곱셈, 나눗셈을 하기 전에 계산 결과를 A해보고, A한 값을 이용하여 계산 결과가 B한지 확인해보게 한다.",
                Answer = "어림, 타당"

            },

            new QuestSet
            {
                Quest = "[교학방유] 학생들에게 친근한 A 상황을 이용하여 덧셈, 뺄셈, 곱셈, 나눗셈에 관련된 B를 만들고 C하게 한다.",
                Answer = "실생활, 문제, 해결"

            },

            new QuestSet
            {
                Quest = "[교학방유] 수와 연산 영역의 문제 상황에 적합한 문제 해결 A을 지도하고 문제 해결 B을 설명하게 하여 문제 해결 C을 기르게 한다.",
                Answer = "전략, 과정, 능력"

            },

            new QuestSet
            {
                Quest = "2-1-6. 곱셈 : 주어진 물건을 다양한 방법으로 묶어 세고, A으로 나타낼 수 있다.",
                Answer = "몇 씩 몇 묶음"

            },

            new QuestSet
            {
                Quest = "2-1-6. 곱셈 : '몇 씩 몇 묶음'을 '몇 의 몇 배'로 나타냄으로써 A를 알 수 있다. → 현상을 본질로 조작하는 B",
                Answer = "배의 개념, 수평적 수학화"

            },

            new QuestSet
            {
                Quest = "2-1-6. 곱셈 : 배의 개념과 A의 개념을 관련지을 수 있다.",
                Answer = "동수누가"

            },

            new QuestSet
            {
                Quest = "2-1-6. 곱셈 : '몇의 몇 배'를 A으로 나타낼 수 있다. → 현상을 본질로 조직하는 B",
                Answer = "곱셈식, 수직적 수학화",
                Reference = "프로이덴탈에 의하면 어떤 단계에서 학습의 결과로 얻은 것은 다음 단계에서 다시 학습의 대상이 되며 이와 같은 반복 작용에 의해 학습의 수준이 상승된다."

            },

            new QuestSet
            {
                Quest = "2-1-6. 곱셈 : 이 단원은 곱셈의 의미를 이해하는 단원이므로 A적인 곱셈의 계산이 아니라 B, C, D 등의 방법을 통해 곱셈의 의미를 이해하도록 지도한다.",
                Answer = "형식, 뛰어 세기, 묶어 세기, 동수누가"

            },

            new QuestSet
            {
                Quest = "2-1-6. 곱셈 : 곱셈지도와 관련하여 가능한 A, B 등을 이용하도록 한다.",
                Answer = "묶음 모델, 격자 모델"

            },

            new QuestSet
            {
                Quest = "'친구들이 가진 모형의 수는 연수가 가진 모형의 수의 몇 배인지 알아봅시다.' 는 A 상황이다. 이러한 여러 가지 상황을 통해 B을 알 수 있다.",
                Answer = "비교, 배의 개념"

            },

            new QuestSet
            {
                Quest = "덧셈을 바탕으로 곱셈을 도입하는 것은 사칙연산의 A이다.",
                Answer = "계통성"

            },

            new QuestSet
            {
                Quest = "2-1-6. 곱셈 : A의 배의 개념 뿐만 아니라 B의 배의 개념을 이해할 수 있도록 한다.",
                Answer = "이산량, 연속량"

            },

            new QuestSet
            {
                Quest = "2-2-2. 곱셈구구 : 곱셈구구의 구성 원리를 친구들에게 설명할 때 그림이나 구체물, 말, 곱셈식 등 다양한 표현 방법을 사용하여 A할 수 있도록 안내한다.",
                Answer = "의사소통"

            },

            new QuestSet
            {
                Quest = "2-2-2. 곱셈구구 : 곱셈의 구성 원리를 지도할 때 다양한 상황에서 A, B, C을 적절하게 사용할 수 있도록 지도한다.",
                Answer = "묶음 모델, 수직선 모델, 배열 모델"

            },

            new QuestSet
            {
                Quest = "곱셈표를 만드는 과정에서 A과 B이 자연스럽게 학습이 되도록 하며 의도적으로 지도하지 않는다.",
                Answer = "교환법칙, 분배법칙"

            },

            new QuestSet
            {
                Quest = "2의 단 곱셈 구구에서 곱하는 수가 1씩 커지면 그 곱은 A씩 커진다. 이는 B의 원리이다.",
                Answer = "2, 곱셈구구"

            },

            new QuestSet
            {
                Quest = "곱셈구구를 지도할 때 3의 단과 6의 단을 함께 지도할 경우 A 전략이 사용된다.",
                Answer = "2배"

            },

            new QuestSet
            {
                Quest = "'손가락으로 9의 단 곱셈구구하기' 에서 브루너의 EIS이론에 따르면, 이는 A 표상이다.",
                Answer = "활동적"

            },

            new QuestSet
            {
                Quest = "1의 단 곱셈표 만들기와 관련된 교수학습 방법은 다음과 같다. A 상황에서 B, C 등의 D 추론을 사용하여 학생 스스로 수학적 사실을 E하고 적절한 근거에 기초하여 이를 F할 수 있게 한다.",
                Answer = "관찰과 탐구, 귀납, 유추, 개연적, 추측, 정당화"

            },

            new QuestSet
            {
                Quest = "'5 × 7과 7 × 5에 관련된 곱셈의 성질은 A이다.",
                Answer = "교환법칙"

            },

            new QuestSet
            {
                Quest = "'구슬은 모두 몇 개인지 두 가지 곱셈식으로 나타내어 보세요.' 활동과 관련된 성취기준은?",
                Answer = "[2수01-11] 곱셈구구를 이해하고, 한 자리 수의 곱셈을 할 수 있다."

            },

            new QuestSet
            {
                Quest = "곱셈 구구표를 통해서 알 수 있는 법칙은 곱셈의 A이다.",
                Answer = "교환법칙"

            },

            new QuestSet
            {
                Quest = "<연결큐브를 이용하여 곱셈식 만들기> 활동을 통해 알 수 있는 곱셈의 성질은 A이다.",
                Answer = "덧셈에 대한 곱셈의 분배 법칙"

            },

            new QuestSet
            {
                Quest = "(두 자리 수) × (한 자리 수)를 지도할 때 A을 사용한 활동과 B을 연결하여 C을 잘 이해할 수 있도록 한다.",
                Answer = "수 모형, 세로 계산, 자릿값"

            },

            new QuestSet
            {
                Quest = "올림을 사용하는 방법을 어려워하는 경우, A이 나타나는 B의 방법에서 C을 사용하는 방법으로 이해할 수 있도록 한다.",
                Answer = "자릿값, 부분 곱, 올림"

            },

            new QuestSet
            {
                Quest = "<자릿값을 무시한 경우>의 지도 방안을 서술하시오.",
                Answer = "자릿값의 의미를 정확하게 지도한다. 일의 자리 계산과 십의 자리 계산이 다름을 이해하는 방법으로 지도한다."

            },

            new QuestSet
            {
                Quest = "<올림을 계산하지 않은 경우> 지도 방안을 서술하시오.",
                Answer = "십진 기수법에 따라 수 모형을 교환하는 연습을 전체 학생을 대상으로 충분히 지도한다."

            },

            new QuestSet
            {
                Quest = "<수 모형으로 계산한 수학적 절차를 형식화하는 데 어려움을 느끼는 경우> 지도 방안을 서술하시오.",
                Answer = "부분 곱을 계산한 절차를 형식화하는 과정에서 먼저 일 모형의 수를 알아본 후 곱셈식으로 나타내고, 십 모형의 수를 알아본 후 곱셈식으로 나타내게 한다."

            },

            new QuestSet
            {
                Quest = "올림이 없는 (몇십몇) × (몇)의 계산 원리와 형식을 이해하고 계산하는 과정의 지도 순서는 다음과 같다. A 조작 활동 → 원리 B → 세로셈으로 C (D을 적용한 스캐폴딩 단계 → E 단계)",
                Answer = "수 모형, 이해, 형식화, 분배법칙, 정교화",
                Reference = "정교화 단계에서는 일의 자리를 계산한 값과 십의 자리를 계산한 값을 두 줄로 나누어 쓰지 않는다."

            },

            new QuestSet
            {
                Quest = "올림이 있는 (몇십몇) × (몇)의 계산 원리와 형식을 이해하고 계산하는 과정에서 '128'에 대해 수 모형 조작 활동 단계에 할 수 있는 발문은?",
                Answer = "십 모형이 12개이고 일 모형이 8개이므로 128입니다."

            },

            new QuestSet
            {
                Quest = "올림이 있는 (몇십몇) × (몇)의 계산 원리와 형식을 이해하고 계산하는 과정에서 '128'에 대해 스캐폴딩 단계에서 할 수 있는 발문은?",
                Answer = "십의 자리를 계산한 120과 일의 자리를 계산한 8을 더하여 128을 구합니다."

            },

            new QuestSet
            {
                Quest = "올림이 있는 (몇십몇) × (몇)의 계산 원리와 형식을 이해하고 계산하는 과정에서 '128'에 대해 정교화 단계에서 할 수 있는 발문은?",
                Answer = "일의 자리를 계산한 값과 십의 자리를 계산한 값을 두 줄로 나누어 쓰지 않습니다."

            },

            new QuestSet
            {
                Quest = "32 × 4를 계산하는 알고리즘을 서술하시오.",
                Answer = "일의 자리 수 2와 4를 곱한 8을 일의 자리에 쓰고 십의 자리 수 3과 4를 곱하여 2를 십의 자리에 쓰고 1을 백의 자리에 써서 128로 계산합니다."

            },

            new QuestSet
            {
                Quest = "곱셈식을 모눈종이에 그리기 → A 모델이다.",
                Answer = "배열"

            },

            new QuestSet
            {
                Quest = "수 모형으로 계산한 수학적 절차를 A하여 표현하는 과정에서 B과 C를 추론하는 능력과 의사소통 능력을 기를 수 있다.",
                Answer = "형식화, 자릿값, 올림의 계산 원리"

            },

            new QuestSet
            {
                Quest = "4-1-3. 곱셈과 나눗셈 : (몇백) × (몇십) 을 쉽게 계산하는 방법을 설명해보세요.",
                Answer = "(몇백) × (몇십)에서 (몇) × (몇)의 값에 곱하는 두 수의 0의 개수만큼 0을 붙입니다."

            },

            new QuestSet
            {
                Quest = "나눗셈 상황 A, B 2가지를 쓰시오.",
                Answer = "포함제, 등분제"

            },

            new QuestSet
            {
                Quest = "나눗셈 상황 A는 어떤 양을 몇 개씩 묶었을 때 묶음의 개수를 구하는 상황이다.",
                Answer = "포함제",
                Reference = "포함제는 나누어지는 수와 나누는 수의 속성이 같다. 예) 바둑돌 ÷ 바둑돌 = ? "

            },

            new QuestSet
            {
                Quest = "나눗셈 상황 A는 어떤 양을 몇 묶음으로 똑같이 묶었을 때 묶음의 크기를 구하는 상황이다.",
                Answer = "등분제",
                Reference = "등분제는 나누어지는 수와 나누는 수의 속성이 다르다. 예) 바둑돌 ÷ 접시 = ? "

            },

            new QuestSet
            {
                Quest = "곱셈과 나눗셈의 관계는 A이다.",
                Answer = "역연산 관계"

            },

            new QuestSet
            {
                Quest = "4-1-3. 곱셈과 나눗셈 교학방유 : 한 가지 상황을 곱셈식과 나눗셈식으로 나타내는 활동을 통하여 곱셈과 나눗셈의 A를 이해하게 한다.",
                Answer = "관계"

            },

            new QuestSet
            {
                Quest = "4-1-3. 곱셈과 나눗셈 교학방유 : 수와 연산의 문제 상황에 적합한 문제 해결 A을 지도하고, 문제 해결 B을 설명하게 하여 문제 해결 C을 기르게 한다.",
                Answer = "전략, 과정, 능력"

            },

            new QuestSet
            {
                Quest = "19를 5로 나눌 때 19는 A 수(B), 5는 C 수(D) 라고 합니다. 19를 5로 나누면 E는 3이고 4가 남습니다. 이때 4를 19 ÷ 5의 F라고 합니다.",
                Answer = "나누어지는, 피제수, 나누는, 제수, 몫, 나머지"

            },

            new QuestSet
            {
                Quest = "다음은 나눗셈 지도 과정에서 A할 때 사용하는 발문이다. [색 도화지 300장을 3학급에 똑같이 나누어주려고 합니다. 한 학급에 몇 장씩 줄 수 있을까요?]",
                Answer = "나눗셈 상황 제시 및 이해"

            },

            new QuestSet
            {
                Quest = "다음은 나눗셈 지도 과정에서 A할 때 사용하는 발문이다. [한 학급에 색 도화지를 몇 장씩 줄 수 있을지 어림해 보세요.]",
                Answer = "어림하기"

            },

            new QuestSet
            {
                Quest = "다음은 나눗셈 지도 과정에서 A할 때 사용하는 발문이다. [300 ÷ 3을 수 모형으로 알아봅시다. S : 일 모형을 3개씩 묶어볼까?]",
                Answer = "수 모형 조작 활동을 통해 계산 원리 탐색하기"

            },

            new QuestSet
            {
                Quest = "A 조작 활동과 나눗셈의 알고리즘을 B해 봄으로써 조작 활동과 알고리즘의 체계적인 연관성을 높이도록 한다.",
                Answer = "수 모형, 비교"

            },

            new QuestSet
            {
                Quest = "나누는 수(제수)가 한 자리 수인 나눗셈 지도에서, 원리 이해 지도 방법의 발문은 다음과 같다. T : 19 ÷ 5에서 한 묶음에 5개씩 묶으려면 어떻게 해야 하나요? S : A를 B으로 바꾸어야 합니다.",
                Answer = "십 모형, 낱개 모형"

            },
            
            new QuestSet
            {
                Quest = "나누는 수(제수)가 한 자리 수인 나눗셈 지도에서, 19 ÷ 5의 형식화(세로셈) 지도 방법 발문은 다음과 같다. 19 - 10 = 9 → A : 2, 9 - 5 = 4 → A : 1, A = 2 + 1 = 3, B : 4",
                Answer = "몫, 나머지"

            },

            new QuestSet
            {
                Quest = "나눗셈 검산 지도 : 나머지가 있는 나눗셈 계산이 맞는지 확인하는 방법으로 A와 B의 곱에 C를 더하면 D가 되어야 한다. 단, 2015개정교육과정에서 혼합 계산은 5·6학년군으로 이동했으므로 '16 ÷ 5 = 3....1' 식을 검산할 때 '5 × 3 + 1'과 같은 식을 사용할 수 없기 때문에 '5 × 3 = 15. 15 + 1 = 16'과 같이 두 단계로 나누어 제시하였다. → E과 F은 서로를 검산하기 위해 사용된다.",
                Answer = "나누는 수, 몫, 나머지, 나누어지는 수, 곱셈, 나눗셈"

            },

            new QuestSet
            {
                Quest = "나눗셈의 알고리즘은 A, B 2가지이다.",
                Answer = "분배 알고리즘, 누감 알고리즘"

            },

            new QuestSet
            {
                Quest = "나눗셈의 알고리즘 가운데 A 알고리즘은 한 묶음에 들어가는 최대 몫을 구하는 것이다.",
                Answer = "분배"

            },

            new QuestSet
            {
                Quest = "나눗셈의 알고리즘 가운데 A 알고리즘은 나누어줄 수 있는 임의의 값을 계속해서 빼나가는 것으로 몫을 찾는 것이다.",
                Answer = "누감"

            },

            new QuestSet
            {
                Quest = "4-1-3. 곱셈과 나눗셈 교학방유 : 나눗셈에서 '(두 자리 수) ÷ (한 자리 수)'는 A 경우와 B 경우를 포함하여 C와 D를 이해하게 하고, 나누는 수가 두 자리인 나눗셈에서는 '(두 자리 수) ÷ (두 자리 수)' , '(세 자리 수) ÷ (두 자리 수)' 를 다룬다.",
                Answer = "나누어떨어지는, 나누어떨어지지 않는, 몫, 나머지"

            },

            new QuestSet
            {
                Quest = "4-1-3. 곱셈과 나눗셈 평방유 : 나눗셈에 대한 검산에서는 나눗셈식을 보고 곱셈식으로 나타내는 것보다 검산의 A와 B을 이해하는지에 초점을 두고 평가를 한다.",
                Answer = "목적, 필요성"

            },

            new QuestSet
            {
                Quest = "나누는 수가 두 자리인 나눗셈을 계산할 때에는 A 전략을 활용할 수 있다.",
                Answer = "잠정 몫 어림"

            },

            new QuestSet
            {
                Quest = "나눗셈은 A을 사용하여 십의 자리와 일의 자리 B 몫을 구하고, 이를 더하여 몫을 구하는 과정이 기본 원리이다.",
                Answer = "오른쪽 분배법칙, 부분"

            },

            new QuestSet
            {
                Quest = "나누는 수가 두 자리 수인 나눗셈의 계산 방법은 1. A의 자리 B 구하기(몫의 A자리 부분을 먼저 C한다) → 2. D의 자리 B 구하기이다.",
                Answer = "십, 부분 몫, 어림, 일"

            },

            new QuestSet
            {
                Quest = "잠정 몫 어림 전략은 A 어림하기, B 어림하기, C 어림하기(계산하기 쉬운 수로 어림)로 3가지이다.",
                Answer = "앞자리 수로, 반올림하여, 어울리는 수로"

            },

            new QuestSet
            {
                Quest = "4-1-3. 곱셈과 나눗셈 교학방유 : 자연수의 사칙계산에서 계산 원리를 이해하거나 계산 기능을 숙달하는 것이 목적이 아닌 경우에는 A를 사용하게 수 있다.",
                Answer = "계산기"

            },

            new QuestSet
            {
                Quest = "3-1-3. 나눗셈 : 나눗셈을 A, B로 임의적으로 나누어서 가르치기보다는 여러 상황에서 학생들 스스로 나눗셈의 해결 방법을 찾아내도록 유도하여 나눗셈의 C를 명확하게 알도록 지도한다.",
                Answer = "등분제, 포함제, 몫의 의미"

            },

            new QuestSet
            {
                Quest = "3-1-3. 나눗셈 : A를 이해하기 위해 한 가지 상황을 B와 C으로 나타내는 활동을 통해 서로의 연결성을 인식한다.",
                Answer = "곱셈과 나눗셈의 관계, 곱셈식, 나눗셈식"

            },

            new QuestSet
            {
                Quest = "'바둑돌 12개를 3명이 똑같이 나누면 한 명이 몇 개씩 가질 수 있는지 알아봅시다.' 는 A인 나눗셈 상황이다.",
                Answer = "등분제"

            },

            new QuestSet
            {
                Quest = "'바둑돌 12개를 접시 3개에 똑같이 나누어 놓아 보세요.'는 나눗셈 전략 가운데 A 전략(B)에 해당된다.",
                Answer = "직접 모델링, 분배하기"

            },

            new QuestSet
            {
                Quest = "'과자 8개를 한 접시에 2개씩 담으려면 접시가 몇 개 필요할까요?'는 어떤 나눗셈 상황인가?",
                Answer = "포함제"

            },

            new QuestSet
            {
                Quest = "'15명을 한 모둠에 3명씩 나누면 몇 모둠인지 알아봅시다.'의 상황을 등분제 상황으로 바꾸어 서술해보시오.",
                Answer = "15명을 5모둠으로 만들려면 한 모둠에 몇 명씩 들어가야 하나요?"

            },

            new QuestSet
            {
                Quest = "'사과 20개를 바구니 4개에 똑같이 나누면 한 바구니에 몇 개씩 담을 수 있는지 알맞은 나눗셈식을 써 보세요.'와 관련된 성취기준은?'",
                Answer = "[4수01-08] 나누는 수가 한 자리 수인 나눗셈의 계산 원리를 이해하고 그 계산을 할 수 있으며, 나눗셈에서 몫과 나머지의 의미를 안다."

            },

            new QuestSet
            {
                Quest = "'야구공 그림에 알맞은 곱셈식과 나눗셈식을 만들어 보세요.' 활동과 관련된 성취기준은?",
                Answer = "[4수01-07] 나눗셈이 이루어지는 실생활 상황을 통하여 나눗셈의 의미를 알고, 곱셈과 나눗셈의 관계를 이해한다."

            },

            new QuestSet
            {
                Quest = "4-1-3. 곱셈과 나눗셈 : 승수가 두 자리 수인 곱셈의 경우에는 몇십의 곱과 몇의 곱으로 곱셈 계산 방법의 원리를 지도하여야 한다. 이는 A으로 그 바탕은 B이다.",
                Answer = "부분 곱의 합, 곱셈의 분배법칙"

            },

            new QuestSet
            {
                Quest = "4-1-3. 곱셈과 나눗셈 : 몫이 두 자리 수가 되는 경우 몫을 구할 때 몫의 몇십 부분과 몇 부분의 합으로 나눗셈의 계산 방법의 원리를 지도해야 한다. 이는 A으로 그 바탕이 되는 수학적 원리는 나눗셈의 B이다. 나눗셈에서 왼쪽 분배법칙은 성립하지 않는다.",
                Answer = "부분 몫의 합, 오른쪽 분배법칙"

            },

            new QuestSet
            {
                Quest = "나눗셈의 오른쪽 분배법칙은 무엇인가?",
                Answer = "(a + b) ÷ c = a ÷ c + b ÷ c"

            },

            new QuestSet
            {
                Quest = "곱셈과 나눗셈에서 알고리즘의 형식적인 A보다는 B를 파악하는 데 중점을 두어 지도한다.",
                Answer = "절차, 원리"

            },

            new QuestSet
            {
                Quest = "몫이 두 자리 수인 나눗셈은 제수의 10배, 20배, 30배...의 값을 이용하여 몫의 A를 예상하게 한다.",
                Answer = "십의 자리 숫자"

            },

            new QuestSet
            {
                Quest = "167 ÷ 20의 몫을 구하는 과정을 서술하시오.",
                Answer = "어울리는 수로 어림하여 잠정 몫을 구한 후에 맞으면 그대로 하고 틀리면 몫을 1 크게 또는 1 작게 한다."

            },

            new QuestSet
            {
                Quest = "나눗셈 식에서 몫의 십의 자리를 곱해서 쓴 값에는 A이 생략되어 있다.",
                Answer = "0"

            },

            new QuestSet
            {
                Quest = "혼합 계산의 순서는 다음과 같다. (1) 덧셈과 뺄셈이 섞여있는 식은 A에서부터 차례대로 계산한다. (2) 덧셈과 뺄셈이 섞여 있고 B가 있는 식은 B 안을 먼저 계산한다. (3) 곱셈과 나눗셈이 섞여 있는 식은 A에서부터 차례대로 계산한다. (4) 곱셈과 나눗셈이 섞여있고 B가 있는 식은 B 안을 먼저 계산한다. (5) 덧셈, 뺄셈, 곱셈, 나눗셈이 섞여 있는 식은 C와 D을 먼저 계산한다. B가 있으면 B 안을 가장 먼저 계산한다.",
                Answer = "앞, 괄호, 곱셈, 나눗셈"

            },

            new QuestSet
            {
                Quest = "[교학방유] : 자연수의 혼합 계산은 A에 중점을 두고, 지나치게 복잡한 혼합 계산은 다루지 않는다.",
                Answer = "계산 순서"

            },

            new QuestSet
            {
                Quest = "분모가 같은 진분수의 덧셈을 지도할 떄 원리 이해 지도 방법의 경우, [⅓ + ⅔를 A에 나타내고, 계산하는 방법을 말해보세요.] 식으로 지도할 수 있다.",
                Answer = "수직선"

            },

            new QuestSet
            {
                Quest = "분모가 같은 진분수의 덧셈을 지도할 때 형식화 지도 방법에서는 [A는 그대로 두고 B끼리 더한 다음 C이면 D로 바꿉니다.] 라는 발문을 사용할 수 있다.",
                Answer = "분모, 분자, 가분수, 대분수"

            },

            new QuestSet
            {
                Quest = "분모가 같은 대분수의 덧셈을 지도할 때, 형식화 지도 방법에서 [1. A끼리 더하고 B끼리 더해서 계산합니다. 2. C를 D로 바꾸어 E 부분만 더해서 계산합니다.] 라고 할 수 있다.",
                Answer = "자연수, 진분수, 대분수, 가분수, 분자"

            },

            new QuestSet
            {
                Quest = "분모가 같은 진분수의 뺄셈을 지도할 때, 형식화 지도 방법에서 [A끼리의 뺄셈으로 계산합니다.] 라고 할 수 있다.",
                Answer = "분자"

            },

            new QuestSet
            {
                Quest = "1과 진분수의 뺄셈을 지도할 때, A의 원리를 이해하기 위한 활동을 한다.",
                Answer = "받아내림"

            },

            new QuestSet
            {
                Quest = "1과 진분수의 뺄셈을 지도할 때, 형식화 지도 방법에서 [A을 B의 형태로 바꾸어 A - (진분수)의 계산을 C끼리 빼는 진분수의 뺄셈 형태로 익히도록 합니다.] 라고 할 수 있다.",
                Answer = "1, n/n, 분자"

            },

            new QuestSet
            {
                Quest = "받아내림이 없고 분모가 같은 대분수의 뺄셈을 지도할 때, [1. A 부분과 B 부분으로 나누어서 계산합니다. 2. C로 바꾸어 D 부분만 빼서 계산합니다.] 라고 할 수 있다.",
                Answer = "자연수, 진분수, 가분수, 분자"

            },

            new QuestSet
            {
                Quest = "(자연수) - (분수)를 지도할 때 형식화 지도 방법에서 [A끼리 뺄 수 없을 때에는 B에서 C만큼을 분수로 받아내림하여 계산하거나 D로 바꾸어 계산합니다.] 라고 할 수 있다.",
                Answer = "진분수, 자연수, 1, 가분수"

            },           

            new QuestSet
            {
                Quest = "(자연수) - (분수)를 지도할 때 원리 이해 지도 단계에서 사용할 수 있는 발문으로 [A에서 B만큼을 3/3으로 바꿨습니다.] 가 있다.",
                Answer = "자연수, 1"

            },

            new QuestSet
            {
                Quest = "분모가 같은 대분수의 뺄셈을 지도할 때 원리 이해 지도 단계에서 사용할 수 있는 발문은 [⅓에서 ⅔을 뺄 수 없기 때문에 분수에서 A만큼을 3/3으로 빌려왔습니다.] 가 있다.",
                Answer = "1"

            },

            new QuestSet
            {
                Quest = "분모가 같은 대분수의 뺄셈을 지도할 때 형식화 지도 단계에서 [1. A에서 B만큼을 C로 받아내림하여 A끼리, C끼리 빼서 나온 값을 더하여 계산합니다. 2. D로 바구어 계산합니다.] 라고 할 수 있다.",
                Answer = "자연수, 1, 분수, 가분수"

            },

            new QuestSet
            {
                Quest = "자연수와 다른 분수의 특징은 다음과 같다. ① 자연수 체계에서는 하나의 수로 물건의 수를 나타내게 되는데, 분수에서는 A에 따라 여러 가지 B로 나타낼 수 있다. (B는 분수의 양 자체는 변하지 않음.) 예를 들어 피자 한 판의 절반은 1/2, 3/6, 4/8 등으로 표현할 수 있다. ② C적 사고 (곱셈이 기반이 되는 사고)를 하고 있다. 자연수와 달리 분수의 곱셈에서는 그 값이 더 D지기도 하고, 분수의 나눗셈에서는 그 값이 더 E지는 경우가 생긴다.",
                Answer = "분모, 동치분수, 승법, 작아, 커"

            },

            new QuestSet
            {
                Quest = "분수의 분모, 분자에 같은 수를 더할 수 없는 까닭은 분수는 A적 사고를 기반으로 하기 때문이다.",
                Answer = "승법"

            },

            new QuestSet
            {
                Quest = "분수의 성질 2가지는 다음과 같다. ① 분모와 분자에 0이 아닌 같은 수를 A 분수의 크기는 같다. ② 분모와 분자에 0이 아닌 같은 수로 B 분수의 크기는 같다.",
                Answer = "곱하여도, 나누어도"

            },

            new QuestSet
            {
                Quest = "약분과 통분의 선행학습 요소 A, B, C 3가지를 쓰시오.",
                Answer = "최대공약수, 최소공배수, 분수의 성질"

            },

            new QuestSet
            {
                Quest = "분모와 분자를 그들의 공약수로 나누어 간단히 하는 것을 A라고 한다.",
                Answer = "약분"

            },

            new QuestSet
            {
                Quest = "분모와 분자의 공약수가 1뿐인 분수를 A라고 한다.",
                Answer = "기약분수"

            },

            new QuestSet
            {
                Quest = "통분한 분모를 A라고 한다.",
                Answer = "공통분모"

            },

            new QuestSet
            {
                Quest = "통분의 필요성 : 통분의 A의 크기 비를 위해 필요하다고 할 때, 이는 서로 다른 단위를 B를 이용하여 같은 단위로 맞춰주는 과정이다.",
                Answer = "분모가 다른 분수, 공통분모"

            },

            new QuestSet
            {
                Quest = "분모, 분자에 0을 곱하면 안되는 이유를 지도하시오.",
                Answer = "각각의 분수에서 분모와 분자에 0을 곱했을 때 어떻게 되는지 생각해보도록 한다. 어떤 분수를 몇개를 예시로 들더라도 모두 0/0이 되어 값이 같아지는 모순이 생긴다. 수학적으로 0/0이라는 분수가 정의되지 않는다는 점이 더 중요하며, 분수에서 분모는 0이 될 수 없다는 점을 알려준다."

            },

            new QuestSet
            {
                Quest = "5-1-4. 약분과 통분 성취기준 : [6수01-05] A을 이용하여 B 분수를 만들 수 있다.",
                Answer = "분수의 성질, 크기가 같은"

            },

            new QuestSet
            {
                Quest = "5-1-4. 약분과 통분 성취기준 : [6수01-06] 분수를 A, B할 수 있다.",
                Answer = "약분, 통분"

            },

            new QuestSet
            {
                Quest = "5-1-4. 약분과 통분 성취기준 : [6수01-07] A의 크기를 비교할 수 있다.",
                Answer = "분모가 다른 분수"

            },

            new QuestSet
            {
                Quest = "5-1-4. 약분과 통분 성취기준 : [6수01-12] A를 이해하고 크기를 비교할 수 있다.",
                Answer = "분수와 소수의 관계",
                Reference = "분수와 소수의 관계 → 변환관계"

            },

            new QuestSet
            {
                Quest = "5-1-4. 약분과 통분 교학방유 : 분모가 다른 분수의 크기 비교에서 A을 이용하여 B하고 C하는 활동을 하게 한다.",
                Answer = "수 감각, 추론, 토론"

            },

            new QuestSet
            {
                Quest = "분모의 통분이 복잡한 경우 ① A를 같게하고 분모를 비교 → 분모의 크기가 B 쪽의 분수의 크기가 크다. ② A가 분모보다 C 작은 분수의 크기 비교 → 분모가 D 분수의 크기가 크다.",
                Answer = "분자, 작은, 1, 큰"

            },

            new QuestSet
            {
                Quest = "5-1-4. 약분과 통분 교학방유 : 수와 연산 영역의 문제 상황에서 A, B, C, D, E등을 통하여 F를 기르게 한다.",
                Answer = "문제 해결 전략 비교하기, 주어진 문제에서 필요 없는 정보나 부족한 정보 찾기, 조건을 바꾸어 새로운 문제 만들기, 문제 해결 과정의 타당성 검토하기, 문제 해결 능력"

            },

            new QuestSet
            {
                Quest = "5-1-4. 약분과 통분 평방유 : 분수의 통분을 이용한 문제에서 A로 B뿐만 아니라 C도 이용할 수 있게 한다.",
                Answer = "공통분모, 최소공배수, 분모의 곱과 같은 공배수"

            },

            new QuestSet
            {
                Quest = "약분과 통분은 후속 학습인 A을 위한 선행 학습 개념으로도 중요한 의미를 가진다.",
                Answer = "분수의 덧셈과 뺄셈"

            },

            new QuestSet
            {
                Quest = "5-1-4. 약분과 통분 단원 목표 : ① A가 같은 분수를 알 수 있다. ② B을 이용하여 A가 같은 분수를 만들 수 있다. ③ 분수를 C할 수 있다. ④ 분수를 C하여 D로 나타낼 수 있다. ⑤ 분수를 E할 수 있다. ⑥ F 분수의 크기를 비교할 수 있다. ⑦ 분수와 소수의 관계를 알고 분수를 소수로, 소수를 분수로 나타내어 크기를 비교할 수 있다.",
                Answer = "크기, 분수의 성질, 약분, 기약분수, 통분, 분모가 다른"

            },

            new QuestSet
            {
                Quest = "분모가 달라도 A를 나타내는 분수가 있음을 알게 한다.",
                Answer = "같은 크기"

            },

            new QuestSet
            {
                Quest = "A의 크기를 비교하려면 통분이 필요함을 알게 한다.",
                Answer = "분모가 다른 분수"

            },

            new QuestSet
            {
                Quest = "크기가 같은 분수를 이해하고 분수의 성질인 'A'를 스스로 나타내어 정리할 수 있도록 한다.",
                Answer = "분모와 분자에 0이 아닌 같은 수를 곱하거나 분모와 분자를 0이 아닌 같은 수로 나누어도 분모의 크기가 변하지 않는다."

            },

            new QuestSet
            {
                Quest = "분모와 분자를 0이 아닌 같은 수로 나누어도 A가 같음을 통해 B의 의미를 파악할 수 있도록 한다.",
                Answer = "분수의 크기, 약분"

            },

            new QuestSet
            {
                Quest = "분모의 분자에 0이 아닌 같은 수를 곱해도 A가 같음을 통해 B의 의미를 파악할 수 있도록 한다.",
                Answer = "분수의 크기, 통분"

            },

            new QuestSet
            {
                Quest = "A이나 B, C를 이용하여 통분할 수 있음을 알고, 통분할 수 있는 다양한 기회를 제공한다.",
                Answer = "분모의 곱, 공배수, 최소공배수"

            },

            new QuestSet
            {
                Quest = "수직선에 1/4, 2/8, 3/12 만큼을 표시하여 분수의 크기를 비교하기 : 분수를 나타내는 A에 해당되는 세 수직선의 길이가 B로서 모두 같다는 것을 알게 한다.",
                Answer = "전체, 1"

            },

            new QuestSet
            {
                Quest = "분수의 크기를 수직선에 나타내지 못하는 경우의 지도방안을 서술하시오.",
                Answer = "등분할을 통해 분수의 개념을 다시 이해할 수 있도록 지도한다."

            },

            new QuestSet
            {
                Quest = "분수를 수직선에 나타내었지만 분수의 크기를 비교하지 못하는 경우의 지도방안을 서술하시오.",
                Answer = "전체인 1은 크기가 같다는 것을 지도한다."

            },

            new QuestSet
            {
                Quest = "분수의 성질을 이용하여 크기가 같은 분수를 만들지 못하는 경우 지도방안을 서술하시오.",
                Answer = "어떤 분수를 여러 가지 분수로 나타낼 수 있는데, 이때 분수의 양 자체가 변하지 않는다는 개념을 알게 한다."

            },

            new QuestSet
            {
                Quest = "크기가 같은 분수를 만들기 위해 0이 아닌 수로 분모와 분자를 나눈 상황을 상기시키고 이때 분모와 분자를 나눈 수가 A와 B의 C임을 확인한다.",
                Answer = "분모, 분자, 공약수"

            },

            new QuestSet
            {
                Quest = "분모와 분자를 A로 나누어 B해 보세요.",
                Answer = "공약수, 약분"

            },

            new QuestSet
            {
                Quest = "공약수 중 어떤 수로 나누었을 때 가장 간단한 분수가 되었나요?",
                Answer = "최대공약수"

            },

            new QuestSet
            {
                Quest = "어떤 수를 A로 나누면 항상 어떤 수 자신이 되므로 A도 공약수가 됨을 안내한다.",
                Answer = "1"

            },

            new QuestSet
            {
                Quest = "통분하는 방법 2가지를 서술하시오. ① 두 분모의 A을 B로 하여 통분한다. ② 두 분모의 C를 B로 하여 통분한다.",
                Answer = "곱, 공통분모, 최소공배수"

            },

            new QuestSet
            {
                Quest = "세 분수의 크기를 비교하는 방법은 다음과 같다. 우선 두 분수끼리 A하여 차례로 크기를 비교한다. 이 때 분수막대나 그림을 이용할 수도 있다. 세 분수의 B를 구하는 방법으로 C을 구할 경우 의도적으로 막을 필요는 없으나 두 분수의 크기를 비교하는 방법만으로도 세 분수의 크기를 비교할 수 있음을 주지시키고 다양한 방법을 사용한다.",
                Answer = "통분, 최소공배수, 공통분모"

            },

            new QuestSet
            {
                Quest = "두 분수의 크기를 비교할 때 분모의 크기가 너무 크거나 최소 공배수를 구하기 어려울 때는 A 만들어 준다.",
                Answer = "분모를 같게"

            },

            new QuestSet
            {
                Quest = "분수와 소수의 크기를 비교할 때는 A를 B로 나타내어 B끼리 비교하거나 B를 A로 나타내어 A끼리 비교하도록 지도한다.",
                Answer = "분수, 소수",
                Reference = "분수를 소수로 나타낼 때에는 분모를 10으로 고친 다음 소수로 나타내고 소수를 분수로 나타낼 때에는 분모가 10인 분수로 고치게 한다."

            },

            new QuestSet
            {
                Quest = "조건을 바꾸어 새로운 문제 만들기는 A 전략이다.",
                Answer = "도전"

            },

            new QuestSet
            {
                Quest = "분자가 분모보다 1만큼 더 작은 분수의 크기 비교 방법을 서술하시오.",
                Answer = "분모가 클 수록 분수의 크기가 크다."

            },

            new QuestSet
            {
                Quest = "이분모분수의 덧셈과 뺄셈에서의 어림의 중요성 : 동분모 분수의 덧셈은 A의 의미를 확장하여 문제를 해결하는 데 크게 어려움이 없으나, 이분모 분수의 덧셈과 뺄셈의 경우에는 B가 달라지므로 분수 연산에 대한 양감 및 수 감각의 이해가 선행되지 않으면 자연수 연산의 확장만으로는 분수 연산의 이해에 어려움을 겪게 된다. 학생들이 ½과 같은 C을 사용하여 답을 어림할 줄 알게 되면 분수 연산에 대해 더 잘 이해하게 된다.",
                Answer = "자연수 연산, 기준이 되는 단위, 기준점"

            },

            new QuestSet
            {
                Quest = "이분모 분수의 덧셈과 뺄셈의 핵심 아이디어 중 첫째로, 덧셈·뺄셈은 곱셈·나눗셈과 다르게 연산에 관여하는 세 가지 양(덧셈에서는 피가수, 가수, 합)이 가리키는 대상의 A가 모두 같다. 따라서 이분모분수의 덧셈과 뺄셈에서는 각 분수의 전체 A가 변하지 않고 그대로 유지되는 것이 중요하다는 것을 인식하도록 고정된 전체 A를 명시적으로 지도한다.",
                Answer = "단위"

            },

            new QuestSet
            {
                Quest = "이분모 분수의 덧셈과 뺄셈의 핵심 아이디어 중 둘째로, 이분모 분수의 덧셈·뺄셈에서 결과를 A으로 표현하기 위해서는 새로운 B가 필요하다.",
                Answer = "하나의 양, 단위"

            },

            new QuestSet
            {
                Quest = "이분모 분수의 덧셈과 뺄셈의 핵심 아이디어 중 셋째로, A 과정을 거쳐 세 번째 수준의 B를 찾을 수 있고, 이는 이분모 분수의 덧셈과 뺄셈 알고리즘과 연결된다. 이분모 분수의 덧셈과 뺄셈에서 통분은 동치분수를 만드는 과정과 연결된다.",
                Answer = "재귀적 분할, 단위"

            },

            new QuestSet
            {
                Quest = "동치분수를 만들 때에는 A을 이용한다.",
                Answer = "분수의 성질"

            },

            new QuestSet
            {
                Quest = "A이란 부분의 크기를 전체를 기준으로 해석하기 위해 각 부분을 다시 부분으로 분할하는 방법이다.",
                Answer = "재귀적 분할"

            },

            new QuestSet
            {
                Quest = "통분을 해도 A, B, C는 변하지 않는다.",
                Answer = "고정된 전체 단위(1), 전체 1의 의미, 분수의 크기"

            },

            new QuestSet
            {
                Quest = "5-1-5. 분수의 덧셈과 뺄셈 성취기준 : [6수01-08] A의 덧셈과 뺄셈의 계산 원리를 이해하고 그 계산을 할 수 있다.",
                Answer = "분모가 다른"

            },

            new QuestSet
            {
                Quest = "5-1-5. 분수의 덧셈과 뺄셈 평방유 : 분수의 사칙 계산에서 A로 나타낼 것을 요구하지 않을 경우, 계산 결과를 B로 나타내는 것도 허용한다.",
                Answer = "기약분수, 기약분수가 아닌 분수"

            },

            new QuestSet
            {
                Quest = "5-1-5. 분수의 덧셈과 뺄셈 평방유 : 분수의 통분을 이용한 문제에서 공통분모로 A뿐만 아니라 B도 이용할 수 있게 한다.",
                Answer = "최소공배수, 분모의 곱과 같은 공배수"

            },

            new QuestSet
            {
                Quest = "5-1-5. 분수의 덧셈과 뺄셈 단원개관 : 실생활 속에서 이분모 분수의 덧셈과 뺄셈이 필요한 상황을 제시하여 자연스럽게 A의 필요성을 끌어낼 수 있도록 활동을 구성하였다. B이 용이한 분수 모델을 제시하여 통분을 이용한 연산의 이해를 도왔으며 C를 이용하여 이분모 대분수의 덧셈과 뺄셈의 개념 이해와 원리 탐구를 할 수 있도록 활동을 안내한다.",
                Answer = "공통분모, 단위 추론, 분수 막대"

            },

            new QuestSet
            {
                Quest = "실생활 주변의 상황에서 이분모 분수의 덧셈과 뺄셈이 활용되는 예를 제시하고 이분모 분수의 덧셈과 뺄셈에서 A의 필요성을 인식할 수 있도록 지도한다.",
                Answer = "공통분모"

            },

            new QuestSet
            {
                Quest = "이분모 분수의 덧셈과 뺄셈에서 A를 통한 정확한 계산에 앞서 B을 통한 C을 예측해보는 활동을 통해 분수 연산의 의미를 이해할 수 있도록 한다.",
                Answer = "형식화, 어림, 결괏값"

            },

            new QuestSet
            {
                Quest = "이분모 분수의 덧셈과 뺄셈에 관한 문제를 해결할 때 공통분모를 두 분모의 최소공배수로 하지 않더라도 자신만의 방법을 수학적으로 A하게 B할 수 있으면 인정해주도록 한다.",
                Answer = "타당, 설명"

            },

            new QuestSet
            {
                Quest = "다음은 받아올림이 있는 분모가 다른 대분수의 덧셈의 교수학습 활동·평가 순서이다. ① 두 사람이 가진 쌀가루의 양을 그림으로 나타내어 A할 수 있는가? ② 분모가 다른 대분수의 덧셈에서 결괏값이 어느 정도 되는지 A할 수 있는가? → B을 이용하여 받아올림이 있는 분모가 다른 대분수의 C을 이해하고 D할 수 있는가?",
                Answer = "어림, 분수 모델, 계산 원리, 형식화"

            },

            new QuestSet
            {
                Quest = "분수의 양을 어림하지 못할 때에는 A를 활용하여 이해를 도울 수 있다.",
                Answer = "동치분수"

            },

            new QuestSet
            {
                Quest = "분모가 다른 덧셈과 뺄셈을 학습하기 전에 선수학습 내용(분모가 같은 분수의 덧셈과 뺄셈, 통분, 분수의 크기 비교)에 대한 이해를 확인하고 A를 형성한다.",
                Answer = "선행조직자"

            },

            new QuestSet
            {
                Quest = "분수 막대를 사용하여 단위분수의 합으로 나타내기 ( 1/2, 1/4, 1/8인 분수막대를 연결하여 크기가 7/8이 되도록 만들어 보세요) → A 능력을 기를 수 있다.",
                Answer = "정보 처리"

            },

            new QuestSet
            {
                Quest = "□■ → ▥▥와 같이 분할을 거듭하여 동치분수를 만드는 것은?",
                Answer = "재귀적 분할"

            },

            new QuestSet
            {
                Quest = "분모가 다른 진분수의 덧셈·뺄셈의 계산 방법 두 가지와 그에 따른 장점은 다음과 같다. ① 두 분모의 A을 공통분모로 하여 B한 후 계산한다. : 공통분모를 구하기 쉽다. ② 두 분모의 C을 공통분모로 하여 B한 후 계산한다 : 분자끼리의 계산이 쉽다, 계산 결과를 약분할 필요가 없다.",
                Answer = "곱, 통분, 최소공배수"

            },

            new QuestSet
            {
                Quest = "받아올림이 없는 분모가 다른 분수의 덧셈 원리는 A 모델을 이용하는 것이다. (B를 통해 수 막대에 표시하면서 통분을 이해한다). 또한 형식화 원리는 두 분모의 C 또는 D를 공통분모로 하여 통분한 뒤 계산하는 것이다.",
                Answer = "길이, 그림 그리기, 곱, 최소공배수"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 분모가 다른 분수의 덧셈 원리는 A(B) 모델을 이용하는 것이다. (C를 통해 수 막대에 표시하면서 통분을 이해) 또한 형식화 원리는 두 분수를 통분한 후 계산하는 것이다. 이 때 계산 결과를 D로 나타낼 수도 있다.",
                Answer = "영역, 들이, 그림 그리기, 대분수"

            },

            new QuestSet
            {
                Quest = "받아올림이 있는 분모가 다른 대분수의 덧셈 방법 두 가지와 각각의 장점은 다음과 같다. ① A는 A끼리, B는 B끼리 계산한다 : B 부분의 계산이 편리하다. ② 대분수를 C로 나타내어 계산한다. A 부분과 B 부분을 따로 떼어 계산하지 않아도 된다.",
                Answer = "자연수, 분수, 가분수"

            },

            new QuestSet
            {
                Quest = "3/4컵에서 1/2컵 사용하고 남은 설탕의 양 구하기에서 1/2이 반 컵이라는 기준을 학생들이 찾을 수 있도록 유도하고 정확한 계산을 요구하기 보다는 반 컵이 넘거나 넘지 않는 등 A을 할 수 있는 기회를 제공하여 분수 연산에서의 B을 기를 수 있도록 한다.",
                Answer = "어림, 수 감각"

            },

            new QuestSet
            {
                Quest = "분모가 다른 진분수의 덧셈·뺄셈 계산 방법 두 가지와 각각의 장점은 다음가 같다. ① 두 분모의 A을 공통분모로 하여 통분한 후 계산한다. : 공통분모를 구하기 쉽다. ② 두 분모의 B를 공통분모로 하여 통분한 후 계산 : 분자끼리의 계산이 쉽고, 계산 결과를 약분할 필요가 없다.",
                Answer = "곱, 최소공배수"

            },

            new QuestSet
            {
                Quest = "받아내림이 없는 분모가 다른 분수의 뺄셈의 원리 이해 방법은 A(B) 모델을 이용하는 것이다. (그림 그리기를 통해 수 막대에 표시하면서 통분을 이해한다) 또한 형식화 방법은 두 분모를 C한 후 계산하는 것이다. 이는 대분수로 나타낼 수도 있다.",
                Answer = "영역, 들이, 통분"

            },

            new QuestSet
            {
                Quest = "분모가 다른 대분수의 뺄셈 계산 방법 두 가지와 각각의 장점은 다음과 같다. ① A는 A끼리, B는 B끼리 빼서 계산하는 방법 : B 부분의 계산이 편리하다. ② 대분수를 C로 나타내어 계산하는 방법 : A 부분과 B 부분을 따로 떼거나 받아내림을 하지 않고 계산할 수 있다.",
                Answer = "자연수, 분수, 가분수"

            },

            new QuestSet
            {
                Quest = "받아내림이 있는 분모가 다른 대분수의 뺄셈에서 받아내림의 의미가 드러나는 발문은?",
                Answer = "빼지는 수의 분수 부분이 빼는 수의 분수 부분보다 작으면 자연수 부분에서 1을 받아내림하여 가분수로 바꾸어 계산합니다.",
                Reference = "교과서 → 자연수 부분의 '1'을 1과 크기가 같은 분수로 만들어 계산하면 돼."

            },

            new QuestSet
            {
                Quest = "받아내림이 있는 분모가 다른 분수의 뺄셈 원리 이해 방법은 A모델, B모델(교과서 그림이나 종이테이프)을 활용하는 것이다. 형식화 방법은 C는 C끼리 빼고 두 분수를 D하여 계산하는 것이다. 이때 빼지는 수의 분수 부분이 빼는 수의 분수 부분보다 작으면 C 부분에서 1을 받아내림하여 가분수로 바꾸어 계산한다.",
                Answer = "영역, 길이, 자연수, 통분"

            },

            new QuestSet
            {
                Quest = "동분모 분수의 덧셈과 뺄셈에서 분모는 분모끼리, 분자는 분자끼리 계산하는 오류의 원인은 A의 영향을 받은 것이다. 이는 B(C)가 무엇인지 이해하지 못한 경우이다.",
                Answer = "자연수에서 학습했던 덧셈과 뺄셈 계산 방법, 전체, 1"

            },

            new QuestSet
            {
                Quest = "동분모 분수의 덧셈과 뺄셈에서 분모는 분모끼리, 분자는 분자끼리 계산하는 오류를 저지를 때의 지도 방법은 다음과 같다. 주어진 덧셈과 뺄셈 상황에서나 이를 여러 A로 나타냈을 때 B, 즉 C이 무엇인지를 파악하는 것이 중요함을 강조한다.",
                Answer = "영역 모델, 단위, 1"

            },

            new QuestSet
            {
                Quest = "이분모 분수의 덧셈과 뺄셈에서 분모는 분모끼리, 분자는 분자끼리 계산하는 오류를 저지를 때 지도 방법은 다음과 같다. A를 우선적으로 강조하고, B 방법을 적극적으로 활용한다.",
                Answer = "분수의 의미, 어림"

            },

            new QuestSet
            {
                Quest = "분수 막대를 사용하여 받아올림의 의미가 드러난 발문을 한다면?",
                Answer = "1/10막대 10개를 1막대 1개로 바꿉니다."

            },

            new QuestSet
            {
                Quest = "분수 막대를 사용하여 받아내림의 의미가 드러난 발문을 한다면?",
                Answer = "1을 1/4막대 4개로 바꿉니다."

            },

            new QuestSet
            {
                Quest = "분수의 곱셈 상황 A, B, C 3가지를 적으시오.",
                Answer = "묶음 상황, 넓이 상황, 비율 상황"

            },

            new QuestSet
            {
                Quest = "분수의 곱셈 지도 단계의 1단계는 A × B 이다. 2단계는 B × A이다. 3단계는 A × A이다.",
                Answer = "분수, 자연수"

            },

            new QuestSet
            {
                Quest = "분수와 자연수의 곱셈 원리를 이해할 때는 A의 개념을 활용한다. 예를 들어, 2/5 × 3 = 2/5 + 2/5 + 2/5로 A의 원리를 적용한 것이다. 한편 형식화를 지도할 때에는 분수와 자연수를 곱한 뒤 B한다.",
                Answer = "동수누가, 약분"

            },

            new QuestSet
            {
                Quest = "(진분수) × (자연수)의 계산 방법은 A와 자연수를 곱한 뒤 B하는 것이다. 또는 C와 자연수를 B한 뒤 A와 자연수를 곱한다.",
                Answer = "분자, 약분, 자연수"

            },

            new QuestSet
            {
                Quest = "(대분수) × (자연수) 를 계산할 떄에는 A, B의 법칙을 따른다. 또한 C 모델을 사용한다.",
                Answer = "분배 법칙, 동수 누가, 영역"

            },

            new QuestSet
            {
                Quest = "(대분수) × (자연수)의 계산 방법은 다음과 같다. 대분수를 A로 고친 뒤 분수와 자연수를 곱한다. 또는 대분수의 자연수 부분과 분수 부분에 각각 B를 곱해 더한다.",
                Answer = "가분수, 자연수"

            },

            new QuestSet
            {
                Quest = "대분수와 자연수를 곱할 때, 학생들이 대분수 상태에서 약분하는 경우 대분수를 먼저 A로 고친 뒤 약분해야 함을 강조한다.",
                Answer = "가분수"

            },

            new QuestSet
            {
                Quest = "자연수와 분수의 곱셈 원리를 이해 때는 A 개념을 활용한다. 예를 들어 3의 3배가 3 × 3이므로 3의 ⅓배는 3 × ⅓임을 이용한다. 한편 형식화를 지도할 때에는 자연수와 B를 곱한 뒤 약분하게 한다. 이때 C 모델로 지도하고, 분수의 연산자로서의 의미 개념은 지도하지 않는다.",
                Answer = "배, 분자, 길이"

            },

            new QuestSet
            {
                Quest = "(자연수) × (진분수) 계산할 때에는 자연수와 A를 곱한 뒤 약분한다. 또한 자연수와 A를 곱하는 과정에서 약분을 할 수 있다. 자연수와 B를 약분한 뒤 자연수와 분수를 곱한다.",
                Answer = "분자, 분모"

            },

            new QuestSet
            {
                Quest = "(자연수) × (대분수) 계산을 할 떄에는 대분수를 A로 고쳐서 계산한다. 또는 대분수를 (B) + (C) 상태로 고쳐서 계산한다. → D 법칙",
                Answer = "가분수, 자연수, 진분수, 분배"

            }, 

            new QuestSet
            {
                Quest = "분수끼리의 곱셈의 원리를 이해할 때는 A 모델(B)을 활용한다. (나뉜 전체 사각형의 수 = 두 진분수의 분모의 곱 / 겹쳐 칠한 사각형의 수 = 두 진분수의 분자의 곱) 형식화를 할 때에는 C는 C끼리, D는 D끼리 곱하는 과정에서 약분한다.",
                Answer = "영역, 그림 그리기, 분자, 분모",
                Reference = "분수의 곱셈은 기준이 달라지나 분수의 덧셈은 그렇지 않다."

            },

            new QuestSet
            {
                Quest = "(단위분수) × (단위분수) 를 계산할 때에는 분자끼리의 곱이 항상 A이므로 그대로 두고, B끼리의 곱으로 나타내면 된다는 것을 알게 한다.",
                Answer = "1, 분모"
            },

            new QuestSet
            {
                Quest = "(진분수) × (진분수)의 계산 방법은 A는 A끼리, B는 B끼리 곱하는 C에서 약분하는 것이다.",
                Answer = "분자, 분모, 과정"
            },

            new QuestSet
            {
                Quest = "학생이 (진분수) × (진분수)를 계산할 때 도구적 이해를 하고 있을 경우, A 모델을 사용하여 원리를 이해하도록 한다. 이때 나누어진 사각형의 수는 두 진분수의 B를 곱한 것과 같고, 겹쳐서 색칠한 사각형의 수는 두 진분수의 C를 곱한 것과 같다는 점을 알게 한다.",
                Answer = "영역, 분모, 분자"
            },

            new QuestSet
            {
                Quest = "(대분수) × (대분수)를 계산할 때에는 대분수를 A로 고쳐서 계산한다. 분수의 곱셈을 하기 전에 B를 하면 쉽게 곱셈을 할 수 있다.",
                Answer = "가분수, 약분"
            },

            new QuestSet
            {
                Quest = "5학년 2학기 분수의 곱셈 성취기준 : [6수01-09] A의 계산 원리를 이해하고 그 계산을 할 수 있다.",
                Answer = "분수의 곱셈"
            },

            new QuestSet
            {
                Quest = "5학년 2학기 분수의 곱셈 평방유 : 분수의 사칙계산에서 A로 나타낼 것을 요구하지 않는 경우, 계산 결과를 B로 나타내는 것도 허용한다.",
                Answer = "기약분수, 기약분수가 아닌 분수"
            },

            new QuestSet
            {
                Quest = "5학년 2학기 분수의 곱셈 평방유 : 분수의 통분을 이용한 문제에서 공통분모로 A뿐만 아니라 B도 이용할 수 있게 한다.",
                Answer = "최소공배수, 분모의 곱과 같은 공배수"
            },

            new QuestSet
            {
                Quest = "몫의 의미로서 분수를 가르치는 이유는 분수의 나눗셈의 A를 위해서이다.",
                Answer = "관계적 이해"
            },

            new QuestSet
            {
                Quest = "몫 관련 오류 A, B 2가지를 쓰시오.",
                Answer = "나머지를 구하는 오류, 몫의 분수 부분을 나머지로 오인하는 오류",
                Reference = "나머지를 구하는 오류 : 나머지가 남지 않게 분수로 몫을 표현하라는 문제 의도를 이해하지 못한 것이다."
            },

            new QuestSet
            {
                Quest = "분수의 나눗셈을 지도할 때, 제수가 자연수일 때는 A, 제수가 분수일 때에는 B, C로 지도한다.",
                Answer = "등분제, 포함제, 동수누감 원리"
            },

            new QuestSet
            {
                Quest = "제수가 분수일 때 등분제 접근이 적절하지 않은 이유를 서술하시오.",
                Answer = "자연수가 아닌 분수로 똑같이 나눈다는 관점을 생각하기 어렵다."
            },

            new QuestSet
            {
                Quest = "분수 나눗셈에서 포함제 접근을 위한 전제 조건을 서술하시오.",
                Answer = "피제수가 제수보다 커야 한다."
            },

            new QuestSet
            {
                Quest = "몫이 1보다 작은 (자연수) ÷ (자연수)의 원리를 이해할 때 A을 사용(그림을 똑같이 나누어 해당 부분 색칠)하고 B를 이용한다. 또한 형식화 할 때에 (자연수) ÷ (자연수)의 몫은 C 수를 분자, D 수를 분모로 하는 분수로 나타낸다.",
                Answer = "영역 모델, 등분제, 나누어지는, 나누는"
            },

            new QuestSet
            {
                Quest = "A (자연수) ÷ (자연수)의 원리를 이해할 때에는 다음과 같이 지도할 수 있다. *상황 : 색종이 5장을 4명이 똑같이 나누어 가지려고 할 때 한 명이 가지게 되는 색종이의 양은? ① 색종이를 1장씩 나누어 주고 나머지 1장을 4등분하여 그것의 1장씩을 나누어 줍니다. ② 색종이를 각각 4등분하여 그것의 1장씩을 나누어 줍니다.",
                Answer = "몫이 1보다 큰"
            },

            new QuestSet
            {
                Quest = "몫이 1보다 큰 (자연수) ÷ (자연수)의 형식화는 다음과 같다. ① A만큼 나누어 가지고 나머지를 다시 나누어 주면 (자연수) ÷ (자연수)의 몫을 분수로 나타낼 수 있다. ② B ÷ (자연수)를 먼저 구하고 나누어지는 C만큼 생각하기. → (자연수) ÷ (자연수)의 몫은 나누어지는 수를 분자, 나누는 수를 분모로 하는 분수로 나타낸다.",
                Answer = "자연수의 몫, 1, 자연수의 개수"
            },

            new QuestSet
            {
                Quest = "나눗셈을 곱셈으로 바꾸어 표현하는 방법 A, B, C 3가지를 서술하시오.",
                Answer = "동치분수, 배의 개념 이용, 넓이 상황 이용",
                Reference = "배의 개념을 이용하는 예 : (분수) ÷ 3은 똑같이 3등분한 것중에 1이므로 ⅓이다. 따라서 (분수) ÷ 3은 (분수)의 ⅓, (분수) × ⅓. 넓이 상황의 경우 그림을 이용한다."
            },

            new QuestSet
            {
                Quest = "분수의 분자가 제수인 자연수의 배수가 되는 경우의 원리는 A 활동을 통해 이해한다.",
                Answer = "수 막대에 색칠하기"
            },

            new QuestSet
            {
                Quest = "분수의 분자가 제수인 자연수의 배수가 되는 경우를 형식화하면, 분자가 자연수의 A일 때에는 B를 C로 나눈다.",
                Answer = "배수, 분자, 자연수"
            },

            new QuestSet
            {
                Quest = "분수의 분자가 제수인 자연수의 배수가 되지 않는 경우의 원리를 이해할 때에는 A으로 나타내어 이해한다. 무엇으로 4를 나누는 것과 무엇에 ¼을 곱하는 것의 의미를 비교한다.",
                Answer = "그림",
                Reference = "⅔ ÷ 4은 ⅔을 똑같이 4등분 한 것 중에 하나이다. 이것은 ⅔의 ¼이므로 ⅔ × ¼이다."
            },

            new QuestSet
            {
                Quest = "분수의 분자가 제수인 자연수의 배수가 되지 않는 경우 형식화는 다음과 같다. [분수의 A에 B를 곱하여 계산한다. /÷(B)를 × 1/(B)로 바꾼 다음 곱하여 계산한다.",
                Answer = "분모, 자연수"
            },

            new QuestSet
            {
                Quest = "분모가 같은 (분수) ÷ (분수) 원리를 이해할 때 다음 두 가지 방법이 있다. ① A를 적용하여 계산 원리를 이해한다. ② B와 C를 이용하여 D적 이해를 한다.",
                Answer = "동수누감의 원리, 분수의 성질, 교환법칙, 관계"
            },

            new QuestSet
            {
                Quest = "분모가 같은 (분수) ÷ (분수)는 A의 분모와 분자를 바꾼 다음 B한다. -> C적 이해",
                Answer = "나누는 수, 곱, 도구"
            },

            new QuestSet
            {
                Quest = "분모가 다른 (분수) ÷ (분수)를 지도할 때에는 A의 분모와 분자를 바꾼 다음 B한다.",
                Answer = "나누는 수, 곱",
                Reference = "분수의 성질과 교환법칙을 이해해야 한다."
            },

            new QuestSet
            {
                Quest = "6-1-1. 분수의 나눗셈 성취기준 : [6수01-10] 'A'에서 나눗셈의 B을 C로 나타낼 수 있다.",
                Answer = "(자연수) ÷ (자연수), 몫, 분수",
                Reference = "분수 : 몫의 의미"
            },

            new QuestSet
            {
                Quest = "6-1-1. 분수의 나눗셈 성취기준 : [6수01-11] A의 계산원리를 이해하고 그 계산을 할 수 있다.",
                Answer = "분수의 나눗셈"
            },

            new QuestSet
            {
                Quest = "6-1-1. 분수의 나눗셈 교학방 : 분수의 나눗셈은 'A', 'B', 'C'를 다룬다.",
                Answer = "(분자) ÷ (자연수), (자연수) ÷ (분수), (분수) ÷ (분수)"
            },

            new QuestSet
            {
                Quest = "6-1-1. 분수의 나눗셈 평방유 : 분수의 사칙 계산에서 A로 나타낼 것을 요구하지 않을 경우, 계산 결과를 B로 나타내는 것도 허용한다.",
                Answer = "기약분수, 기약분수가 아닌 분수"
            },

            new QuestSet
            {
                Quest = "6-1-1. 분수의 나눗셈 평방유 : 분수의 통분을 이용한 문제에서 공통분모로 A뿐만 아니라 B도 이용할 수 있게 한다.",
                Answer = "최소공배수, 분모의 곱과 같은 공배수"
            },

            new QuestSet
            {
                Quest = "6-1-1. 분수의 나눗셈 단원 개관 : 이 단원에서 학생들은 A 개념을 먼저 학습한다. 자연수에서 학습한 나눗셈 개념을 분수가 포함된 상황으로 일반화하여 (분수) ÷ (자연수)를 지도한다.",
                Answer = "몫으로서 분수"
            },

            new QuestSet
            {
                Quest = "(분수) ÷ (자연수) 지도 내용 3가지는 다음과 같다. ① 피제수인 분수의 A가 제수인 자연수의 B가 되는 경우 ② 분수의 A가 제수인 자연수의 B가 되지 않는 경우 ③ (분수) ÷ (자연수)를 (분수) × 1/(자연수)로 나타내는 경우. 왜 이렇게 나타낼 수 있는지를 의미 있게 지도하여 C 이해에 머물러있게 하지 않고, D 이해를 하도록 유도한다. ",
                Answer = "분자, 배수, 도구적, 관계적",
            },

            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수)의 몫을 자연수가 아닌 분수로 나타내는 것이 적절한 상황을 통해 A의 의미를 지도한다.",
                Answer = "몫으로서의 분수"
            },

            new QuestSet
            {
                Quest = "(분수) ÷ (자연수)를 (분수) × 1/(자연수)로 쉽게 구할 수 있음을 지도하는 것이 아니라, 나눗셈을 A으로 바꾸어 표현할 수 있고, 왜 그러한지 B를 이해하게 하는 데 중점을 두어야 한다.",
                Answer = "곱셈식, 원리"
            },

            new QuestSet
            {
                Quest = "(분수) ÷ (자연수)를 (분수) × 1/(자연수)로 계산하거나 나타내는 방법을 지도하기 전에 A과 B로 (분수) ÷ (자연수)의 결과를 구하는 활동을 충분히 해야 한다.",
                Answer = "분수의 개념, 나눗셈의 의미"
            },

            new QuestSet
            {
                Quest = "(분수) ÷ (자연수)를 (분수) × 1/(자연수)로 계산하는 것보다 A으로 계산하는 것이 더 빠를 수 있다. 따라서 (분수) ÷ (자연수)를 (분수) × 1/(자연수)로 계산하지 않도록 한다.",
                Answer = "분자의 나눗셈"
            },

            new QuestSet
            {
                Quest = "분수와 관련된 그림을 다룰 때에는 그림에서 A(B, C)에 해당하는 크기가 무엇인지를 반드시 살펴보는 활동을 해야 한다. 학생들은 무조건 주어진 그림 전체를 A로 생각하는 경향이 있다.",
                Answer = "1, 단위, 기준"
            },

            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수)의 몫을 분수로 나타낼 수 있음을 지도하기 위해서는 사과나 빵처럼 A를 나누어도 의미가 있는 상황이 제시되어야 한다.",
                Answer = "낱개"
            },

            new QuestSet
            {
                Quest = "이중 수직선을 활용한 (분수) ÷ (자연수) 지도의 장점은 다음과 같다. 1. 분수가 포함된 상황이어도 A과 동일한 나눗셈 상황임을 이해하는 데 도움이 된다. 2. 몫을 B할 때 그리고 몫을 자연수가 아닌 C로 나타내어야 함을 이해하는 데 도움이 된다. 3. 분수의 나눗셈을 분수의 D로 나타낼 수 있음을 지도하는 데 유용하다. 이때는 E 모델과 F의 결합 형태의 그림 표현을 주로 사용한다. F는 교사의 교수 보조 도구, F를 그리는 것을 학습 목표로 간주한다. 이는 곧 G 이동이다.",
                Answer = "자연수 상황, 어림, 분수, 곱셈, 영역, 수직선, 메타인지"
            },

            new QuestSet
            {
                Quest = "자연수의 몫과 나머지를 이용하여 (자연수) ÷ (자연수)의 몫을 분수로 나타내는 방법을 설명할 수 없을 때 지도 방안은?",
                Answer = "색종이를 사용, 직접 나누어보며 나머지를 어떻게 똑같이 나눌 수 있을지 생각하는 활동을 한다.",
                Reference = "나머지를 직접 나누어보는 활동을 통해 그 몫이 분수가 됨을 확인하게 한다."
            },

            new QuestSet
            {
                Quest = "1 ÷ 4가 ¼인지 모르고 있을 때 지도 방안은 다음과 같다. 1 ÷ 4를 그림을 이용하여 A에 대한 B의 크기를 분수로 나타내어 보도록 한다. 이 과정에서 1 ÷ (자연수)를 분수로 나타내는 방법과 원리를 알아낼 수 있도록 활동을 유도한다.",
                Answer = "전체, 색칠한 부분"
            },

            new QuestSet
            {
                Quest = "5 ÷ 4가 ¼가 5개인지 모르고 있을 때 지도 방안을 서술하시오.",
                Answer = "5 ÷ 4를 5 ÷ 4의 그림을 5개로 제시하여 보여주고 전체에 대한 색칠한 부분의 크기를 분수로 나타내본다.",
                Reference = "이 과정을 통해 (자연수) ÷ (자연수)를 분수로 나타내는 방법과 원리를 알아낼 수 있도록 활동을 유도한다."
            },

            new QuestSet
            {
                Quest = "1 ÷ (자연수)의 몫을 분수로 나타낼 떄에는 A의 형태로 일반화하도록 한다. (답안 작성시 ● 활용하시오)",
                Answer = "1 ÷ ● = 1/●"
            },

            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수)의 몫을 분수로 나타내는 방법을 서술하시오.",
                Answer = "(자연수) ÷ (자연수)의 몫은 나누어지는 수를 분자, 나누는 수를 분모로 하는 분수로 나타낼 수 있다."
            },

            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수)의 몫을 분수로 나타낼 떄에는 A의 형태로 일반화하도록 한다. (답안 작성시 ▲, ● 활용하시오)",
                Answer = "▲ ÷ ● = ▲ / ●"
            },

            new QuestSet
            {
                Quest = "몫이 1보다 큰 (자연수) ÷ (자연수)를 분수로 나타내는 방법 2가지 A, B를 서술하시오.",
                Answer = "자연수 몫과 나머지를 이용하여 (자연수) ÷ (자연수)의 몫을 분수로 나타내는 방법, 1÷(자연수)와 (자연수)÷(자연수)를 관련지어 몫을 분수로 나타내는 방법"
            },

            new QuestSet
            {
                Quest = "분자가 자연수의 배수가 아닌 (분수) ÷ (자연수) 의 계산 원리 지도 방법은 다음과 같다. A를 이용하고, B로 나타내고 이해한다.",
                Answer = "동치분수, 영역 모델"
            },

            new QuestSet
            {
                Quest = "(분수) ÷ (자연수)를 분수의 곱셈으로 나타내는 형식화 발문은?",
                Answer = "분수의 분모에 자연수를 곱하여 계산한다. 또는 (분수) ÷ (자연수) 를 (분수) × 1/(자연수)로 바꾼 다음 곱하여 계산한다."
            },

            new QuestSet
            {
                Quest = "(대분수) ÷ (자연수) 를 한 가지 방법이 아닌 여러 가지 방법으로 계산함으로써 기를 수 있는 능력은 A 능력이다. (수학 교과 역량)",
                Answer = "창의·융합"
            },

            new QuestSet
            {
                Quest = "그림이 나타내는 수학적 의미를 파악하고 분수의 나눗셈을 곱셈으로 바꾸는 활동을 통해 A 능력을 기를 수 있다.",
                Answer = "의사소통"
            },

            new QuestSet
            {
                Quest = "범자연수와 마찬가지로 소수는 십진기수법을 따르기 때문에 범자연수의 덧셈과 뺄셈 원리를 학습한 학생들은 A에서도 같은 원리가 적용되므로 보다 쉽게 원리를 이해하고 계산할 수 있다.",
                Answer = "소수의 덧셈과 뺄셈"
            },

            new QuestSet
            {
                Quest = "소수의 덧셈과 뺄셈의 두 가지 접근 방법은 다음과 같다. ① A → 소수의 자릿값에 대응하여 소수의 숫자들을 열로 배열하고 각 열에 있는 수를 더하는 방법 ② B → 1.34 + 2.61 = 134/100 + 261/100로 계산, 이 과정에서 1.34 = 1 + 0.3 + 0.04와 같이 이해할 수 있도록 함께 지도한다.",
                Answer = "범자연수의 덧셈과 뺄셈, 분수의 이용"
            },

            new QuestSet
            {
                Quest = "소수 학습을 위한 시각적 모델로는 A, B(영역 모델, 자릿값 개념에 좋음), C(넓이 모델과 길이 모델과도 쓰인다)가 있다.",
                Answer = "수 모형, 소수 정사각형, 수직선"
            },

            new QuestSet
            {
                Quest = "소수의 덧셈 뺄셈을 위한 형식화 발문을 쓰시오.",
                Answer = "소수점끼리 맞추어 세로로 쓰고 같은 자리 수끼리 더합니다. / 뺍니다."
            },

            new QuestSet
            {
                Quest = "[4수01-17] A에서 소수의 B의 계산원리를 이해하고 그 계산을 할 수 있다.",
                Answer = "소수 두 자리 수의 범위, 덧셈과 뺄셈"
            },

            new QuestSet
            {
                Quest = "소수의 덧셈과 뺄셈은 A 수준에서 간단히 다룬다.",
                Answer = "계산원리를 이해하는"
            },

            new QuestSet
            {
                Quest = "수와 연산 영역의 문제 상황에 적합한 A을 지도하고, B을 설명하게 하여 C 능력을 기르게 한다.",
                Answer = "문제 해결 전략, 문제 해결 과정, 문제 해결"
            },

            new QuestSet
            {
                Quest = "자연수와 마찬가지로 A을 따르는 소수는 자연수, 자연수의 덧셈과 뺄셈에서 학습한 원리를 이해하여 소수, 소수의 덧셈과 뺄셈을 학습할 수 있다.",
                Answer = "십진기수법"
            },

            new QuestSet
            {
                Quest = "소수의 덧셈과 뺄셈을 지도할 때 A하도록 함으로써 자릿값을 고려하지 않고 기계적으로 계산하여 발생하는 오류를 예방할 수 있다.",
                Answer = "계산 결과를 어림"
            },

            new QuestSet
            {
                Quest = "4-2-3. 소수의 덧셈과 뺄셈 단원 학습 목표 ① A와 B를 이해하여 쓰고 읽을 수 있다. ② 소수의 크기를 비교하는 방법을 알고 크기를 비교할 수 있다. ③ C를 알 수 있다. ④ 소수 한 자리 수와 소수 두 자리 수, 1보다 큰 소수 두 자리 수 범위의 덧셈·뺄셈 계산 원리를 이해하고 계산할 수 있다. ⑤ 소수의 덧셈과 뺄셈을 활용하여 문제를 해결할 수 있다.",
                Answer = "소수 두 자리 수, 소수 세 자리 수, 소수 사이의 관계",
                Reference = "소수 사이의 관계는 자릿값의 원리를 이용하여 알 수 있다."
            },

            new QuestSet
            {
                Quest = "소수를 학습할 때는 이미 학습한 자연수 체계와 비교하여 공통점을 활용하여 지도하는 것이 효과적이다. 소수와 자연수 모두 십진기수법을 따르기 때문에 A. 그러나 소수를 B할 때 자연수와 비슷하게 생각해서 38이 4보다 더 크기 때문에 0.38이 0.4보다 더 크다고 생각할 수 있으므로 주의할 필요가 있다.",
                Answer = "오른쪽에서 왼쪽으로는 10배씩 증가하고 왼쪽에서 오른쪽으로는 1/10으로 줄어든다, 비교"
            },

            new QuestSet
            {
                Quest = "자릿값의 관계를 확장하기 위해 자릿값 도표에 구체적인 물체 또는 그림을 이용하는 것은 자릿값을 이해하는 데 도움이 된다. 자릿값 도표에서는 A하여 소수의 크기 비교는 B 상태에서 이루어져야 한다는 것을 이해할 수 있도록 한다.",
                Answer = "소수점의 위치를 같게, 소수점의 위치가 일관된"
            },

            new QuestSet
            {
                Quest = "소수의 덧셈과 뺄셈의 계산에서 자연수의 계산처럼 오른쪽으로 숫자를 맞추어 계산하는 경우, A과 비교하여 공통점과 차이점을 찾아보도록 한다. 또한 B나 C을 이용하여 각 자리에 따라 더하는 과정을 통해 소수의 덧셈과 뺄셈의 원리를 이해할 수 있도록 한다. 계산을 하기 전에 D을 해 보도록 하여 E을 고려하지 않은 기계적인 계산의 오류를 해결할 수 있다.",
                Answer = "자연수의 덧셈과 뺄셈, 모눈종이, 수 모형, 어림, 자릿값"
            },

            new QuestSet
            {
                Quest = "받아올림과 받아내림이 있는 소수의 덧셈과 뺄셈에서 오류가 생기는 경우, A나 B으로 직접 활동해보면서 C이 D개가 되면 E이, E이 D개가 되면 F이 된다는 것을 익힐 수 있도록 한다.",
                Answer = "모눈종이, 수 모형, 0.01, 10, 0.1, 1"
            },

            new QuestSet
            {
                Quest = "서로 다른 자릿수의 소수의 덧셈과 뺄셈에서 오류가 생기는 경우, A을 기준으로 맞추어 계산하거나 받아내림의 오류가 동시에 나타날 수 있다. 다양한 활동(B, C)을 통해 기초능력을 다지도록 한다.",
                Answer = "오른쪽, 모눈종이, 수 모형",
                Reference = "뺄셈의 경우 2.5 - 0.25의 경우에는 소수의 크기 비교에서 학습한 '소수는 필요한 경우 오른쪽 끝에 0을 붙여서 나타낼 수 있다.' 내용을 다시 한 번 짚어주며 2.5를 2.50으로 나타내어 계산하도록 하여 오류를 줄인다."
            },

            new QuestSet
            {
                Quest = "소수 사이의 관계를 서술하시오.",
                Answer = "소수를 10배 하면 소수점을 기준으로 수가 왼쪽으로 한 자리씩 이동하고, 소수의 1/10을 구하면 소수점을 기준으로 수가 오른쪽으로 한 자리씩 이동합니다."
            },

            new QuestSet
            {
                Quest = "모눈종이에 나타내어 보는 활동을 통해 소수 한 자리 수의 덧셈 계산 원리를 이해함으로써 A 능력을 기를 수 있다.",
                Answer = "정보처리"
            },

            new QuestSet
            {
                Quest = "자연수의 뺄셈에서의 A이 소수에도 적용됨을 학생 스스로 발견할 수 있도록 한다.",
                Answer = "받아내림"
            },

            new QuestSet
            {
                Quest = "소수의 덧셈과 뺄셈 상황에서 제시되는 수치는 단위를 생각하기보다는 A에 집중하여 생각할 수 있도록 지도한다.",
                Answer = "소수"
            },

            new QuestSet
            {
                Quest = "소수 두 자리 수의 덧셈의 세로셈 발문을 서술하시오.",
                Answer = "소수점끼리 맞추어 세로로 쓰고 소수 둘째 자리의 합을 구한다. 그 다음 소수 첫째 자리 합을 구하고 일의 자리의 합을 구한다."
            },

            new QuestSet
            {
                Quest = "자연수처럼 오른쪽을 기준으로 계산하는 오류를 줄일 수 있는 방법 A, B를 서술하시오.",
                Answer = "서로 자릿수가 다른 소수의 덧셈에서 어림하기, 소수의 자릿값에 대한 개념을 분명히 하기"
            },

            new QuestSet
            {
                Quest = "소수 두 자리 수의 두 소수의 뺄셈 세로셈 발문을 서술하시오. (예를 들어 0.94 - 0.78의 상황)",
                Answer = "소수점끼리 맞추어 세로로 쓰고 소수 둘째 자리의 차를 구한다. 그 다음 받아내림을 한 소수 첫째자리의 차를 구하고 일의 자리의 차를 구한다."
            },

            new QuestSet
            {
                Quest = "자릿수가 서로 다른 소수의 계산을 못할 시 지도 방안을 서술하시오.",
                Answer = "소수점의 위치를 같게 한 후 계산할 수 있도록 지도한다."
            },

            new QuestSet
            {
                Quest = "소수 곱셈의 지도 순서는 A → B → C이다.",
                Answer = "(소수) × (자연수), (자연수) × (소수), (소수) × (소수)"
            },

            new QuestSet
            {
                Quest = "(소수) × (자연수)의 원리는 A의 개념을 사용하고, 소수를 B로 고쳐 B의 곱셈 원리를 적용하는 방법으로 지도한다.",
                Answer = "동수누가의 개념, 분수"
            },

            new QuestSet
            {
                Quest = "(소수) × (자연수)를 형식화하려면 A 알고리즘을 이용한다. 소수점을 생각하지 않고 (자연수) × (자연수) 를 계산한 후, B의 소수점 이하의 자릿수만큼 곱의 소수점 자리를 옮긴다. ",
                Answer = "자연수 곱셈 계산, 피승수",
                Reference = "소수 곱셈의 알고리즘은 자연수 곱셈의 알고리즘을 그대로 적용할 수 있다."
            },

            new QuestSet
            {
                Quest = "자연수 곱셈 알고리즘의 순서는 다음과 같다. ① A을 생각하지 않고 (자연수) × (자연수)로 계산 ② B와 C의 A 아래 자릿수의 합만큼 곱의 A의 자리를 옮긴다.",
                Answer = "소수점, 피승수, 승수"
            },

            new QuestSet
            {
                Quest = "(자연수) × (소수)의 원리는 다음과 같다. A 곱셈의 계산 원리를 적용하고, 소수를 A로 고쳐서 A의 곱셈으로 이해한다.",
                Answer = "분수",
                Reference = "승수가 소수이면 동수누가 X"
            },

            new QuestSet
            {
                Quest = "(자연수) × (소수)를 형식화할 때 A 곱셈 계산 알고리즘을 이용한다. 소수점을 생각하지 않고 (자연수) × (자연수)를 계산한 후, B의 소수점 이하의 자릿수만큼 곱의 소수점 자리를 옮긴다.",
                Answer = "자연수, 승수"
            },

            new QuestSet
            {
                Quest = "(소수) × (소수) 의 원리는 A 곱셈의 계산 원리를 적용한다. 소수를 A로 고쳐서 A의 곱셈으로 이해한다.",
                Answer = "분수"
            },

            new QuestSet
            {
                Quest = "(소수) × (소수)를 형식화 할 때는 A 곱셈 알고리즘을 이용한다. B을 생각하지 않고 (자연수) × (자연수)를 계산한 후, C와 D의 B 이하의 자릿수의 합만큼 소수점 자리를 옮긴다.",
                Answer = "자연수, 소수점, 피승수, 승수"
            },

            new QuestSet
            {
                Quest = "[6수01-13] A의 계산원리를 이해한다.",
                Answer = "소수의 곱셈"
            },

            new QuestSet
            {
                Quest = "소수의 곱셈과 나눗셈의 A에서 간단히 다루고, B은 C를 사용하게 할 수 있다.",
                Answer = "계산원리를 이해하는 수준, 복잡한 계산, 계산기"
            },

            new QuestSet
            {
                Quest = "소수 표기 방법의 장점은 다음과 같다. ① 분모보다 A를 비교하기 더 쉬움 ② B 분수의 덧셈·뺄셈보다 소수의 덧셈·뺄셈이 계산하기 더 쉬움",
                Answer = "수의 크기, 분모가 다른"
            },

            new QuestSet
            {
                Quest = "소수의 나눗셈 지도 순서는 A - B - C - D이다.",
                Answer = "(소수) ÷ (자연수), (자연수) ÷ (자연수)의 몫을 소수로 나타내기, (소수) ÷ (소수), (자연수) ÷ (소수)"
            },

            new QuestSet
            {
                Quest = "소수의 나눗셈을 도입할 때, 나누는 수가 자연수인 나눗셈은 주로 A로 도입하고, 나누는 수가 소수인 경우는 B(C)로 접근한다.",
                Answer = "등분제, 포함제, 동수누감"
            },

            new QuestSet
            {
                Quest = "(소수) ÷ (자연수) 원리 이해 지도 방법 3가지는 다음과 같다. ① A으로 도입 (모델 이용, 이중 A 사용) ② B 이용 (=자릿값의 원리) → B과 소수 나눗셈의 피제수와 몫의 관계 이해 ③ C로 고쳐서 계산 (C 나눗셈 계산 원리 이용)",
                Answer = "수직선, 자연수의 나눗셈, 분수"
            },

            new QuestSet
            {
                Quest = "(소수) ÷ (자연수)의 계산 방법은 A의 나눗셈을 이용하는 것과 B의 나눗셈을 이용하는 것 2가지가 있다.",
                Answer = "자연수, 분수"
            },

            new QuestSet
            {
                Quest = "소수의 나눗셈을 할 때 각 자리에서 나누어 떨어지지 않는 경우, 자연수의 나눗셈과 같은 방법으로 계산하고 A의 소수점 위치에 맞춰 결과값에 소수점을 올려 찍는다.",
                Answer = "나누어지는 수"
            },

            new QuestSet
            {
                Quest = "몫이 1보다 작은 소수인 경우 (제수가 피제수보다 클 경우) 몫의 A의 자리에 B을 쓴다. C을 찍은 다음 자연수의 나눗셈과 같은 방법으로 계산한다.",
                Answer = "일, 0, 소수점"
            },

            new QuestSet
            {
                Quest = "소수점 아래 0을 내려 계산해야 하는 경우, 나누어 떨어지지 않는 경우에는 나누어 떨어질 때까지 A의 B 끝자리에 C이 계속 있는 것으로 생각한다.",
                Answer = "나누어지는 수, 오른쪽, 0"
            },

            new QuestSet
            {
                Quest = "비례 모델을 이용한 소수의 나눗셈 지도의 장점은 다음과 같다. ① 나눗셈 계산 과정에서 나오는 각각의 숫자가 실제로는 어떠한 A를 나타내는지 파악하게 할 수 있다. ② 계산 알고리즘이 왜 성립하는지에 대한 B를 증진할 수 있다.",
                Answer = "크기, 이해"
            },

            new QuestSet
            {
                Quest = "비비례 모델을 이용한 나눗셈 지도의 장점은 A와 B 사이의 중간 가교 역할을 수행할 수 있다는 것이다.",
                Answer = "비례 모델, 추상화된 알고리즘",
                Reference = "자릿값"
            },

            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수) 원리 이해를 지도할 때, ① A으로 바꾸어 계산한다. ② B 이용하여 계산한다.",
                Answer = "분수의 나눗셈, 자릿값의 원리"
            },

            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수)를 형식화할 때 지도 방법은, 더 이상 계산할 수 없을 때까지 A을 하고, 더 내릴 수가 없을 경우 B을 내려 계산하는 것이다.",
                Answer = "내림, 0"
            },

            new QuestSet
            {
                Quest = "소수의 나눗셈에서 검산을 할 때에는 소수점을 이동한 식으로 해야 한다. (O 아니면 X)",
                Answer = "X",
                Reference = "소수점을 이동하지 않은 처음 식으로 진행한다. 예) 1.3 ÷ 0.2 = 6...0.1 → 0.2 × 6 + 0.1 = 1.3"
                 
            },

            new QuestSet
            {
                Quest = "[6수01-14] '(자연수)÷(자연수)', '(소수)÷(자연수)'에서 A을 소수로 나타낼 수 있다.",
                Answer = "나눗셈의 몫"
            },

            new QuestSet
            {
                Quest = "[6수01-16] 소수의 곱셈과 나눗셈의 A를 B할 수 있다.",
                Answer = "계산 결과, 어림"
            },

            new QuestSet
            {
                Quest = "소수의 곱셈과 나눗셈의 A에서 간단히 다루고, B은 C를 사용하게 할 수 있다.",
                Answer = "계산원리, 복잡한 계산, 계산기"
            },

            new QuestSet
            {
                Quest = "(소수) ÷ (자연수) 에서는 실생활 상황을 식을 세워 A해보고 B과 C으로 바꾸어서 계산하여 확인하는 활동을 한다.",
                Answer = "어림, 자연수의 나눗셈, 분수의 나눗셈",
                Reference = "자연수의 나눗셈 → 피제수와 몫의 관계를 이해한다. 분수의 나눗셈 → 소수를 분수로 바꾼다."
            },

            new QuestSet
            {
                Quest = "6-1-3.소수의 나눗셈 단원의 학습 목표는 다음과 같다. ① A을 이용하여 소수의 나눗셈을 계산할 수 있다. ② 각 자리에서 B는 (소수) ÷ (자연수)를 계산할 수 있다. ③ 몫이 1보다 작은 소수인 (소수) ÷ (자연수)를 계산할 수 있다. ④ 소수점 아래 C 계산해야 하는 (소수) ÷ (자연수)를 계산할 수 있다. ⑤ 몫의 소수 첫째 자리에 D이 있는 (소수) ÷ (자연수)를 계산할 수 있다. ⑥ (자연수) ÷ (자연수)의 몫을 소수로 나타낼 수 있다. ⑦ 몫을 E하여 F가 바른지 확인할 수 있다.",
                Answer = "자연수, 나누어떨어지지 않, 0을 내려, 0, 어림, 소수점 위치"
            },

            new QuestSet
            {
                Quest = "1.32를 132/100으로 변환하지 못할 때 지도 방안은 다음과 같다. 소수를 A에 표시해보고 이를 다시 B로 표현하도록 안내한다.",
                Answer = "모눈종이, 분수"
            },

            new QuestSet
            {
                Quest = "자연수의 나눗셈과 소수의 나눗셈의 피제수와 몫의 관계를 파악하지 못할 때 지도 방안을 서술하시오.",
                Answer = "이 관계를 파악하려면 6.48이 648의 몇 배인지를 계산할 수 있어야 한다. 이러한 계산이 어려운 학생들에게는 계산 부담을 줄여주기 위하여 계산기를 사용하여 6.48이 648의 0.01배임을 알아내고 이를 분수로 변환하여 1/100배임을 탐구해 볼 수 있도록 한다."
            },

            new QuestSet
            {
                Quest = "36.3 ÷ 3을 단위를 변환하여 366 ÷ 3을 이용하여 계산하기는 A을 이용한 것이다.",
                Answer = "자연수의 나눗셈",
                Reference = "몫과 피제수의 관계를 이용한다. 예) 3.66은 366의 1/100배이므로 몫도 1/100배가 되도록 나타내면 됩니다."
            },

            new QuestSet
            {
                Quest = "피제수의 몫의 관계를 서술하시오.",
                Answer = "나누어지는 수가 1/10배, 1/100배가 되면 몫도 1/10배, 1/100배가 되므로 소수점은 왼쪽으로 한 칸, 두 칸 이동합니다."
            },

            new QuestSet
            {
                Quest = "25.26 ÷ 3의 계산 방법은 다음과 같다. ① 분수의 나눗셈 이용 : A, ② 자연수의 나눗셈 이용 : B을 이용하여 계산 (피제수와 몫 비교하여 둘 사이 관계 이용)",
                Answer = "25.26 ÷ 3 = 2526/100 ÷ 3 = 2526 ÷ 3 / 100 = 842 / 100 = 8.42, 2526 ÷ 3"
            },

            new QuestSet
            {
                Quest = "(소수) ÷ (자연수) 세로셈 발문을 서술하시오.",
                Answer = "자연수의 나눗셈과 같은 방법으로 계산하고, 나누어지는 수의 소수점 위치에 맞춰 결괏값에 소수점을 올려 찍습니다."
            },

            new QuestSet
            {
                Quest = "분수의 나눗셈으로 계산하는 원리를 이해하지 못할 경우, A으로 (소수) ÷ (자연수) 알아보는 활동을 통해 보충할 수 있다.",
                Answer = "수 모형"
            },

            new QuestSet
            {
                Quest = "(소수) ÷ (자연수) 지도할 때 (자연수) ÷ (자연수) 알고리즘에서는 나타나지 않는 다음 절차에 중점을 두어 지도한다. ① 몫의 A은 나누어지는 수의 A을 올려 찍는다. ② 자연수 부분이 비어 있을 경우 B에 0을 찍는다.",
                Answer = "소수점, 일의 자리"
            },
          
            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수) 알고리즘에서는 나타나지 않는 소수점 아래에서 나누어떨어지지 않는 경우 A에 중점을 두어 지도한다.",
                Answer = "0을 내려 계산하는 것"
            },

            new QuestSet
            {
                Quest = "몫의 소수 첫째 자리에 0이 있는 (소수) ÷ (자연수)의 세로셈 발문을 서술하시오.",
                Answer = "계산하는 중에 소수 첫째자리에서 수를 하나 내려도 나누어야 할 수가 나누는 수보다 작은 경우에는 몫의 소수 첫째자리에 0을 쓰고 수(나누어지는 수의 소수 둘째자리)를 하나 더 내려 계산합니다."
            },

            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수) 세로셈 계산 발문을 서술하시오.",
                Answer = "세로로 계산한 뒤, 더 이상 계산할 수 없을 때까지 내림을 하고 내릴 수가 없는 경우 0을 내려 계산한다.",
                Reference = "나뉠 수의 오른쪽 끝자리에 0이 계속 있다고 생각한다."

            },

            new QuestSet
            {
                Quest = "(자연수) ÷ (자연수) 세로셈 계산 시 강조할 점은 다음과 같다. ① 몫의 소수점은 A에서 올려서 찍는다. ② 소수점 아래에서 내릴 수가 없는 경우 B을 내려 계산한다.",
                Answer = "자연수 바로 뒤, 0"
            },

            new QuestSet
            {
                Quest = "올바른 어림값을 구하는 방법은 무엇인지 생각해볼 수 있는 기회를 제공하여 A으로 대략적인 B을 구하는 방법과 이를 이용한 올바른 소수점 찾기 방법을 C할 기회를 제공한다.",
                Answer = "어림, 몫, 유추",
                Reference = "소수점 위치를 알고리즘에 따라 처리하는 것뿐 아니라 어림으로 이를 검증하는 방법을 제공하는 것은 소수점 오류를 줄이는 데 도움이 된다. 단, 어림을 통한 소수점 찾기는 어디까지나 보조적인 수단이다."
            },

            new QuestSet
            {
                Quest = "소수점을 바르게 표시하지 못하는 경우의 지도방안을 서술하시오.",
                Answer = "나누어지는 수가 자연수가 아닌 소수라는 것을 안내하며 어림을 하여 소수점 위치를 예상해보게 한다."
            },

            new QuestSet
            {
                Quest = "소수점의 위치가 같을 경우, (소수) ÷ (소수) 원리 이해 지도 방법 2가지는 다음과 같다. ① A 적용 ② B으로 바꾸어 계산 (소수→분수)",
                Answer = "동수누감의 원리, 자연수의 나눗셈",
                Reference = "제수가 소수인 경우"
            },

            new QuestSet
            {
                Quest = "소수점의 위치가 같을 경우, (소수) ÷ (소수) 형식화 지도 방법을 서술하시오.",
                Answer = "나누는 수와 나뉠 수의 소수점을 각각 오른쪽으로 n자리씩 옮겨서 계산한다.",
                Reference = "제수, 피제수"
            },

            new QuestSet
            {
                Quest = "소수점의 위치가 다를 경우, (소수) ÷ (소수) 원리 이해 지도 방법 2가지는 다음과 같다. ① A 사용 (피제수 > 제수일 경우만) ② B 계산 원리를 적용 ",
                Answer = "동수누감의 원리, 분수의 나눗셈"
            },

            new QuestSet
            {
                Quest = "나누어지는 수의 소수점 아래 자릿수가 나누는 수의 소수점 아래 자릿수보다 많을 경우 지도 방안을 서술하시오.",
                Answer = "나누는 수를 자연수로 고쳐서 계산한다."
            },

            new QuestSet
            {
                Quest = "나누어지는 수의 소수점 아래 자릿수가 나누는 수의 소수점 아래 자릿수보다 적을 경우 지도 방안을 서술하시오.",
                Answer = "나누는 수를 자연수로 고쳐서 계산하나 나누어지는 수의 0을 추가하는 상황 발생"
            },

            new QuestSet
            {
                Quest = "소수점의 위치가 다를 경우, (소수) ÷ (소수) 형식화 지도 방법은 다음과 같다. ① A가 B가 되도록 나누는 수와 나뉠 수의 소수점을 각각 오른쪽으로 n자리씩 옮겨서 계산한다. ② C가 B가 되도록 나누는 수와 나뉠 수의 소수점을 각각 오른쪽으로 n자리씩 옮겨서 계산한다.",
                Answer = "나누어지는 수, 자연수, 나누는 수"
            },

            new QuestSet
            {
                Quest = "나머지가 없는 (자연수) ÷ (소수) 원리 이해 지도 방법은 다음과 같다. ① A 적용 ② B 계산 원리 적용",
                Answer = "동수누감의 원리, 분수의 나눗셈"
            },

            new QuestSet
            {
                Quest = "나머지가 없는 (자연수) ÷ (소수) 형식화 지도 방법은 다음과 같다. A가 B가 되도록 나누는 수와 나뉠 수의 소수점을 각각 오른쪽으로 n자리씩 옮겨서 계산한다.",
                Answer = "나누는 수, 자연수"
            },

            new QuestSet
            {
                Quest = "[6수01-15] A가 B인 나눗셈의 계산 원리를 이해한다.",
                Answer = "나누는 수, 소수"
            },

            new QuestSet
            {
                Quest = "[6수01-16] 소수의 곱셈과 나눗셈의 A를 B할 수 있다.",
                Answer = "계산 결과, 어림"
            }






        };
       
    }
}
